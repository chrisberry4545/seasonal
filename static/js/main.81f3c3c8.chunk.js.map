{"version":3,"sources":["../../shared-frontend-redux/dist/selectors/ui.selectors.js","components-layout/SummaryColumn/index.ts","services/image-loader.service.ts","components-elements/BackgroundImageWithLoadingSpinner/BackgroundImageWithLoadingSpinner.tsx","components-layout/ImageGridItem/ImageGridItem.tsx","../../shared-frontend-redux/dist/selectors/current-food-details.selectors.js","../../shared-frontend-redux/dist/selectors/all-basic-season.selectors.js","../../shared-frontend-redux/dist/selectors/all-seasons-with-food.selectors.js","../../shared-frontend-redux/dist/selectors/country.selectors.js","../../shared-frontend-redux/dist/selectors/current-season.selectors.js","../../shared-frontend-redux/dist/selectors/settings.selectors.js","components-layout/ImageGrid/ImageGrid.tsx","components-layout/SummaryColumn/SummaryColumn.tsx","components-layout/SummaryColumnList/index.ts","components-layout/SummaryColumnList/SummaryColumnList.tsx","components-layout/SeasonNameView/SeasonNameView.tsx","../../shared-frontend-redux/dist/actions/index.js","../../shared-frontend-redux/dist/actions/all-basic-season.actions.js","../../shared-frontend-redux/dist/actions/all-season-with-food.actions.js","../../shared-frontend-redux/dist/actions/all-seasons-with-recipes.actions.js","../../shared-frontend-redux/dist/actions/country.actions.js","../../shared-frontend-redux/dist/actions/current-food-details.actions.js","../../shared-frontend-redux/dist/actions/current-season.actions.js","../../shared-frontend-redux/dist/actions/settings.actions.js","../../shared-frontend-redux/dist/actions/init.actions.js","../../shared-frontend-redux/dist/actions/season-name.actions.js","../../shared-frontend-redux/dist/actions/ui.actions.js","../../shared-frontend-redux/dist/selectors/combined-selectors/index.js","../../shared-frontend-redux/dist/selectors/combined-selectors/all-seasons-with-food-and-search.selectors.js","../../shared-frontend-utilities/dist/get-nearest-region-from-lat-lng.js","../../shared-frontend-utilities/dist/name-search.js","../../shared-frontend-utilities/dist/retrieve-backend-data.js","../../shared-models/dist/enums/index.js","../../shared-models/dist/enums/diet-type.enum.js","../../shared-models/dist/enums/user-roles.enum.js","../../shared-models/dist/config/index.js","../../shared-frontend-redux/dist/selectors/combined-selectors/current-country.selectors.js","../../shared-frontend-redux/dist/selectors/combined-selectors/current-food-data-and-basic-season.selectors.js","../../shared-frontend-redux/dist/selectors/combined-selectors/current-food-details-data-with-search.selectors.js","../../shared-frontend-redux/dist/selectors/combined-selectors/current-season-data-with-search.selectors.js","../../shared-frontend-redux/dist/epics/index.js","../../shared-frontend-redux/dist/epics/current-season-with-food.epics.js","../../shared-frontend-redux/dist/epics/current-season-with-recipes.epics.js","components-layout/index.ts","../../shared-frontend-redux/dist/epics/init.epics.js","../../shared-frontend-redux/dist/epics/all-basic-season.epics.js","../../shared-frontend-redux/dist/epics/all-seasons-with-food.epic.js","../../shared-frontend-redux/dist/epics/all-seasons-with-recipes.epic.js","../../shared-frontend-redux/dist/epics/current-food-details.epics.js","../../shared-frontend-redux/dist/epics/season-name.epics.js","../../shared-frontend-redux/dist/epics/country.epics.js","../../shared-frontend-redux/dist/reducers/index.js","../../shared-frontend-redux/dist/reducers/current-food-details.reducer.js","../../shared-frontend-redux/dist/reducers/current-season.reducer.js","../../shared-frontend-redux/dist/reducers/all-basic-seasons.reducer.js","../../shared-frontend-redux/dist/reducers/all-seasons.reducer.js","../../shared-frontend-redux/dist/reducers/settings.reducer.js","../../shared-frontend-redux/dist/reducers/ui.reducer.js","../../shared-frontend-redux/dist/reducers/country.reducer.js","../../shared-frontend-redux/dist/index.js","../../shared-frontend-utilities/dist/index.js","../../shared-models/dist/index.js","../../shared-frontend-redux/dist/selectors/index.js","components-main/AboutEatSeasonal/AboutEatSeasonal.tsx","components-main/AndroidAppDownload/AndroidAppDownload.tsx","components-main/BottomTabs/BottomTabs.tsx","store/actions/route.actions.ts","store/actions/web-ui.actions.ts","const/tabs.enum.ts","const/urls.const.ts","store/selectors/route.selectors.ts","store/selectors/web-ui.selectors.ts","store/epics/tracking.epics.ts","store/epics/index.ts","store/epics/route.epics.ts","store/epics/settings.epics.ts","store/reducers/web-ui.reducer.ts","store/reducers/index.ts","components-main/BottomTabs/BottomTabs.connector.ts","components-main/CurrentSeasonName/CurrentSeasonName.connector.ts","components-main/CurrentSeasonName/CurrentSeasonName.tsx","components-main/DietaryFilters/DietaryFilters.tsx","components-main/DietaryFilters/DietaryFilters.connector.ts","components-main/FoodDetailsLoader/FoodDetailsLoader.connector.ts","components-main/FoodDetailsLoader/FoodDetailsLoader.tsx","components-main/FoodDetailsTopSection/FoodDetailsTopSection.connector.ts","components-main/FoodDetailsTopSection/FoodDetailsTopSection.tsx","components-main/FoodTable/FoodTable.connector.ts","components-main/FoodTable/FoodTable.tsx","components-main/Header/Header.connector.ts","components-main/Header/Header.tsx","components-main/IOSAppDownload/IOSAppDownload.tsx","components-layout/PageLayout/PageLayout.tsx","components-main/SeasonMenu/SeasonMenu.tsx","components-main/SeasonMenu/SeasonMenu.connector.ts","components-main/PageWithMenu/PageWithMenu.tsx","components-main/RecipesForFood/RecipesForFood.connector.ts","components-main/RecipesForFood/RecipesForFood.tsx","components-main/RecipeTable/RecipeTable.connector.ts","components-main/RecipeTable/RecipeTable.tsx","components-main/SearchBar/SearchBar.tsx","components-main/SearchBar/SearchBar.connector.ts","components-main/SeasonsForFood/SeasonsForFood.connector.ts","components-main/SeasonsForFood/SeasonsForFood.tsx","components-main/ViewWebAppVersion/ViewWebAppVersion.connector.ts","components-main/ViewWebAppVersion/ViewWebAppVersion.tsx","components-main/ViewAppLinks/ViewAppLinks.tsx","components-main/WhyEatSeasonal/WhyEatSeasonal.tsx","components-main/AllSeasons/AllSeasons.connector.ts","components-main/AllSeasons/AllSeasons.tsx","components-main/AllSeasonsGraph/AllSeasonsGraph.connector.ts","components-main/AllSeasonsGraph/AllSeasonsGraph.tsx","components-pages/FoodDetailsPage/FoodDetailsPage.tsx","components-pages/FoodTablePage/FoodTablePage.tsx","components-pages/IntroPage/IntroPage.tsx","components-pages/AllSeasonsPage/AllSeasonsPage.tsx","components-app/App.tsx","serviceWorker.js","index.tsx","helpers/Animations/animations.const.ts","helpers/Animations/fade.animations.ts","helpers/functions/make-promise-cancelable.ts","helpers/functions/stored-data.ts","helpers/index.ts"],"names":["Object","defineProperty","exports","value","reselect_1","__webpack_require__","selectUiState","state","ui","selectIsMenuOpen","createSelector","uiState","isMenuOpen","selectCurrentSearchTerm","searchTerm","toLowerCase","selectIsSearchBarVisible","isSearchBarVisible","selectIsLocationSettingsPopupVisible","isLocationSettingsPopupVisible","selectIsCountryChangePromptVisible","isCountryChangePromptVisible","_SummaryColumn__WEBPACK_IMPORTED_MODULE_0__","d","__webpack_exports__","_SummaryColumn_interface__WEBPACK_IMPORTED_MODULE_1__","o","loadingImages","loadImage","imageSrc","Promise","resolve","image","document","createElement","src","push","addEventListener","createImageOnLoadPromise","FadeInOutAnimation","fadeInOutAnimation","BackgroundImageWithLoadingSpinner","_Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadImagePromise","isVisible","inherits","createClass","key","_this2","makePromiseCancelable","promise","then","setState","cancel","backgroundImage","concat","skipAnimation","react_default","a","className","style","getBackgroundImageStyle","react_pose_es","children","dist","Component","ImageGridItem_ImageGridItem_ImageGridItem","ImageGridItem","_ref","id","imageUrlSmall","onClick","name","BackgroundImageWithLoadingSpinner_BackgroundImageWithLoadingSpinner_BackgroundImageWithLoadingSpinner","_toConsumableArray","selectCurrentFoodDetailsState","currentFoodDetailsData","selectIsCurrentFoodDetailsLoading","currentFoodDetails","isLoading","selectCurrentFoodDetails","data","selectCurrentFoodDetailsId","selectCurrentFoodDetailsName","selectCurrentFoodDetailsImageUrl","selectCurrentFoodDetailsSeasons","seasons","selectCurrentFoodDetailsRecipes","primaryFoodInRecipe","secondaryFoodInRecipe","selectAllBasicSeasonDataState","allBasicSeasonData","selectIsBasicSeasonsLoading","selectAllBasicSeasons","selectAllSeasonsWithFoodState","allSeasonsWithFoodData","selectIsAllSeasonsFoodLoading","isFoodLoading","selectIsAllSeasonsRecipesLoading","isRecipesLoading","selectAllSeasons","selectNumberOfAllSeasonsInView","numberOfSeasonsInView","selectHasMoreSeasonsInAllSeasonsView","numberOfAllSeasons","allSeasons","length","selectCountryState","countryData","selectAreCountriesLoading","countryState","selectCountries","selectAllRegions","countries","reduce","allRegions","nextCountry","regions","selectCurrentSeasonWithFoodState","currentSeasonData","selectIsCurrentSeasonFoodLoading","selectIsCurrentSeasonRecipesLoading","selectCurrentSeason","selectCurrentSeasonFood","currentSeason","food","selectCurrentSeasonRecipes","recipes","selectCurrentSeasonRecipesById","recipeId","find","selectCurrentSeasonIndex","currentSeasonIndex","selectCurrentSeasonName","selectSettingsState","settings","selectSettingsDietType","dietType","selectSettingsRegionCode","selectedRegionCode","selectSettingsUserId","userId","selectSettingsTimesAppStarted","timesAppStarted","ImageGrid","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_ImageGridItem_ImageGridItem__WEBPACK_IMPORTED_MODULE_2__","_chrisb_dev_seasonal_shared_frontend_components__WEBPACK_IMPORTED_MODULE_3__","map","item","assign","SummaryColumn","_chrisb_dev_seasonal_shared_frontend_components__WEBPACK_IMPORTED_MODULE_2__","imageUrl","text","title","_SummaryColumnList_interface__WEBPACK_IMPORTED_MODULE_0__","_SummaryColumnList__WEBPACK_IMPORTED_MODULE_1__","SummaryColumnList","_SummaryColumn__WEBPACK_IMPORTED_MODULE_2__","columns","column","index","SeasonNameView","__export","m","p","hasOwnProperty","SET_ALL_BASIC_SEASONS_START","setAllSeasonsStart","type","SET_ALL_BASIC_SEASONS_SUCCESS","setAllBasicSeasonsSuccess","seasonData","SET_ALL_SEASONS_WITH_FOOD_START","setAllSeasonsWithFoodStart","SET_ALL_SEASONS_WITH_FOOD_SUCCESS","setAllSeasonsWithFoodSuccess","INCREASE_NUMBER_OF_ALL_FOOD_SEASONS_IN_VIEW","increaseNumberOfAllFoodSeasonsInView","SET_ALL_SEASONS_WITH_RECIPES_START","setAllSeasonsWithRecipesStart","SET_ALL_SEASONS_WITH_RECIPES_SUCCESS","setAllSeasonsWithRecipesSuccess","GET_COUNTRIES_START","getCountriesStart","GET_COUNTRIES_SUCCESS","getCountriesSuccess","SET_REGION","setRegion","regionCode","USER_REGION_DETECTED","userRegionDetected","error","SET_USER_REGION_DETECTED","setUserRegionDetected","SET_CURRENT_FOOD_DETAILS_START","setCurrentFoodDetailsStart","foodItemId","SET_CURRENT_FOOD_DETAILS_ON_DIET_CHANGE","setCurrentFoodDetailsOnDietChange","SET_CURRENT_FOOD_DETAILS_SUCCESS","setCurrentFoodDetailsSuccess","currentFoodData","SET_CURRENT_SEASON_WITH_FOOD_START","setCurrentSeasonWithFoodStart","SET_CURRENT_SEASON_WITH_FOOD_SUCCESS","setCurrentSeasonWithFoodSuccess","SET_CURRENT_SEASON_WITH_RECIPES_START","setCurrentSeasonWithRecipesStart","SET_CURRENT_SEASON_WITH_RECIPES_SUCCESS","setCurrentSeasonWithRecipesSuccess","INIT_SETTINGS","initSettings","SET_DIET_TYPE","setDietType","INIT_APP","initApp","SET_SELECTED_SEASON_NAME","setSelectedSeasonName","seasonName","OPEN_MENU","openMenu","CLOSE_MENU","closeMenu","SELECT_SEASON","selectSeason","seasonIndex","GO_TO_ALL_SEASONS_VIEW","goToAllSeasonsView","FOOD_DETAILS_SELECT_SEASON","foodDetailsSelectSeason","SEARCH_BAR_CHANGED","searchBarChanged","newSearchTerm","SHOW_SEARCH_BAR","showSearchBar","HIDE_SEARCH_BAR","hideSearchBar","FOOD_ITEM_CLICKED","foodItemClicked","RECIPE_ITEM_CLICKED","recipeItemClicked","recipeItemId","FOOD_DETAILS_SELECT_RECIPE","foodDetailsSelectRecipe","SHOW_LOCATION_SETTINGS_POPUP","showLocationPopup","CLOSE_LOCATION_SETTINGS_POPUP","closeLocationPopup","HIDE_REGION_CHANGE_PROMPT","hideRegionChangePrompt","all_seasons_with_food_selectors_1","seasonal_shared_frontend_utilities_1","ui_selectors_1","selectAllSeasonsWithFoodAndSearchAppliedData","season","getDataThatContainsSearchTerm","selectAllSeasonsVisibleFoodData","seasonsWithSearchApplied","slice","filter","selectFoodInSeasonGraphData","allSeasonData","_ref2","Number of food items in season","convertDegressToRadians","deg","Math","PI","distanceBetweenLatLngInKm","latLng1","latLng2","dLat","lat","dLng","lng","sin","cos","atan2","sqrt","getNearestRegionFromLatLng","latLng","prevRegion","nextRegion","includes","seasonal_shared_models_1","getQueryString","isVegetarian","isVegan","countryCode","query","Boolean","join","getCurrentSeasonIndex","Date","getUTCMonth","getAllSeasons","queryString","undefined","fetch","SEASON_URL","resp","json","getSeasonWithFood","SEASON_WITH_FOOD_URL","getAllSeasonsWithFood","getSeasonWithRecipes","SEASON_WITH_RECIPES_URL","getAllSeasonsWithRecipes","getFoodDetailsData","foodId","FOOD_DETAILS_URL","getCountries","COUNTRY_URL","DIET_TYPE","USER_ROLES","BACKEND_URL","NODE_ENV","PUBLIC_URL","country_selectors_1","settings_selectors_1","selectCurrentRegion","region","code","selectCountryAndRegionsSelectGroup","country","groupName","selectOptions","isSelected","current_food_details_selectors_1","all_basic_season_selectors_1","selectIsFoodDataOrBasicSeasonsLoading","isCurrentFoodDetailsLoading","isBasicSeasonDataLoading","selectSeasonsSelectedForFood","foodDetailsSeasons","basicSeasons","some","foodDetailSeason","selectVisibleRecipesForFoodDetailsData","current_season_selectors_1","selectVisibleFoodData","selectVisibleRecipeData","current_season_with_food_epics_1","current_season_with_recipes_epics_1","init_epics_1","all_basic_season_epics_1","all_seasons_with_food_epic_1","all_seasons_with_recipes_epic_1","current_food_details_epics_1","season_name_epics_1","country_epics_1","rootEpics","initAppEpic$","getCurrentSeasonWithFoodStartEpic$","getCurrentSeasonWithFoodEpic$","getCurrentSeasonWithRecipesStartEpic$","getCurrentSeasonWithRecipesEpic$","getAllBasicSeasonsStartEpic$","getAllBasicSeasonsEpic$","getAllSeasonsWithFood$","getAllSeasonsWithRecipes$","getCurrentFoodDetailsEpic$","updateFoodDetailsOnDietTypeChangeEpic$","setSeasonSelectedSeasonName$","getCountriesStart$","getCountries$","promptCountryChangeOnNewDetected$","hideRegionChangePrompt$","_slicedToArray","redux_observable_1","actions_1","operators_1","selectors_1","actions$","pipe","ofType","mapTo","state$","withLatestFrom","switchMap","_ref3","foodData","VEGETARIAN","VEGAN","recipesData","_ImageGrid_ImageGrid__WEBPACK_IMPORTED_MODULE_1__","_SummaryColumnList__WEBPACK_IMPORTED_MODULE_3__","_SeasonNameView_SeasonNameView__WEBPACK_IMPORTED_MODULE_4__","rxjs_1","of","currentFoodDetailsId","_ref4","action","_ref5","selectedSeason","detectedRegion","settingsRegionCode","delay","current_food_details_reducer_1","current_season_reducer_1","all_basic_seasons_reducer_1","all_seasons_reducer_1","settings_reducer_1","ui_reducer_1","country_reducer_1","allReducers","allBasicSeasonReducer","allSeasonsReducer","countryReducer","currentFoodDetailsReducer","currentSeasonWithFoodReducer","settingsReducer","uiReducer","getDefaultState","arguments","populateApiData","__importDefault","mod","__esModule","default","v4_1","ALL","initialSettings","AboutEatSeasonal","objectDestructuringEmpty","AndroidAppDownload","href","alt","addTabClasses","GO_TO_WEB_VERSION","GO_BACK_FROM_FOOD_DETAILS","GO_TO_FOOD_TAB","GO_TO_RECIPES_TABS","TABS","selectCurrentFoodDetailsParams","createMatchSelector","routeParams","params","selectCurrentPath","getLocation","location","pathname","selectIsCurrentRouteAllSeasons","path","selectCurrentTab","webUi","webUiState","currentTab","selectIsCurrentTabFood","FOOD","selectIsCurrentTabRecipes","RECIPES","ACTIONS_TO_TRACK","rootEpic","combineEpics","apply","toConsumableArray","ga","ignoreElements","slicedToArray","recipe","window","open","linkUrl","goBack","foodDetailsId","debounceTime","isRouteAllSeasons","getStoredData","objectSpread","tap","settingsState","setStoredData","epicMiddleware","createEpicMiddleware","storeHistory","createHashHistory","store","createStore","combineReducers","router","connectRouter","compose","applyMiddleware","routerMiddleware","run","BottomTabsConnecter","connect","isCurrentTabFood","isCurrentTabRecipes","dispatch","goToFoodTab","goToRecipesTab","CurrentSeasonNameConnecter","currentSeasonName","components_layout","radioButtons","label","DietaryFiltersConnector","update","selectedValue","onChange","newValue","FoodDetailsLoaderConnecter","FoodDetailsTopSectionConnecter","foodImageUrl","foodName","onGoBack","FoodTableConnecter","onFoodClick","HeaderConnecter","onMenuOpen","SearchBarConnecter","IOSAppDownload","PageLayout","OverlayFadeInOutAnimation","SeasonMenuConnecter","isCurrentRouteAllSeasons","onAllSeasonsSelected","onClose","onSeasonSelected","react","PageWithMenu","PageLayout_PageLayout_PageLayout","RecipesForFoodConnecter","currentFoodDetailsRecipes","onRecipeSelected","RecipeTableConnecter","onRecipeClick","getSearchBarClassName","onHideSearchBar","onSearchChanged","onShowSearchBar","ref","input","querySelector","focus","focusOnInputIfSearchVisible","placeholder","SeasonsForFoodConnecter","seasonsSelectedForFood","substring","ViewWebAppVersionConnector","onGoToWebVersion","ViewAppLinks","IOSAppDownload_IOSAppDownload_IOSAppDownload","AndroidAppDownload_AndroidAppDownload_AndroidAppDownload","summaryColumns","WhyEatSeasonal","AllSeasonsConnector","hasMoreSeasonsInAllSeasonsView","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","AllSeasonsGraphConnector","foodInSeasonGraphData","es6","width","height","dataKey","allowDecimals","fill","FoodDetailsPage","PageWithMenu_PageWithMenu","FoodTablePage","IntroPage","ViewAppLinks_ViewAppLinks_ViewAppLinks","AboutEatSeasonal_AboutEatSeasonal_AboutEatSeasonal","WhyEatSeasonal_WhyEatSeasonal_WhyEatSeasonal","AllSeasonsPage","App","es","esm","history","react_router","component","exact","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","rootElement","getElementById","hasChildNodes","hydrate","App_App","render","URL","process","origin","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","_ref$enterDelay","enterDelay","_ref$exitDelay","exitDelay","_ref$enterDuration","enterDuration","_ref$exitDuration","exitDuration","_ref$type","posed","enter","opacity","transition","duration","exit","hasCancelled","reject","val","isCanceled","localStorage","setItem","JSON","stringify","storedData","getItem","parse","fade_animations_fadeInOutAnimation"],"mappings":"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","file":"static/js/main.81f3c3c8.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar reselect_1 = require(\"reselect\");\n\nvar selectUiState = function selectUiState(state) {\n  return state.ui;\n};\n\nexports.selectIsMenuOpen = reselect_1.createSelector(selectUiState, function (uiState) {\n  return uiState.isMenuOpen;\n});\nexports.selectCurrentSearchTerm = reselect_1.createSelector(selectUiState, function (uiState) {\n  return uiState.searchTerm && uiState.searchTerm.toLowerCase();\n});\nexports.selectIsSearchBarVisible = reselect_1.createSelector(selectUiState, function (uiState) {\n  return uiState.isSearchBarVisible;\n});\nexports.selectIsLocationSettingsPopupVisible = reselect_1.createSelector(selectUiState, function (uiState) {\n  return uiState.isLocationSettingsPopupVisible;\n});\nexports.selectIsCountryChangePromptVisible = reselect_1.createSelector(selectUiState, function (uiState) {\n  return uiState.isCountryChangePromptVisible;\n});","export * from './SummaryColumn';\n\nexport * from './SummaryColumn.interface';\n","const loadingImages = [];\n\nconst createImageOnLoadPromise = (\n  imageSrc: string\n): Promise<HTMLImageElement> => {\n  return new Promise((resolve) => {\n    const image = document.createElement('img');\n    image.src = imageSrc;\n    loadingImages.push(image);\n    image.addEventListener('load', () => {\n      resolve(image);\n    });\n  });\n};\n\nexport const loadImage = (\n  imageSrc: string\n): Promise<HTMLImageElement> => {\n  const onLoadPromise = createImageOnLoadPromise(imageSrc);\n  return onLoadPromise;\n};\n","import React, { Component } from 'react';\n\nimport './BackgroundImageWithLoadingSpinner.scss';\n\nimport {\n  loadImage\n} from '../../services/image-loader.service';\n\nimport {\n  LoadingSpinner\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport {\n  fadeInOutAnimation, makePromiseCancelable\n} from '../../helpers';\n\nimport { PoseGroup } from 'react-pose';\nimport { ICancelablePromise } from '../../interfaces';\n\nconst FadeInOutAnimation = fadeInOutAnimation();\n\ninterface IBackgroundImageWithLoadingSpinnerPropsInterface {\n  src: string;\n  skipAnimation?: boolean;\n}\ninterface IBackgroundImageWithLoadingSpinnerStateInterface {\n  isVisible: boolean;\n}\n\nexport class BackgroundImageWithLoadingSpinner\nextends Component<\n  IBackgroundImageWithLoadingSpinnerPropsInterface,\n  IBackgroundImageWithLoadingSpinnerStateInterface\n> {\n  public loadImagePromise: ICancelablePromise<HTMLImageElement> | null = null;\n\n  constructor(props: IBackgroundImageWithLoadingSpinnerPropsInterface) {\n    super(props);\n    this.state = {\n      isVisible: false\n    };\n  }\n\n  public componentDidMount() {\n    this.loadImagePromise = makePromiseCancelable(loadImage(this.props.src));\n    this.loadImagePromise.promise.then(() => {\n      this.setState({\n        isVisible: true\n      });\n    }, () => undefined);\n  }\n\n  public componentWillUnmount() {\n    if (this.loadImagePromise) {\n      this.loadImagePromise.cancel();\n    }\n  }\n\n  public getBackgroundImageStyle() {\n    return { backgroundImage: `url(${this.props.src})` };\n  }\n\n  public render() {\n    return !this.props.skipAnimation\n      ? (\n        <PoseGroup>\n          {\n            this.state.isVisible\n              ? <FadeInOutAnimation key='background-image-fade-in-out'\n                className='c-background-image-with-loading-spinner'\n                style={this.getBackgroundImageStyle()}>\n                { this.props.children }\n              </FadeInOutAnimation>\n              : <FadeInOutAnimation key='loading-spinner-fade-in-out'\n                className='c-background-image-with-loading-spinner'>\n                <LoadingSpinner />\n              </FadeInOutAnimation>\n          }\n        </PoseGroup>\n      )\n      : <div className='c-background-image-with-loading-spinner'\n          style={this.getBackgroundImageStyle()} />;\n  }\n}\n","import React, { FC } from 'react';\n\nimport './ImageGridItem.scss';\n\nimport {\n  TextMedium\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport {\n  BackgroundImageWithLoadingSpinner\n} from '../../components-elements';\nimport { IImageGridItem } from './ImageGridItem.interface';\n\nexport const ImageGridItem: FC<IImageGridItem> = ({\n  id,\n  imageUrlSmall,\n  onClick,\n  name,\n  skipAnimation\n}) => (\n  <div onClick={() => onClick && onClick(id)}\n    className='c-image-grid-item'>\n    <div className='c-image-grid-item__inner'>\n      <div className='c-image-grid-item__image'>\n        <BackgroundImageWithLoadingSpinner\n          src={imageUrlSmall} skipAnimation={skipAnimation}/>\n      </div>\n      <TextMedium className='c-image-grid-item__text'>\n        {name}\n      </TextMedium>\n    </div>\n  </div>\n);\n","\"use strict\";\n\nvar _toConsumableArray = require(\"/home/circleci/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar reselect_1 = require(\"reselect\");\n\nvar selectCurrentFoodDetailsState = function selectCurrentFoodDetailsState(state) {\n  return state.currentFoodDetailsData;\n};\n\nexports.selectIsCurrentFoodDetailsLoading = reselect_1.createSelector(selectCurrentFoodDetailsState, function (currentFoodDetails) {\n  return currentFoodDetails.isLoading;\n});\nexports.selectCurrentFoodDetails = reselect_1.createSelector(selectCurrentFoodDetailsState, function (currentFoodDetails) {\n  return currentFoodDetails.data;\n});\nexports.selectCurrentFoodDetailsId = reselect_1.createSelector(exports.selectCurrentFoodDetails, function (currentFoodDetails) {\n  return currentFoodDetails && currentFoodDetails.id;\n});\nexports.selectCurrentFoodDetailsName = reselect_1.createSelector(exports.selectCurrentFoodDetails, function (currentFoodDetails) {\n  return currentFoodDetails && currentFoodDetails.name;\n});\nexports.selectCurrentFoodDetailsImageUrl = reselect_1.createSelector(exports.selectCurrentFoodDetails, function (currentFoodDetails) {\n  return currentFoodDetails && currentFoodDetails.imageUrlSmall;\n});\nexports.selectCurrentFoodDetailsSeasons = reselect_1.createSelector(exports.selectCurrentFoodDetails, function (currentFoodDetails) {\n  return currentFoodDetails && currentFoodDetails.seasons;\n});\nexports.selectCurrentFoodDetailsRecipes = reselect_1.createSelector(exports.selectCurrentFoodDetails, function (currentFoodDetails) {\n  return currentFoodDetails && [].concat(_toConsumableArray(currentFoodDetails.primaryFoodInRecipe || []), _toConsumableArray(currentFoodDetails.secondaryFoodInRecipe || []));\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar reselect_1 = require(\"reselect\");\n\nvar selectAllBasicSeasonDataState = function selectAllBasicSeasonDataState(state) {\n  return state.allBasicSeasonData;\n};\n\nexports.selectIsBasicSeasonsLoading = reselect_1.createSelector(selectAllBasicSeasonDataState, function (allBasicSeasonData) {\n  return allBasicSeasonData.isLoading;\n});\nexports.selectAllBasicSeasons = reselect_1.createSelector(selectAllBasicSeasonDataState, function (allBasicSeasonData) {\n  return allBasicSeasonData.data;\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar reselect_1 = require(\"reselect\");\n\nvar selectAllSeasonsWithFoodState = function selectAllSeasonsWithFoodState(state) {\n  return state.allSeasonsWithFoodData;\n};\n\nexports.selectIsAllSeasonsFoodLoading = reselect_1.createSelector(selectAllSeasonsWithFoodState, function (allSeasonsWithFoodData) {\n  return allSeasonsWithFoodData.isFoodLoading;\n});\nexports.selectIsAllSeasonsRecipesLoading = reselect_1.createSelector(selectAllSeasonsWithFoodState, function (allSeasonsWithFoodData) {\n  return allSeasonsWithFoodData.isRecipesLoading;\n});\nexports.selectAllSeasons = reselect_1.createSelector(selectAllSeasonsWithFoodState, function (allSeasonsWithFoodData) {\n  return allSeasonsWithFoodData.data;\n});\nexports.selectNumberOfAllSeasonsInView = reselect_1.createSelector(selectAllSeasonsWithFoodState, function (allSeasonsWithFoodData) {\n  return allSeasonsWithFoodData.numberOfSeasonsInView;\n});\nexports.selectHasMoreSeasonsInAllSeasonsView = reselect_1.createSelector(exports.selectNumberOfAllSeasonsInView, exports.selectAllSeasons, function (numberOfAllSeasons, allSeasons) {\n  return allSeasons ? numberOfAllSeasons < allSeasons.length : false;\n});","\"use strict\";\n\nvar _toConsumableArray = require(\"/home/circleci/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar reselect_1 = require(\"reselect\");\n\nvar selectCountryState = function selectCountryState(state) {\n  return state.countryData;\n};\n\nexports.selectAreCountriesLoading = reselect_1.createSelector(selectCountryState, function (countryState) {\n  return countryState.isLoading;\n});\nexports.selectCountries = reselect_1.createSelector(selectCountryState, function (countryState) {\n  return countryState.data;\n});\nexports.selectAllRegions = reselect_1.createSelector(exports.selectCountries, function (countries) {\n  return countries && countries.reduce(function (allRegions, nextCountry) {\n    return [].concat(_toConsumableArray(allRegions), _toConsumableArray(nextCountry.regions));\n  }, []);\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar reselect_1 = require(\"reselect\");\n\nvar selectCurrentSeasonWithFoodState = function selectCurrentSeasonWithFoodState(state) {\n  return state.currentSeasonData;\n};\n\nexports.selectIsCurrentSeasonFoodLoading = reselect_1.createSelector(selectCurrentSeasonWithFoodState, function (currentSeasonData) {\n  return currentSeasonData.isFoodLoading;\n});\nexports.selectIsCurrentSeasonRecipesLoading = reselect_1.createSelector(selectCurrentSeasonWithFoodState, function (currentSeasonData) {\n  return currentSeasonData.isRecipesLoading;\n});\nexports.selectCurrentSeason = reselect_1.createSelector(selectCurrentSeasonWithFoodState, function (currentSeasonData) {\n  return currentSeasonData.data;\n});\nexports.selectCurrentSeasonFood = reselect_1.createSelector(exports.selectCurrentSeason, function (currentSeason) {\n  return currentSeason && currentSeason.food;\n});\nexports.selectCurrentSeasonRecipes = reselect_1.createSelector(exports.selectCurrentSeason, function (currentSeason) {\n  return currentSeason && currentSeason.recipes;\n});\n\nexports.selectCurrentSeasonRecipesById = function (recipeId) {\n  return reselect_1.createSelector(exports.selectCurrentSeasonRecipes, function (recipes) {\n    return recipes && recipes.find(function (_ref) {\n      var id = _ref.id;\n      return id === recipeId;\n    });\n  });\n};\n\nexports.selectCurrentSeasonIndex = reselect_1.createSelector(selectCurrentSeasonWithFoodState, function (currentSeasonData) {\n  return currentSeasonData.currentSeasonIndex;\n});\nexports.selectCurrentSeasonName = reselect_1.createSelector(exports.selectCurrentSeason, function (currentSeason) {\n  return currentSeason && currentSeason.name;\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar reselect_1 = require(\"reselect\");\n\nexports.selectSettingsState = function (state) {\n  return state.settings;\n};\n\nexports.selectSettingsDietType = reselect_1.createSelector(exports.selectSettingsState, function (settings) {\n  return settings.dietType;\n});\nexports.selectSettingsRegionCode = reselect_1.createSelector(exports.selectSettingsState, function (settings) {\n  return settings.selectedRegionCode;\n});\nexports.selectSettingsUserId = reselect_1.createSelector(exports.selectSettingsState, function (settings) {\n  return settings.userId;\n});\nexports.selectSettingsTimesAppStarted = reselect_1.createSelector(exports.selectSettingsState, function (settings) {\n  return settings.timesAppStarted;\n});","import React, { FC } from 'react';\n\nimport './ImageGrid.scss';\n\nimport {\n  ImageGridItem\n} from '../ImageGridItem/ImageGridItem';\nimport { IImageGrid } from './ImageGrid.interface';\nimport { TextMedium } from '@chrisb-dev/seasonal-shared-frontend-components';\n\nexport const ImageGrid: FC<IImageGrid> = ({\n  data,\n  onClick,\n  skipAnimation\n}) => (\n  <div className='c-image-grid'>\n    {\n      data && data.length\n        ? data.map((item) => (\n          <ImageGridItem\n            key={item.name}\n            {...item}\n            onClick={onClick}\n            skipAnimation={skipAnimation}/>\n        ))\n        : <TextMedium className='c-image-grid__no-results'>\n            No results found\n          </TextMedium>\n    }\n  </div>\n);\n","import React, { FC } from 'react';\n\nimport './SummaryColumn.scss';\n\nimport {\n  TextMedium,\n  TextHeadingSmall\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport {\n  ISummaryColumn\n} from './SummaryColumn.interface';\n\nexport const SummaryColumn: FC<ISummaryColumn> = ({\n  imageUrl,\n  text,\n  title\n}) => (\n  <div className='c-summary-column'>\n    {\n      imageUrl && <img src={imageUrl} className='c-summary-column__image' />\n    }\n    <h3 className='c-summary-column__heading'>\n      <TextHeadingSmall>\n        { title }\n      </TextHeadingSmall>\n    </h3>\n    <TextMedium>\n      { text }\n    </TextMedium>\n  </div>\n);\n","export * from './SummaryColumnList.interface';\n\nexport * from './SummaryColumnList';\n","import React, { FC } from 'react';\n\nimport './SummaryColumnList.scss';\n\nimport {\n  SummaryColumn\n} from './../SummaryColumn';\n\nimport {\n  ISummaryColumnList\n} from './SummaryColumnList.interface';\n\nexport const SummaryColumnList: FC<ISummaryColumnList> = ({\n  columns\n}) => (\n  <ul className='c-summary-column-list'>\n    {\n      columns.map((column, index) => (\n        <SummaryColumn {...column} key={index} />\n      ))\n    }\n  </ul>\n);\n","import React, { FC } from 'react';\nimport './SeasonNameView.scss';\nimport {\n  ISeasonNameViewProps\n} from './SeasonNameView.interface';\nimport { TextHeadingSmall } from '@chrisb-dev/seasonal-shared-frontend-components';\n\nexport const SeasonNameView: FC<ISeasonNameViewProps> = ({\n  name\n}) => (\n  <TextHeadingSmall className='c-season-name-view'>\n    {name}\n  </TextHeadingSmall>\n);\n","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./all-basic-season.actions\"));\n\n__export(require(\"./all-season-with-food.actions\"));\n\n__export(require(\"./all-seasons-with-recipes.actions\"));\n\n__export(require(\"./country.actions\"));\n\n__export(require(\"./current-food-details.actions\"));\n\n__export(require(\"./current-season.actions\"));\n\n__export(require(\"./settings.actions\"));\n\n__export(require(\"./init.actions\"));\n\n__export(require(\"./season-name.actions\"));\n\n__export(require(\"./ui.actions\"));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SET_ALL_BASIC_SEASONS_START = 'SET_ALL_BASIC_SEASON_START';\n\nfunction setAllSeasonsStart() {\n  return {\n    type: exports.SET_ALL_BASIC_SEASONS_START\n  };\n}\n\nexports.setAllSeasonsStart = setAllSeasonsStart;\nexports.SET_ALL_BASIC_SEASONS_SUCCESS = 'SET_ALL_BASIC_SEASONS_SUCCESS';\n\nfunction setAllBasicSeasonsSuccess(seasonData) {\n  return {\n    seasonData: seasonData,\n    type: exports.SET_ALL_BASIC_SEASONS_SUCCESS\n  };\n}\n\nexports.setAllBasicSeasonsSuccess = setAllBasicSeasonsSuccess;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SET_ALL_SEASONS_WITH_FOOD_START = 'SET_ALL_SEASONS_WITH_FOOD_START';\n\nfunction setAllSeasonsWithFoodStart() {\n  return {\n    type: exports.SET_ALL_SEASONS_WITH_FOOD_START\n  };\n}\n\nexports.setAllSeasonsWithFoodStart = setAllSeasonsWithFoodStart;\nexports.SET_ALL_SEASONS_WITH_FOOD_SUCCESS = 'SET_ALL_SEASONS_WITH_FOOD_SUCCESS';\n\nfunction setAllSeasonsWithFoodSuccess(seasonData) {\n  return {\n    seasonData: seasonData,\n    type: exports.SET_ALL_SEASONS_WITH_FOOD_SUCCESS\n  };\n}\n\nexports.setAllSeasonsWithFoodSuccess = setAllSeasonsWithFoodSuccess;\nexports.INCREASE_NUMBER_OF_ALL_FOOD_SEASONS_IN_VIEW = 'INCREASE_NUMBER_OF_ALL_FOOD_SEASONS_IN_VIEW';\n\nfunction increaseNumberOfAllFoodSeasonsInView() {\n  return {\n    type: exports.INCREASE_NUMBER_OF_ALL_FOOD_SEASONS_IN_VIEW\n  };\n}\n\nexports.increaseNumberOfAllFoodSeasonsInView = increaseNumberOfAllFoodSeasonsInView;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SET_ALL_SEASONS_WITH_RECIPES_START = 'SET_ALL_SEASONS_WITH_RECIPES_START';\n\nfunction setAllSeasonsWithRecipesStart() {\n  return {\n    type: exports.SET_ALL_SEASONS_WITH_RECIPES_START\n  };\n}\n\nexports.setAllSeasonsWithRecipesStart = setAllSeasonsWithRecipesStart;\nexports.SET_ALL_SEASONS_WITH_RECIPES_SUCCESS = 'SET_ALL_SEASONS_WITH_RECIPES_SUCCESS';\n\nfunction setAllSeasonsWithRecipesSuccess(seasonData) {\n  return {\n    seasonData: seasonData,\n    type: exports.SET_ALL_SEASONS_WITH_RECIPES_SUCCESS\n  };\n}\n\nexports.setAllSeasonsWithRecipesSuccess = setAllSeasonsWithRecipesSuccess;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GET_COUNTRIES_START = 'GET_COUNTRIES_START';\n\nfunction getCountriesStart() {\n  return {\n    type: exports.GET_COUNTRIES_START\n  };\n}\n\nexports.getCountriesStart = getCountriesStart;\nexports.GET_COUNTRIES_SUCCESS = 'GET_COUNTRIES_SUCCESS';\n\nfunction getCountriesSuccess(countries) {\n  return {\n    countries: countries,\n    type: exports.GET_COUNTRIES_SUCCESS\n  };\n}\n\nexports.getCountriesSuccess = getCountriesSuccess;\nexports.SET_REGION = 'SET_REGION';\n\nfunction setRegion(regionCode) {\n  return {\n    regionCode: regionCode,\n    type: exports.SET_REGION\n  };\n}\n\nexports.setRegion = setRegion;\nexports.USER_REGION_DETECTED = 'USER_REGION_DETECTED';\n\nfunction userRegionDetected(regionCode, error) {\n  return {\n    error: error,\n    regionCode: regionCode,\n    type: exports.USER_REGION_DETECTED\n  };\n}\n\nexports.userRegionDetected = userRegionDetected;\nexports.SET_USER_REGION_DETECTED = 'SET_USER_REGION_DETECTED';\n\nfunction setUserRegionDetected(regionCode) {\n  return {\n    regionCode: regionCode,\n    type: exports.SET_USER_REGION_DETECTED\n  };\n}\n\nexports.setUserRegionDetected = setUserRegionDetected;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SET_CURRENT_FOOD_DETAILS_START = 'SET_CURRENT_FOOD_DETAILS_START';\n\nfunction setCurrentFoodDetailsStart(foodItemId) {\n  return {\n    foodItemId: foodItemId,\n    type: exports.SET_CURRENT_FOOD_DETAILS_START\n  };\n}\n\nexports.setCurrentFoodDetailsStart = setCurrentFoodDetailsStart;\nexports.SET_CURRENT_FOOD_DETAILS_ON_DIET_CHANGE = 'SET_CURRENT_FOOD_DETAILS_ON_DIET_CHANGE';\n\nfunction setCurrentFoodDetailsOnDietChange(foodItemId) {\n  return {\n    foodItemId: foodItemId,\n    type: exports.SET_CURRENT_FOOD_DETAILS_ON_DIET_CHANGE\n  };\n}\n\nexports.setCurrentFoodDetailsOnDietChange = setCurrentFoodDetailsOnDietChange;\nexports.SET_CURRENT_FOOD_DETAILS_SUCCESS = 'SET_CURRENT_FOOD_DETAILS_SUCCESS';\n\nfunction setCurrentFoodDetailsSuccess(currentFoodData) {\n  return {\n    currentFoodDetailsData: currentFoodData,\n    type: exports.SET_CURRENT_FOOD_DETAILS_SUCCESS\n  };\n}\n\nexports.setCurrentFoodDetailsSuccess = setCurrentFoodDetailsSuccess;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SET_CURRENT_SEASON_WITH_FOOD_START = 'SET_CURRENT_SEASON_WITH_FOOD_START';\n\nfunction setCurrentSeasonWithFoodStart() {\n  return {\n    type: exports.SET_CURRENT_SEASON_WITH_FOOD_START\n  };\n}\n\nexports.setCurrentSeasonWithFoodStart = setCurrentSeasonWithFoodStart;\nexports.SET_CURRENT_SEASON_WITH_FOOD_SUCCESS = 'SET_CURRENT_SEASON_WITH_FOOD_SUCCESS';\n\nfunction setCurrentSeasonWithFoodSuccess(currentSeasonData) {\n  return {\n    currentSeasonData: currentSeasonData,\n    type: exports.SET_CURRENT_SEASON_WITH_FOOD_SUCCESS\n  };\n}\n\nexports.setCurrentSeasonWithFoodSuccess = setCurrentSeasonWithFoodSuccess;\nexports.SET_CURRENT_SEASON_WITH_RECIPES_START = 'SET_CURRENT_SEASON_WITH_RECIPES_START';\n\nfunction setCurrentSeasonWithRecipesStart() {\n  return {\n    type: exports.SET_CURRENT_SEASON_WITH_RECIPES_START\n  };\n}\n\nexports.setCurrentSeasonWithRecipesStart = setCurrentSeasonWithRecipesStart;\nexports.SET_CURRENT_SEASON_WITH_RECIPES_SUCCESS = 'SET_CURRENT_SEASON_WITH_RECIPES_SUCCESS';\n\nfunction setCurrentSeasonWithRecipesSuccess(currentSeasonData) {\n  return {\n    currentSeasonData: currentSeasonData,\n    type: exports.SET_CURRENT_SEASON_WITH_RECIPES_SUCCESS\n  };\n}\n\nexports.setCurrentSeasonWithRecipesSuccess = setCurrentSeasonWithRecipesSuccess;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.INIT_SETTINGS = 'INIT_SETTINGS';\n\nfunction initSettings(settings) {\n  return {\n    settings: settings,\n    type: exports.INIT_SETTINGS\n  };\n}\n\nexports.initSettings = initSettings;\nexports.SET_DIET_TYPE = 'SET_DIET_TYPE';\n\nfunction setDietType(dietType) {\n  return {\n    dietType: dietType,\n    type: exports.SET_DIET_TYPE\n  };\n}\n\nexports.setDietType = setDietType;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.INIT_APP = 'INIT_APP';\n\nfunction initApp() {\n  return {\n    type: exports.INIT_APP\n  };\n}\n\nexports.initApp = initApp;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SET_SELECTED_SEASON_NAME = 'SET_SELECTED_SEASON_NAME';\n\nfunction setSelectedSeasonName(seasonName) {\n  return {\n    seasonName: seasonName,\n    type: exports.SET_SELECTED_SEASON_NAME\n  };\n}\n\nexports.setSelectedSeasonName = setSelectedSeasonName;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OPEN_MENU = 'OPEN_MENU';\n\nfunction openMenu() {\n  return {\n    type: exports.OPEN_MENU\n  };\n}\n\nexports.openMenu = openMenu;\nexports.CLOSE_MENU = 'CLOSE_MENU';\n\nfunction closeMenu() {\n  return {\n    type: exports.CLOSE_MENU\n  };\n}\n\nexports.closeMenu = closeMenu;\nexports.SELECT_SEASON = 'SELECT_SEASON';\n\nfunction selectSeason(seasonIndex) {\n  return {\n    seasonIndex: seasonIndex,\n    type: exports.SELECT_SEASON\n  };\n}\n\nexports.selectSeason = selectSeason;\nexports.GO_TO_ALL_SEASONS_VIEW = 'GO_TO_ALL_SEASONS_VIEW';\n\nfunction goToAllSeasonsView() {\n  return {\n    type: exports.GO_TO_ALL_SEASONS_VIEW\n  };\n}\n\nexports.goToAllSeasonsView = goToAllSeasonsView;\nexports.FOOD_DETAILS_SELECT_SEASON = 'FOOD_DETAILS_SELECT_SEASON';\n\nfunction foodDetailsSelectSeason(seasonIndex) {\n  return {\n    seasonIndex: seasonIndex,\n    type: exports.FOOD_DETAILS_SELECT_SEASON\n  };\n}\n\nexports.foodDetailsSelectSeason = foodDetailsSelectSeason;\nexports.SEARCH_BAR_CHANGED = 'SEARCH_BAR_CHANGED';\n\nfunction searchBarChanged(newSearchTerm) {\n  return {\n    newSearchTerm: newSearchTerm,\n    type: exports.SEARCH_BAR_CHANGED\n  };\n}\n\nexports.searchBarChanged = searchBarChanged;\nexports.SHOW_SEARCH_BAR = 'SHOW_SEARCH_BAR';\n\nfunction showSearchBar() {\n  return {\n    type: exports.SHOW_SEARCH_BAR\n  };\n}\n\nexports.showSearchBar = showSearchBar;\nexports.HIDE_SEARCH_BAR = 'HIDE_SEARCH_BAR';\n\nfunction hideSearchBar() {\n  return {\n    type: exports.HIDE_SEARCH_BAR\n  };\n}\n\nexports.hideSearchBar = hideSearchBar;\nexports.FOOD_ITEM_CLICKED = 'FOOD_ITEM_CLICKED';\n\nfunction foodItemClicked(foodItemId) {\n  return {\n    foodItemId: foodItemId,\n    type: exports.FOOD_ITEM_CLICKED\n  };\n}\n\nexports.foodItemClicked = foodItemClicked;\nexports.RECIPE_ITEM_CLICKED = 'RECIPE_ITEM_CLICKED';\n\nfunction recipeItemClicked(recipeItemId) {\n  return {\n    recipeItemId: recipeItemId,\n    type: exports.RECIPE_ITEM_CLICKED\n  };\n}\n\nexports.recipeItemClicked = recipeItemClicked;\nexports.FOOD_DETAILS_SELECT_RECIPE = 'FOOD_DETAILS_SELECT_RECIPE';\n\nfunction foodDetailsSelectRecipe(recipeItemId) {\n  return {\n    recipeItemId: recipeItemId,\n    type: exports.FOOD_DETAILS_SELECT_RECIPE\n  };\n}\n\nexports.foodDetailsSelectRecipe = foodDetailsSelectRecipe;\nexports.SHOW_LOCATION_SETTINGS_POPUP = 'SHOW_LOCATION_SETTINGS_POPUP';\n\nfunction showLocationPopup() {\n  return {\n    type: exports.SHOW_LOCATION_SETTINGS_POPUP\n  };\n}\n\nexports.showLocationPopup = showLocationPopup;\nexports.CLOSE_LOCATION_SETTINGS_POPUP = 'CLOSE_LOCATION_SETTINGS_POPUP';\n\nfunction closeLocationPopup() {\n  return {\n    type: exports.CLOSE_LOCATION_SETTINGS_POPUP\n  };\n}\n\nexports.closeLocationPopup = closeLocationPopup;\nexports.HIDE_REGION_CHANGE_PROMPT = 'HIDE_REGION_CHANGE_PROMPT';\n\nfunction hideRegionChangePrompt() {\n  return {\n    type: exports.HIDE_REGION_CHANGE_PROMPT\n  };\n}\n\nexports.hideRegionChangePrompt = hideRegionChangePrompt;","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./all-seasons-with-food-and-search.selectors\"));\n\n__export(require(\"./current-country.selectors\"));\n\n__export(require(\"./current-food-data-and-basic-season.selectors\"));\n\n__export(require(\"./current-food-details-data-with-search.selectors\"));\n\n__export(require(\"./current-season-data-with-search.selectors\"));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar reselect_1 = require(\"reselect\");\n\nvar all_seasons_with_food_selectors_1 = require(\"../all-seasons-with-food.selectors\");\n\nvar seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\n\nvar ui_selectors_1 = require(\"../ui.selectors\");\n\nexports.selectAllSeasonsWithFoodAndSearchAppliedData = reselect_1.createSelector(all_seasons_with_food_selectors_1.selectAllSeasons, ui_selectors_1.selectCurrentSearchTerm, function (seasons, searchTerm) {\n  return seasons && seasons.map(function (season) {\n    return Object.assign(Object.assign({}, season), {\n      food: seasonal_shared_frontend_utilities_1.getDataThatContainsSearchTerm(searchTerm, season.food)\n    });\n  });\n});\nexports.selectAllSeasonsVisibleFoodData = reselect_1.createSelector(exports.selectAllSeasonsWithFoodAndSearchAppliedData, ui_selectors_1.selectCurrentSearchTerm, all_seasons_with_food_selectors_1.selectNumberOfAllSeasonsInView, function (seasonsWithSearchApplied, searchTerm, numberOfSeasonsInView) {\n  return seasonsWithSearchApplied && (searchTerm ? seasonsWithSearchApplied : seasonsWithSearchApplied.slice(0, numberOfSeasonsInView)).filter(function (_ref) {\n    var food = _ref.food;\n    return food && food.length > 0;\n  });\n});\nexports.selectFoodInSeasonGraphData = reselect_1.createSelector(exports.selectAllSeasonsWithFoodAndSearchAppliedData, function (allSeasonData) {\n  return allSeasonData && allSeasonData.map(function (_ref2) {\n    var name = _ref2.name,\n        food = _ref2.food;\n    return {\n      'Number of food items in season': food ? food.length : 0,\n      'name': name\n    };\n  });\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar convertDegressToRadians = function convertDegressToRadians(deg) {\n  return deg * (Math.PI / 180);\n};\n\nvar distanceBetweenLatLngInKm = function distanceBetweenLatLngInKm(latLng1, latLng2) {\n  var dLat = convertDegressToRadians(latLng2.lat - latLng1.lat);\n  var dLng = convertDegressToRadians(latLng2.lng - latLng1.lng);\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(convertDegressToRadians(latLng1.lat)) * Math.cos(convertDegressToRadians(latLng2.lat)) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var radiusOfEarthInKm = 6371;\n  return radiusOfEarthInKm * c;\n};\n\nexports.getNearestRegionFromLatLng = function (regions, latLng) {\n  return regions && regions.reduce(function (prevRegion, nextRegion) {\n    return distanceBetweenLatLngInKm(latLng, prevRegion.latLng) < distanceBetweenLatLngInKm(latLng, nextRegion.latLng) ? prevRegion : nextRegion;\n  });\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.getDataThatContainsSearchTerm = function (searchTerm, data) {\n  return data && data.filter(function (_ref) {\n    var name = _ref.name;\n    return !searchTerm || name.toLowerCase().includes(searchTerm);\n  });\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar seasonal_shared_models_1 = require(\"@chrisb-dev/seasonal-shared-models\");\n\nvar getQueryString = function getQueryString(isVegetarian, isVegan, countryCode) {\n  var query = [isVegetarian && 'is-vegetarian=true', isVegan && 'is-vegan=true', countryCode && \"country-code=\".concat(countryCode)].filter(Boolean).join('&');\n  var queryString = query && \"?\".concat(query);\n  return queryString;\n};\n\nexports.getCurrentSeasonIndex = function () {\n  return new Date().getUTCMonth();\n};\n\nexports.getAllSeasons = function (countryCode) {\n  var queryString = getQueryString(undefined, undefined, countryCode);\n  return fetch(\"\".concat(seasonal_shared_models_1.SEASON_URL).concat(queryString)).then(function (resp) {\n    return resp.json();\n  });\n};\n\nexports.getSeasonWithFood = function (seasonIndex, countryCode) {\n  var queryString = getQueryString(undefined, undefined, countryCode);\n  return fetch(\"\".concat(seasonal_shared_models_1.SEASON_WITH_FOOD_URL, \"/\").concat(seasonIndex).concat(queryString)).then(function (resp) {\n    return resp.json();\n  });\n};\n\nexports.getAllSeasonsWithFood = function (countryCode) {\n  var queryString = getQueryString(undefined, undefined, countryCode);\n  return fetch(\"\".concat(seasonal_shared_models_1.SEASON_WITH_FOOD_URL).concat(queryString)).then(function (resp) {\n    return resp.json();\n  });\n};\n\nexports.getSeasonWithRecipes = function (seasonIndex, isVegetarian, isVegan, countryCode) {\n  var queryString = getQueryString(isVegetarian, isVegan, countryCode);\n  return fetch(\"\".concat(seasonal_shared_models_1.SEASON_WITH_RECIPES_URL, \"/\").concat(seasonIndex).concat(queryString)).then(function (resp) {\n    return resp.json();\n  });\n};\n\nexports.getAllSeasonsWithRecipes = function (countryCode) {\n  var queryString = getQueryString(undefined, undefined, countryCode);\n  return fetch(\"\".concat(seasonal_shared_models_1.SEASON_WITH_RECIPES_URL).concat(queryString)).then(function (resp) {\n    return resp.json();\n  });\n};\n\nexports.getFoodDetailsData = function (foodId, isVegetarian, isVegan, countryCode) {\n  var queryString = getQueryString(isVegetarian, isVegan, countryCode);\n  return fetch(\"\".concat(seasonal_shared_models_1.FOOD_DETAILS_URL, \"/\").concat(foodId).concat(queryString)).then(function (resp) {\n    return resp.json();\n  });\n};\n\nexports.getCountries = function () {\n  return fetch(seasonal_shared_models_1.COUNTRY_URL).then(function (resp) {\n    return resp.json();\n  });\n};","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./diet-type.enum\"));\n\n__export(require(\"./user-roles.enum\"));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar DIET_TYPE;\n\n(function (DIET_TYPE) {\n  DIET_TYPE[\"VEGETARIAN\"] = \"VEGETARIAN\";\n  DIET_TYPE[\"VEGAN\"] = \"VEGAN\";\n  DIET_TYPE[\"ALL\"] = \"ALL\";\n})(DIET_TYPE = exports.DIET_TYPE || (exports.DIET_TYPE = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar USER_ROLES;\n\n(function (USER_ROLES) {\n  USER_ROLES[\"ADMIN\"] = \"admin\";\n  USER_ROLES[\"EDITOR\"] = \"editor\";\n})(USER_ROLES = exports.USER_ROLES || (exports.USER_ROLES = {}));","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar BACKEND_URL = process.env.BACKEND_URL || 'https://6usraevcmc.execute-api.eu-west-2.amazonaws.com/prod/v2';\nexports.SEASON_URL = process.env.SEASON_URL || \"\".concat(BACKEND_URL, \"/season\");\nexports.FOOD_DETAILS_URL = process.env.FOOD_DETAILS_URL || \"\".concat(BACKEND_URL, \"/food\");\nexports.SEASON_WITH_FOOD_URL = process.env.SEASON_WITH_FOOD_URL || \"\".concat(BACKEND_URL, \"/season-with-food\");\nexports.SEASON_WITH_RECIPES_URL = process.env.SEASON_WITH_RECIPES_URL || \"\".concat(BACKEND_URL, \"/season-with-recipes\");\nexports.COUNTRY_URL = process.env.COUNTRY_URL || \"\".concat(BACKEND_URL, \"/country\");","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar reselect_1 = require(\"reselect\");\n\nvar country_selectors_1 = require(\"../country.selectors\");\n\nvar settings_selectors_1 = require(\"../settings.selectors\");\n\nexports.selectCurrentRegion = reselect_1.createSelector(country_selectors_1.selectAllRegions, settings_selectors_1.selectSettingsRegionCode, function (allRegions, regionCode) {\n  return allRegions && allRegions.find(function (region) {\n    return region.code === regionCode;\n  });\n});\nexports.selectCountryAndRegionsSelectGroup = reselect_1.createSelector(country_selectors_1.selectCountries, settings_selectors_1.selectSettingsRegionCode, function (countries, regionCode) {\n  return countries && countries.map(function (country) {\n    return {\n      groupName: country.name,\n      selectOptions: country.regions.map(function (region) {\n        return {\n          isSelected: region.code === regionCode,\n          name: region.name,\n          value: region.code\n        };\n      })\n    };\n  });\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar reselect_1 = require(\"reselect\");\n\nvar current_food_details_selectors_1 = require(\"../current-food-details.selectors\");\n\nvar all_basic_season_selectors_1 = require(\"../all-basic-season.selectors\");\n\nexports.selectIsFoodDataOrBasicSeasonsLoading = reselect_1.createSelector(current_food_details_selectors_1.selectIsCurrentFoodDetailsLoading, all_basic_season_selectors_1.selectIsBasicSeasonsLoading, function (isCurrentFoodDetailsLoading, isBasicSeasonDataLoading) {\n  return isCurrentFoodDetailsLoading || isBasicSeasonDataLoading;\n});\nexports.selectSeasonsSelectedForFood = reselect_1.createSelector(current_food_details_selectors_1.selectCurrentFoodDetailsSeasons, all_basic_season_selectors_1.selectAllBasicSeasons, function (foodDetailsSeasons, basicSeasons) {\n  return foodDetailsSeasons && basicSeasons && basicSeasons.map(function (_ref) {\n    var id = _ref.id,\n        name = _ref.name;\n    return {\n      isSelected: foodDetailsSeasons.some(function (foodDetailSeason) {\n        return foodDetailSeason.id === id;\n      }),\n      name: name\n    };\n  });\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar reselect_1 = require(\"reselect\");\n\nvar ui_selectors_1 = require(\"../ui.selectors\");\n\nvar seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\n\nvar current_food_details_selectors_1 = require(\"../current-food-details.selectors\");\n\nexports.selectVisibleRecipesForFoodDetailsData = reselect_1.createSelector(ui_selectors_1.selectCurrentSearchTerm, current_food_details_selectors_1.selectCurrentFoodDetailsRecipes, function (searchTerm, recipes) {\n  return seasonal_shared_frontend_utilities_1.getDataThatContainsSearchTerm(searchTerm, recipes);\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar reselect_1 = require(\"reselect\");\n\nvar ui_selectors_1 = require(\"../ui.selectors\");\n\nvar current_season_selectors_1 = require(\"../current-season.selectors\");\n\nvar seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\n\nexports.selectVisibleFoodData = reselect_1.createSelector(ui_selectors_1.selectCurrentSearchTerm, current_season_selectors_1.selectCurrentSeasonFood, function (searchTerm, food) {\n  return seasonal_shared_frontend_utilities_1.getDataThatContainsSearchTerm(searchTerm, food);\n});\nexports.selectVisibleRecipeData = reselect_1.createSelector(ui_selectors_1.selectCurrentSearchTerm, current_season_selectors_1.selectCurrentSeasonRecipes, function (searchTerm, recipes) {\n  return seasonal_shared_frontend_utilities_1.getDataThatContainsSearchTerm(searchTerm, recipes);\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar current_season_with_food_epics_1 = require(\"./current-season-with-food.epics\");\n\nvar current_season_with_recipes_epics_1 = require(\"./current-season-with-recipes.epics\");\n\nvar init_epics_1 = require(\"./init.epics\");\n\nvar all_basic_season_epics_1 = require(\"./all-basic-season.epics\");\n\nvar all_seasons_with_food_epic_1 = require(\"./all-seasons-with-food.epic\");\n\nvar all_seasons_with_recipes_epic_1 = require(\"./all-seasons-with-recipes.epic\");\n\nvar current_food_details_epics_1 = require(\"./current-food-details.epics\");\n\nvar season_name_epics_1 = require(\"./season-name.epics\");\n\nvar country_epics_1 = require(\"./country.epics\");\n\nexports.rootEpics = [init_epics_1.initAppEpic$, current_season_with_food_epics_1.getCurrentSeasonWithFoodStartEpic$, current_season_with_food_epics_1.getCurrentSeasonWithFoodEpic$, current_season_with_recipes_epics_1.getCurrentSeasonWithRecipesStartEpic$, current_season_with_recipes_epics_1.getCurrentSeasonWithRecipesEpic$, all_basic_season_epics_1.getAllBasicSeasonsStartEpic$, all_basic_season_epics_1.getAllBasicSeasonsEpic$, all_seasons_with_food_epic_1.getAllSeasonsWithFood$, all_seasons_with_recipes_epic_1.getAllSeasonsWithRecipes$, current_food_details_epics_1.getCurrentFoodDetailsEpic$, current_food_details_epics_1.updateFoodDetailsOnDietTypeChangeEpic$, season_name_epics_1.setSeasonSelectedSeasonName$, country_epics_1.getCountriesStart$, country_epics_1.getCountries$, country_epics_1.promptCountryChangeOnNewDetected$, country_epics_1.hideRegionChangePrompt$];","\"use strict\";\n\nvar _slicedToArray = require(\"/home/circleci/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar redux_observable_1 = require(\"redux-observable\");\n\nvar seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\n\nvar actions_1 = require(\"../actions\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nvar selectors_1 = require(\"../selectors\");\n\nexports.getCurrentSeasonWithFoodStartEpic$ = function (actions$) {\n  return actions$.pipe(redux_observable_1.ofType(actions_1.SELECT_SEASON, actions_1.INIT_SETTINGS, actions_1.FOOD_DETAILS_SELECT_SEASON, actions_1.SET_USER_REGION_DETECTED, actions_1.SET_REGION), operators_1.mapTo(actions_1.setCurrentSeasonWithFoodStart()));\n};\n\nexports.getCurrentSeasonWithFoodEpic$ = function (actions$, state$) {\n  return actions$.pipe(redux_observable_1.ofType(actions_1.SET_CURRENT_SEASON_WITH_FOOD_START), operators_1.withLatestFrom(state$), operators_1.map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        state = _ref2[1];\n\n    return {\n      regionCode: selectors_1.selectSettingsRegionCode(state),\n      seasonIndex: selectors_1.selectCurrentSeasonIndex(state)\n    };\n  }), operators_1.switchMap(function (_ref3) {\n    var regionCode = _ref3.regionCode,\n        seasonIndex = _ref3.seasonIndex;\n    return seasonal_shared_frontend_utilities_1.getSeasonWithFood(seasonIndex, regionCode);\n  }), operators_1.map(function (foodData) {\n    return actions_1.setCurrentSeasonWithFoodSuccess(foodData);\n  }));\n};","\"use strict\";\n\nvar _slicedToArray = require(\"/home/circleci/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar redux_observable_1 = require(\"redux-observable\");\n\nvar seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\n\nvar actions_1 = require(\"../actions\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nvar seasonal_shared_models_1 = require(\"@chrisb-dev/seasonal-shared-models\");\n\nvar selectors_1 = require(\"../selectors\");\n\nexports.getCurrentSeasonWithRecipesStartEpic$ = function (actions$) {\n  return actions$.pipe(redux_observable_1.ofType(actions_1.SELECT_SEASON, actions_1.INIT_SETTINGS, actions_1.FOOD_DETAILS_SELECT_SEASON, actions_1.SET_DIET_TYPE, actions_1.SET_USER_REGION_DETECTED, actions_1.SET_REGION), operators_1.mapTo(actions_1.setCurrentSeasonWithRecipesStart()));\n};\n\nexports.getCurrentSeasonWithRecipesEpic$ = function (actions$, state$) {\n  return actions$.pipe(redux_observable_1.ofType(actions_1.SET_CURRENT_SEASON_WITH_RECIPES_START), operators_1.withLatestFrom(state$), operators_1.map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        state = _ref2[1];\n\n    return {\n      dietType: selectors_1.selectSettingsDietType(state),\n      regionCode: selectors_1.selectSettingsRegionCode(state),\n      seasonIndex: selectors_1.selectCurrentSeasonIndex(state)\n    };\n  }), operators_1.switchMap(function (_ref3) {\n    var seasonIndex = _ref3.seasonIndex,\n        regionCode = _ref3.regionCode,\n        dietType = _ref3.dietType;\n    return seasonal_shared_frontend_utilities_1.getSeasonWithRecipes(seasonIndex, dietType === seasonal_shared_models_1.DIET_TYPE.VEGETARIAN, dietType === seasonal_shared_models_1.DIET_TYPE.VEGAN, regionCode);\n  }), operators_1.map(function (recipesData) {\n    return actions_1.setCurrentSeasonWithRecipesSuccess(recipesData);\n  }));\n};","export * from './ImageGridItem/ImageGridItem';\n\nexport * from './ImageGrid/ImageGrid';\n\nexport * from './SummaryColumn';\n\nexport * from './SummaryColumnList';\n\nexport * from './SeasonNameView/SeasonNameView';\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar actions_1 = require(\"../actions\");\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nexports.initAppEpic$ = function () {\n  return rxjs_1.of(null).pipe(operators_1.mapTo(actions_1.initApp()));\n};","\"use strict\";\n\nvar _slicedToArray = require(\"/home/circleci/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar redux_observable_1 = require(\"redux-observable\");\n\nvar seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\n\nvar actions_1 = require(\"../actions\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nvar selectors_1 = require(\"../selectors\");\n\nexports.getAllBasicSeasonsStartEpic$ = function (actions$) {\n  return actions$.pipe(redux_observable_1.ofType(actions_1.INIT_SETTINGS, actions_1.SET_REGION, actions_1.SET_USER_REGION_DETECTED), operators_1.mapTo(actions_1.setAllSeasonsStart()));\n};\n\nexports.getAllBasicSeasonsEpic$ = function (actions$, state$) {\n  return actions$.pipe(redux_observable_1.ofType(actions_1.SET_ALL_BASIC_SEASONS_START), operators_1.withLatestFrom(state$), operators_1.map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        state = _ref2[1];\n\n    return selectors_1.selectSettingsRegionCode(state);\n  }), operators_1.switchMap(function (regionCode) {\n    return seasonal_shared_frontend_utilities_1.getAllSeasons(regionCode);\n  }), operators_1.map(function (seasonData) {\n    return actions_1.setAllBasicSeasonsSuccess(seasonData);\n  }));\n};","\"use strict\";\n\nvar _slicedToArray = require(\"/home/circleci/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar redux_observable_1 = require(\"redux-observable\");\n\nvar seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\n\nvar actions_1 = require(\"../actions\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nvar selectors_1 = require(\"../selectors\");\n\nexports.getAllSeasonsWithFood$ = function (actions$, state$) {\n  return actions$.pipe(redux_observable_1.ofType(actions_1.SET_ALL_SEASONS_WITH_FOOD_START), operators_1.withLatestFrom(state$), operators_1.map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        state = _ref2[1];\n\n    return selectors_1.selectSettingsRegionCode(state);\n  }), operators_1.switchMap(function (regionCode) {\n    return seasonal_shared_frontend_utilities_1.getAllSeasonsWithFood(regionCode);\n  }), operators_1.map(function (seasonData) {\n    return actions_1.setAllSeasonsWithFoodSuccess(seasonData);\n  }));\n};","\"use strict\";\n\nvar _slicedToArray = require(\"/home/circleci/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar redux_observable_1 = require(\"redux-observable\");\n\nvar seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\n\nvar actions_1 = require(\"../actions\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nvar selectors_1 = require(\"../selectors\");\n\nexports.getAllSeasonsWithRecipes$ = function (actions$, state$) {\n  return actions$.pipe(redux_observable_1.ofType(actions_1.SET_ALL_SEASONS_WITH_RECIPES_START), operators_1.withLatestFrom(state$), operators_1.map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        state = _ref2[1];\n\n    return selectors_1.selectSettingsRegionCode(state);\n  }), operators_1.switchMap(function (regionCode) {\n    return seasonal_shared_frontend_utilities_1.getAllSeasonsWithRecipes(regionCode);\n  }), operators_1.map(function (seasonData) {\n    return actions_1.setAllSeasonsWithRecipesSuccess(seasonData);\n  }));\n};","\"use strict\";\n\nvar _slicedToArray = require(\"/home/circleci/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar redux_observable_1 = require(\"redux-observable\");\n\nvar seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\n\nvar actions_1 = require(\"../actions\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nvar seasonal_shared_models_1 = require(\"@chrisb-dev/seasonal-shared-models\");\n\nvar selectors_1 = require(\"../selectors\");\n\nexports.updateFoodDetailsOnDietTypeChangeEpic$ = function (actions$, state$) {\n  return actions$.pipe(redux_observable_1.ofType(actions_1.SET_DIET_TYPE), operators_1.withLatestFrom(state$), operators_1.map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        state = _ref2[1];\n\n    return selectors_1.selectCurrentFoodDetailsId(state);\n  }), operators_1.filter(function (currentFoodDetailsId) {\n    return Boolean(currentFoodDetailsId);\n  }), operators_1.map(function (currentFoodDetailsId) {\n    return actions_1.setCurrentFoodDetailsOnDietChange(currentFoodDetailsId);\n  }));\n};\n\nexports.getCurrentFoodDetailsEpic$ = function (actions$, state$) {\n  return actions$.pipe(redux_observable_1.ofType(actions_1.SET_CURRENT_FOOD_DETAILS_START, actions_1.SET_CURRENT_FOOD_DETAILS_ON_DIET_CHANGE), operators_1.withLatestFrom(state$), operators_1.map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        action = _ref4[0],\n        state = _ref4[1];\n\n    return {\n      dietType: selectors_1.selectSettingsDietType(state),\n      foodItemId: action.foodItemId,\n      regionCode: selectors_1.selectSettingsRegionCode(state)\n    };\n  }), operators_1.switchMap(function (_ref5) {\n    var dietType = _ref5.dietType,\n        foodItemId = _ref5.foodItemId,\n        regionCode = _ref5.regionCode;\n    return seasonal_shared_frontend_utilities_1.getFoodDetailsData(foodItemId, dietType === seasonal_shared_models_1.DIET_TYPE.VEGETARIAN, dietType === seasonal_shared_models_1.DIET_TYPE.VEGAN, regionCode);\n  }), operators_1.map(function (currentFoodData) {\n    return actions_1.setCurrentFoodDetailsSuccess(currentFoodData);\n  }));\n};","\"use strict\";\n\nvar _slicedToArray = require(\"/home/circleci/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar redux_observable_1 = require(\"redux-observable\");\n\nvar actions_1 = require(\"../actions\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nvar selectors_1 = require(\"../selectors\");\n\nexports.setSeasonSelectedSeasonName$ = function (actions$, state$) {\n  return actions$.pipe(redux_observable_1.ofType(actions_1.SELECT_SEASON), operators_1.map(function (action) {\n    return action.seasonIndex;\n  }), operators_1.withLatestFrom(state$), operators_1.map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        seasonIndex = _ref2[0],\n        state = _ref2[1];\n\n    var basicSeasons = selectors_1.selectAllBasicSeasons(state);\n    return basicSeasons && basicSeasons[seasonIndex];\n  }), operators_1.map(function (selectedSeason) {\n    return actions_1.setSelectedSeasonName(selectedSeason && selectedSeason.name || '');\n  }));\n};","\"use strict\";\n\nvar _slicedToArray = require(\"/home/circleci/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar redux_observable_1 = require(\"redux-observable\");\n\nvar actions_1 = require(\"../actions\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nvar seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\n\nvar selectors_1 = require(\"../selectors\");\n\nexports.getCountriesStart$ = function (actions$) {\n  return actions$.pipe(redux_observable_1.ofType(actions_1.INIT_APP), operators_1.mapTo(actions_1.getCountriesStart()));\n};\n\nexports.getCountries$ = function (actions$) {\n  return actions$.pipe(redux_observable_1.ofType(actions_1.INIT_APP), operators_1.switchMap(function () {\n    return seasonal_shared_frontend_utilities_1.getCountries();\n  }), operators_1.map(function (countries) {\n    return actions_1.getCountriesSuccess(countries);\n  }));\n};\n\nexports.promptCountryChangeOnNewDetected$ = function (actions$, state$) {\n  return actions$.pipe(redux_observable_1.ofType(actions_1.USER_REGION_DETECTED), operators_1.withLatestFrom(state$), operators_1.map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        action = _ref2[0],\n        state = _ref2[1];\n\n    return {\n      detectedRegion: action.regionCode,\n      settingsRegionCode: selectors_1.selectSettingsRegionCode(state)\n    };\n  }), operators_1.filter(function (_ref3) {\n    var detectedRegion = _ref3.detectedRegion,\n        settingsRegionCode = _ref3.settingsRegionCode;\n    return detectedRegion !== settingsRegionCode;\n  }), operators_1.map(function (_ref4) {\n    var detectedRegion = _ref4.detectedRegion;\n    return actions_1.setUserRegionDetected(detectedRegion);\n  }));\n};\n\nexports.hideRegionChangePrompt$ = function (actions$) {\n  return actions$.pipe(redux_observable_1.ofType(actions_1.SET_USER_REGION_DETECTED), operators_1.delay(5000), operators_1.mapTo(actions_1.hideRegionChangePrompt()));\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar current_food_details_reducer_1 = require(\"./current-food-details.reducer\");\n\nvar current_season_reducer_1 = require(\"./current-season.reducer\");\n\nvar all_basic_seasons_reducer_1 = require(\"./all-basic-seasons.reducer\");\n\nvar all_seasons_reducer_1 = require(\"./all-seasons.reducer\");\n\nvar settings_reducer_1 = require(\"./settings.reducer\");\n\nvar ui_reducer_1 = require(\"./ui.reducer\");\n\nvar country_reducer_1 = require(\"./country.reducer\");\n\nexports.allReducers = {\n  allBasicSeasonData: all_basic_seasons_reducer_1.allBasicSeasonReducer,\n  allSeasonsWithFoodData: all_seasons_reducer_1.allSeasonsReducer,\n  countryData: country_reducer_1.countryReducer,\n  currentFoodDetailsData: current_food_details_reducer_1.currentFoodDetailsReducer,\n  currentSeasonData: current_season_reducer_1.currentSeasonWithFoodReducer,\n  settings: settings_reducer_1.settingsReducer,\n  ui: ui_reducer_1.uiReducer\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar actions_1 = require(\"../actions\");\n\nvar getDefaultState = function getDefaultState() {\n  return {\n    data: undefined,\n    isLoading: true\n  };\n};\n\nfunction currentFoodDetailsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getDefaultState();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions_1.SET_CURRENT_FOOD_DETAILS_START:\n      return Object.assign(Object.assign({}, state), {\n        isLoading: true\n      });\n\n    case actions_1.SET_CURRENT_FOOD_DETAILS_SUCCESS:\n      return Object.assign(Object.assign({}, state), {\n        data: action.currentFoodDetailsData,\n        isLoading: false\n      });\n\n    default:\n      return state;\n  }\n}\n\nexports.currentFoodDetailsReducer = currentFoodDetailsReducer;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar actions_1 = require(\"../actions\");\n\nvar seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\n\nvar getDefaultState = function getDefaultState() {\n  return {\n    currentSeasonIndex: seasonal_shared_frontend_utilities_1.getCurrentSeasonIndex(),\n    data: undefined,\n    isFoodLoading: true,\n    isRecipesLoading: true\n  };\n};\n\nfunction currentSeasonWithFoodReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getDefaultState();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions_1.SET_CURRENT_SEASON_WITH_FOOD_START:\n      return Object.assign(Object.assign({}, state), {\n        isFoodLoading: true\n      });\n\n    case actions_1.SET_CURRENT_SEASON_WITH_FOOD_SUCCESS:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), action.currentSeasonData),\n        isFoodLoading: false\n      });\n\n    case actions_1.SET_CURRENT_SEASON_WITH_RECIPES_START:\n      return Object.assign(Object.assign({}, state), {\n        isRecipesLoading: true\n      });\n\n    case actions_1.SET_CURRENT_SEASON_WITH_RECIPES_SUCCESS:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), action.currentSeasonData),\n        isRecipesLoading: false\n      });\n\n    case actions_1.SELECT_SEASON:\n    case actions_1.FOOD_DETAILS_SELECT_SEASON:\n      return Object.assign(Object.assign({}, state), {\n        currentSeasonIndex: action.seasonIndex\n      });\n\n    case actions_1.SET_SELECTED_SEASON_NAME:\n      return Object.assign(Object.assign({}, state), {\n        data: state.data && Object.assign(Object.assign({}, state.data), {\n          name: action.seasonName\n        })\n      });\n\n    default:\n      return state;\n  }\n}\n\nexports.currentSeasonWithFoodReducer = currentSeasonWithFoodReducer;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar actions_1 = require(\"../actions\");\n\nvar getDefaultState = function getDefaultState() {\n  return {\n    data: undefined,\n    isLoading: true\n  };\n};\n\nfunction allBasicSeasonReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getDefaultState();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions_1.SET_ALL_BASIC_SEASONS_START:\n      return Object.assign(Object.assign({}, state), {\n        isLoading: true\n      });\n\n    case actions_1.SET_ALL_BASIC_SEASONS_SUCCESS:\n      return Object.assign(Object.assign({}, state), {\n        data: action.seasonData,\n        isLoading: false\n      });\n\n    default:\n      return state;\n  }\n}\n\nexports.allBasicSeasonReducer = allBasicSeasonReducer;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar actions_1 = require(\"../actions\");\n\nvar populateApiData = function populateApiData(state, action) {\n  return !state.data ? action.seasonData : state.data.map(function (season) {\n    return Object.assign(Object.assign({}, season), action.seasonData.find(function (seasonData) {\n      return seasonData.id === season.id;\n    }));\n  });\n};\n\nvar getDefaultState = function getDefaultState() {\n  return {\n    data: undefined,\n    isFoodLoading: true,\n    isRecipesLoading: true,\n    numberOfSeasonsInView: 1\n  };\n};\n\nfunction allSeasonsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getDefaultState();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions_1.SET_ALL_SEASONS_WITH_FOOD_START:\n      return Object.assign(Object.assign({}, state), {\n        isFoodLoading: true\n      });\n\n    case actions_1.SET_ALL_SEASONS_WITH_FOOD_SUCCESS:\n      return Object.assign(Object.assign({}, state), {\n        data: populateApiData(state, action),\n        isFoodLoading: false\n      });\n\n    case actions_1.SET_ALL_SEASONS_WITH_RECIPES_START:\n      return Object.assign(Object.assign({}, state), {\n        isRecipesLoading: true\n      });\n\n    case actions_1.SET_ALL_SEASONS_WITH_RECIPES_SUCCESS:\n      return Object.assign(Object.assign({}, state), {\n        data: populateApiData(state, action),\n        isRecipesLoading: false\n      });\n\n    case actions_1.INCREASE_NUMBER_OF_ALL_FOOD_SEASONS_IN_VIEW:\n      return Object.assign(Object.assign({}, state), {\n        numberOfSeasonsInView: state.numberOfSeasonsInView + 1\n      });\n\n    default:\n      return state;\n  }\n}\n\nexports.allSeasonsReducer = allSeasonsReducer;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar seasonal_shared_models_1 = require(\"@chrisb-dev/seasonal-shared-models\");\n\nvar actions_1 = require(\"../actions\");\n\nvar v4_1 = __importDefault(require(\"uuid/v4\"));\n\nvar getDefaultState = function getDefaultState() {\n  return {\n    dietType: seasonal_shared_models_1.DIET_TYPE.ALL,\n    selectedRegionCode: undefined,\n    timesAppStarted: 0,\n    userId: undefined\n  };\n};\n\nfunction settingsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getDefaultState();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions_1.INIT_SETTINGS:\n      var initialSettings = action.settings;\n      return Object.assign(Object.assign(Object.assign({}, state), initialSettings), {\n        userId: initialSettings.userId || v4_1.default()\n      });\n\n    case actions_1.SET_DIET_TYPE:\n      return Object.assign(Object.assign({}, state), {\n        dietType: action.dietType\n      });\n\n    case actions_1.SET_USER_REGION_DETECTED:\n    case actions_1.SET_REGION:\n      return Object.assign(Object.assign({}, state), {\n        selectedRegionCode: action.regionCode\n      });\n\n    default:\n      return state;\n  }\n}\n\nexports.settingsReducer = settingsReducer;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar actions_1 = require(\"../actions\");\n\nvar getDefaultState = function getDefaultState() {\n  return {\n    isCountryChangePromptVisible: false,\n    isLocationSettingsPopupVisible: false,\n    isMenuOpen: false,\n    isSearchBarVisible: false\n  };\n};\n\nfunction uiReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getDefaultState();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions_1.GO_TO_ALL_SEASONS_VIEW:\n    case actions_1.SELECT_SEASON:\n    case actions_1.CLOSE_MENU:\n      return Object.assign(Object.assign({}, state), {\n        isMenuOpen: false\n      });\n\n    case actions_1.OPEN_MENU:\n      return Object.assign(Object.assign({}, state), {\n        isMenuOpen: true\n      });\n\n    case actions_1.SEARCH_BAR_CHANGED:\n      return Object.assign(Object.assign({}, state), {\n        searchTerm: action.newSearchTerm\n      });\n\n    case actions_1.SHOW_SEARCH_BAR:\n      return Object.assign(Object.assign({}, state), {\n        isSearchBarVisible: true\n      });\n\n    case actions_1.HIDE_SEARCH_BAR:\n      return Object.assign(Object.assign({}, state), {\n        isSearchBarVisible: false,\n        searchTerm: ''\n      });\n\n    case actions_1.SET_REGION:\n      return Object.assign(Object.assign({}, state), {\n        isLocationSettingsPopupVisible: false\n      });\n\n    case actions_1.SET_USER_REGION_DETECTED:\n      return Object.assign(Object.assign({}, state), {\n        isCountryChangePromptVisible: true\n      });\n\n    case actions_1.HIDE_REGION_CHANGE_PROMPT:\n      return Object.assign(Object.assign({}, state), {\n        isCountryChangePromptVisible: false\n      });\n\n    case actions_1.SHOW_LOCATION_SETTINGS_POPUP:\n      return Object.assign(Object.assign({}, state), {\n        isLocationSettingsPopupVisible: true\n      });\n\n    case actions_1.CLOSE_LOCATION_SETTINGS_POPUP:\n      return Object.assign(Object.assign({}, state), {\n        isLocationSettingsPopupVisible: false\n      });\n\n    default:\n      return state;\n  }\n}\n\nexports.uiReducer = uiReducer;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar actions_1 = require(\"../actions\");\n\nvar getDefaultState = function getDefaultState() {\n  return {\n    data: undefined,\n    isLoading: true\n  };\n};\n\nfunction countryReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getDefaultState();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions_1.GET_COUNTRIES_START:\n      return Object.assign(Object.assign({}, state), {\n        isLoading: true\n      });\n\n    case actions_1.GET_COUNTRIES_SUCCESS:\n      return Object.assign(Object.assign({}, state), {\n        data: action.countries,\n        isLoading: false\n      });\n\n    default:\n      return state;\n  }\n}\n\nexports.countryReducer = countryReducer;","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./actions\"));\n\n__export(require(\"./selectors\"));\n\n__export(require(\"./epics\"));\n\n__export(require(\"./reducers\"));","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./get-nearest-region-from-lat-lng\"));\n\n__export(require(\"./name-search\"));\n\n__export(require(\"./retrieve-backend-data\"));","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./enums\"));\n\n__export(require(\"./config\"));","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./all-basic-season.selectors\"));\n\n__export(require(\"./all-seasons-with-food.selectors\"));\n\n__export(require(\"./country.selectors\"));\n\n__export(require(\"./current-food-details.selectors\"));\n\n__export(require(\"./current-season.selectors\"));\n\n__export(require(\"./settings.selectors\"));\n\n__export(require(\"./ui.selectors\"));\n\n__export(require(\"./combined-selectors\"));","import React, { FC } from 'react';\n\nimport './AboutEatSeasonal.scss';\n\nimport {\n  TextHeadingLarge,\n  TextMedium\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nexport const AboutEatSeasonal: FC<{}> = ({}) => (\n  <div className='c-about-eat-seasonal'>\n    <h1 className='c-about-eat-seasonal__heading'>\n      <TextHeadingLarge>\n        About Eat Seasonal\n      </TextHeadingLarge>\n    </h1>\n    <p className='c-about-eat-seasonal__text'>\n      <TextMedium>\n        Eat Seasonal started because we wanted a way to easily see what fruit\n        and vegetables are in seasons. Walking around a supermarket, trying to\n        plan seasonal meals becomes much easier when you can quickly access\n        information on everything that's in season through your phone.\n      </TextMedium>\n    </p>\n    <p className='c-about-eat-seasonal__text'>\n      <TextMedium>\n        The app and website give you quick and simple view of all the food\n        currently in seasons. They also provide a recipes section including\n        carefully selected recipes which use ingredients which are mostly in\n        seasons. New recipes are being added all the time!\n      </TextMedium>\n    </p>\n  </div>\n);\n","import React, { FC } from 'react';\n\nimport './AndroidAppDownload.scss';\n\nexport const AndroidAppDownload: FC<{}> = () => (\n  <a className='c-android-app-download'\n    href={\n    'https://play.google.com/store/apps/details?id=com.chrisbdev.seasonal&p' +\n      'campaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1'\n  }>\n    <img className='c-android-app-download__image'\n      alt='Get it on Google Play'\n      src='https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png'/>\n  </a>\n);\n","import React, { FC } from 'react';\n\nimport './BottomTabs.scss';\n\nimport {\n  BareButton\n} from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { IBottomTabProps } from './BottomTabs.interface';\n\nconst addTabClasses = (isSelected: boolean) => (\n  `c-bottom-tabs__tab ${\n    isSelected\n      ? ' c-bottom-tabs__tab--selected'\n      : ''\n  }`\n);\n\nexport const BottomTabs: FC<IBottomTabProps> = ({\n  isCurrentTabFood,\n  isCurrentTabRecipes,\n  goToFoodTab,\n  goToRecipesTab\n}) => (\n  <nav className='c-bottom-tabs'>\n    <BareButton\n      className={addTabClasses(isCurrentTabFood)}\n      onClick={goToFoodTab}>\n      Food\n    </BareButton>\n    <BareButton\n      className={addTabClasses(isCurrentTabRecipes)}\n      onClick={goToRecipesTab}>\n      Recipes\n    </BareButton>\n  </nav>\n);\n","import { Action } from 'redux';\n\nexport const GO_TO_WEB_VERSION = 'GO_TO_WEB_VERSION';\nexport function goToWebVersion(): Action {\n  return {\n    type: GO_TO_WEB_VERSION\n  };\n}\n\nexport const GO_BACK_FROM_FOOD_DETAILS = 'GO_BACK_FROM_FOOD_DETAILS';\nexport function goBackFromFoodDetails(): Action {\n  return {\n    type: GO_BACK_FROM_FOOD_DETAILS\n  };\n}\n","import { Action } from 'redux';\n\nexport const GO_TO_FOOD_TAB = 'GO_TO_FOOD_TAB';\nexport function goToFoodTab(): Action {\n  return {\n    type: GO_TO_FOOD_TAB\n  };\n}\n\nexport const GO_TO_RECIPES_TABS = 'GO_TO_RECIPES_TABS';\nexport function goToRecipesTab(): Action {\n  return {\n    type: GO_TO_RECIPES_TABS\n  };\n}\n","export enum TABS {\n  FOOD,\n  RECIPES\n}\n","export const LANDING_URL = '/';\nexport const FOOD_TABLE_URL = '/food';\nexport const FOOD_DETAILS_URL = '/food-details';\nexport const ALL_SEASONS_URL = '/all-seasons';\n","import { createMatchSelector, RouterRootState, getLocation } from 'connected-react-router';\nimport { FOOD_DETAILS_URL, ALL_SEASONS_URL } from '../../const';\nimport { createSelector } from 'reselect';\nimport { IState } from '../../interfaces';\n\nexport const selectCurrentFoodDetailsParams = createMatchSelector<\n  RouterRootState,\n  {\n    id: string\n  }\n>(\n  `${FOOD_DETAILS_URL}/:id`\n);\n\nexport const selectCurrentFoodDetailsId = createSelector(\n  selectCurrentFoodDetailsParams,\n  (routeParams) => routeParams && routeParams.params.id\n);\n\nexport const selectCurrentLocation = (state: IState) => getLocation(state);\n\nexport const selectCurrentPath = createSelector(\n  selectCurrentLocation,\n  (location) => location.pathname\n);\n\nexport const selectIsCurrentRouteAllSeasons = createSelector(\n  selectCurrentPath,\n  (path) => path === ALL_SEASONS_URL\n);\n","import { createSelector } from 'reselect';\nimport { IState } from '../../interfaces';\nimport { TABS } from '../../const';\n\nconst selectWebUiState = (state: IState) => state.webUi;\n\nexport const selectCurrentTab = createSelector(\n  selectWebUiState,\n  (webUiState): TABS => webUiState.currentTab\n);\n\nexport const selectIsCurrentTabFood = createSelector(\n  selectCurrentTab,\n  (currentTab): boolean => currentTab === TABS.FOOD\n);\n\nexport const selectIsCurrentTabRecipes = createSelector(\n  selectCurrentTab,\n  (currentTab): boolean => currentTab === TABS.RECIPES\n);\n","import { ActionsObservable } from 'redux-observable';\n\nimport {\n  GO_TO_FOOD_TAB,\n  GO_TO_RECIPES_TABS,\n  GO_TO_WEB_VERSION\n} from '../actions';\n\nimport {\n  SELECT_SEASON,\n  FOOD_DETAILS_SELECT_SEASON,\n  OPEN_MENU,\n  CLOSE_MENU,\n  RECIPE_ITEM_CLICKED,\n  FOOD_ITEM_CLICKED\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nimport {\n  map,\n  filter,\n  ignoreElements\n} from 'rxjs/operators';\nimport { Action } from 'redux';\nimport { Observable } from 'rxjs';\nimport { WebSeasonalEpic } from './seasonal-epic.type';\n\nconst ACTIONS_TO_TRACK = [\n  SELECT_SEASON,\n  FOOD_DETAILS_SELECT_SEASON,\n  OPEN_MENU,\n  CLOSE_MENU,\n  GO_TO_FOOD_TAB,\n  GO_TO_RECIPES_TABS,\n  GO_TO_WEB_VERSION,\n  RECIPE_ITEM_CLICKED,\n  FOOD_ITEM_CLICKED\n];\n\nexport const trackActionEpic$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    filter(({ type }) => ACTIONS_TO_TRACK.includes(type)),\n    map(({ type }) => ga('send', 'event', type, type)),\n    ignoreElements()\n  )\n);\n","import { combineEpics } from 'redux-observable';\n\nimport { rootEpics } from '@chrisb-dev/seasonal-shared-frontend-redux';\nimport { trackActionEpic$ } from './tracking.epics';\n\nimport {\n  goToWebVersion$,\n  goToRecipeLink$,\n  goToFoodLink$,\n  goToFoodTable$,\n  goToFoodDetails$,\n  initFoodDetails$,\n  initAllSeasonsWithFoodData$,\n  goToAllSeasonsView$,\n  goBack$\n} from './route.epics';\n\nimport {\n  getStoredSettings$,\n  storeSettings$\n} from './settings.epics';\n\nexport const rootEpic = combineEpics(\n  ...rootEpics,\n  trackActionEpic$,\n  goToWebVersion$,\n  goToRecipeLink$,\n  goToFoodLink$,\n  goToFoodDetails$,\n  goBack$,\n  initFoodDetails$,\n  initAllSeasonsWithFoodData$,\n  goToFoodTable$,\n  goToAllSeasonsView$,\n  getStoredSettings$,\n  storeSettings$\n);\n","import { ActionsObservable, ofType, StateObservable } from 'redux-observable';\nimport {\n  mapTo, withLatestFrom, map, filter, debounceTime\n} from 'rxjs/operators';\nimport { Action } from 'redux';\nimport { Observable } from 'rxjs';\nimport {\n  GO_TO_WEB_VERSION,\n  GO_BACK_FROM_FOOD_DETAILS\n} from '../actions';\nimport {\n  GO_TO_ALL_SEASONS_VIEW,\n  RECIPE_ITEM_CLICKED,\n  IRecipeItemClicked,\n  FOOD_ITEM_CLICKED,\n  IFoodItemClicked,\n  FOOD_DETAILS_SELECT_SEASON,\n  SELECT_SEASON,\n  setCurrentFoodDetailsStart,\n  INIT_APP,\n  selectCurrentSeasonRecipesById,\n  setAllSeasonsWithFoodStart\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\nimport { push, goBack } from 'connected-react-router';\nimport { FOOD_TABLE_URL, FOOD_DETAILS_URL, ALL_SEASONS_URL } from '../../const';\nimport { IState } from '../../interfaces';\nimport { selectCurrentFoodDetailsId, selectIsCurrentRouteAllSeasons } from '../selectors';\nimport { WebSeasonalEpic } from './seasonal-epic.type';\n\nexport const goToWebVersion$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(GO_TO_WEB_VERSION),\n    mapTo(push(FOOD_TABLE_URL))\n  )\n);\n\nexport const goToRecipeLink$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>,\n  state$: StateObservable<IState>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(RECIPE_ITEM_CLICKED),\n    withLatestFrom(state$),\n    map(([\n      action,\n      state\n    ]) => selectCurrentSeasonRecipesById(\n        (action as IRecipeItemClicked).recipeItemId\n      )(state)\n    ),\n    map((recipe) => {\n      if (recipe) {\n        window.open(recipe.linkUrl, '_blank');\n      }\n      return { type: '' };\n    })\n  )\n);\n\nexport const goToFoodLink$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(FOOD_ITEM_CLICKED),\n    map((action) => (\n      push(`${FOOD_DETAILS_URL}/${(action as IFoodItemClicked).foodItemId}`)\n    ))\n  )\n);\n\nexport const goToFoodDetails$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(FOOD_ITEM_CLICKED),\n    map((action) => (\n      setCurrentFoodDetailsStart((action as IFoodItemClicked).foodItemId)\n    ))\n  )\n);\n\nexport const initFoodDetails$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>,\n  state$: StateObservable<IState>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(INIT_APP),\n    withLatestFrom(state$),\n    map(([, state]) => selectCurrentFoodDetailsId(state)),\n    filter((foodDetailsId) => Boolean(foodDetailsId)),\n    map((foodDetailsId) => setCurrentFoodDetailsStart(foodDetailsId!))\n  )\n);\n\nexport const initAllSeasonsWithFoodData$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>,\n  state$: StateObservable<IState>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(\n      GO_TO_ALL_SEASONS_VIEW,\n      INIT_APP,\n      GO_BACK_FROM_FOOD_DETAILS\n    ),\n    debounceTime(50),\n    withLatestFrom(state$),\n    map(([, state]) => selectIsCurrentRouteAllSeasons(state)),\n    filter((isRouteAllSeasons) => Boolean(isRouteAllSeasons)),\n    mapTo(setAllSeasonsWithFoodStart())\n  )\n);\n\nexport const goToFoodTable$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(\n      FOOD_DETAILS_SELECT_SEASON,\n      SELECT_SEASON\n    ),\n    mapTo(push(FOOD_TABLE_URL))\n  )\n);\n\nexport const goBack$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(\n      GO_BACK_FROM_FOOD_DETAILS\n    ),\n    mapTo(goBack())\n  )\n);\n\nexport const goToAllSeasonsView$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(GO_TO_ALL_SEASONS_VIEW),\n    mapTo(push(ALL_SEASONS_URL))\n  )\n);\n","import { ActionsObservable, ofType, StateObservable } from 'redux-observable';\n\nimport {\n  ISettingsState,\n  DIET_TYPE\n} from '@chrisb-dev/seasonal-shared-models';\nimport {\n  SET_DIET_TYPE,\n  selectSettingsState,\n  INIT_APP,\n  initSettings\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nimport { IState } from '../../interfaces';\n\nimport {\n  map,\n  ignoreElements,\n  withLatestFrom,\n  tap\n} from 'rxjs/operators';\nimport { Action } from 'redux';\nimport { Observable } from 'rxjs';\nimport { WebSeasonalEpic } from './seasonal-epic.type';\nimport { setStoredData, getStoredData } from '../../helpers';\n\nconst settingsStorageKey = 'seasonalSettings';\n\nexport const storeSettings$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>,\n  state$: StateObservable<IState>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(SET_DIET_TYPE),\n    withLatestFrom(state$),\n    map(([, state]) => selectSettingsState(state)),\n    tap((settingsState) => setStoredData(settingsStorageKey, settingsState)),\n    ignoreElements()\n  )\n);\n\nexport const getStoredSettings$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(INIT_APP),\n    map(() => getStoredData<ISettingsState>(settingsStorageKey)),\n    map((settings) => initSettings(\n      settings\n      ? {\n        ...settings,\n        timesAppStarted: (settings.timesAppStarted || 0) + 1\n      }\n      :\n      {\n        dietType: DIET_TYPE.ALL,\n        selectedRegionCode: undefined,\n        timesAppStarted: 1\n      })\n    )\n  )\n);\n","import {\n  GO_TO_FOOD_TAB,\n  GO_TO_RECIPES_TABS\n} from '../actions';\nimport { IWebUiState } from '../../interfaces';\nimport { Action } from 'redux';\nimport { TABS } from '../../const';\n\nconst getDefaultState = (): IWebUiState => ({\n  currentTab: TABS.FOOD\n});\n\nexport function webUiReducer(\n  state = getDefaultState(),\n  action: Action\n): IWebUiState {\n  switch (action.type) {\n    case GO_TO_FOOD_TAB:\n      return {\n        ...state,\n        currentTab: TABS.FOOD\n      };\n    case GO_TO_RECIPES_TABS:\n      return {\n        ...state,\n        currentTab: TABS.RECIPES\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  Action,\n  applyMiddleware,\n  combineReducers,\n  createStore,\n  compose\n} from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\n\nimport {\n  allReducers\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nimport { webUiReducer } from './web-ui.reducer';\n\nimport {\n  rootEpic\n} from '../epics';\n\nimport { IState } from '../../interfaces';\n\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { createHashHistory } from 'history';\n\nconst epicMiddleware = createEpicMiddleware<Action, Action, IState, {}>();\nexport const storeHistory = createHashHistory();\n\nexport const store = createStore(\n  combineReducers({\n    ...allReducers,\n    router: connectRouter(storeHistory),\n    webUi: webUiReducer\n  }),\n  compose(\n    applyMiddleware(\n      routerMiddleware(storeHistory),\n      epicMiddleware\n    )\n  )\n);\nepicMiddleware.run(rootEpic);\n","import { connect } from 'react-redux';\nimport {\n  BottomTabs\n} from './BottomTabs';\nimport {\n  goToFoodTab,\n  goToRecipesTab,\n  selectIsCurrentTabFood,\n  selectIsCurrentTabRecipes\n} from '../../store';\nimport {\n  IBottomTabDispatchProps,\n  IBottomTabInputProps\n} from './BottomTabs.interface';\nimport { Dispatch } from 'redux';\nimport { IState } from '../../interfaces';\n\nconst mapStateToProps = (\n  state: IState\n): IBottomTabInputProps => ({\n  isCurrentTabFood: selectIsCurrentTabFood(state),\n  isCurrentTabRecipes: selectIsCurrentTabRecipes(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IBottomTabDispatchProps => ({\n  goToFoodTab: () => dispatch(goToFoodTab()),\n  goToRecipesTab: () => dispatch(goToRecipesTab())\n});\n\nexport const BottomTabsConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BottomTabs);\n","import { connect } from 'react-redux';\nimport {\n  CurrentSeasonName\n} from './CurrentSeasonName';\nimport {\n  selectCurrentSeasonName,\n  selectIsCurrentSeasonFoodLoading\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\nimport {\n  ICurrentSeasonName\n} from './CurrentSeasonName.interface';\nimport { IState } from '../../interfaces';\n\nconst mapStateToProps = (\n  state: IState\n): ICurrentSeasonName => ({\n  currentSeasonName: selectCurrentSeasonName(state),\n  isLoading: selectIsCurrentSeasonFoodLoading(state)\n});\n\nexport const CurrentSeasonNameConnecter = connect(\n  mapStateToProps\n)(CurrentSeasonName);\n","import React, { FC } from 'react';\n\nimport './CurrentSeasonName.scss';\n\nimport { ICurrentSeasonName } from './CurrentSeasonName.interface';\nimport { SeasonNameView } from '../../components-layout';\n\nexport const CurrentSeasonName: FC<ICurrentSeasonName> = ({\n  currentSeasonName,\n  isLoading\n}) => (\n  !isLoading\n    ? <SeasonNameView name={currentSeasonName} />\n    : null\n);\n","import React, { FC } from 'react';\n\nimport './DietaryFilters.scss';\n\nimport {\n  IDietaryFiltersProps\n} from './DietaryFilters.interface';\nimport { DIET_TYPE } from '@chrisb-dev/seasonal-shared-models';\nimport { RadioButtonGroup } from '@chrisb-dev/seasonal-shared-frontend-components';\n\nconst radioButtons = [{\n  label: 'All',\n  value: DIET_TYPE.ALL\n}, {\n  label: 'Vegetarian',\n  value: DIET_TYPE.VEGETARIAN\n}, {\n  label: 'Vegan',\n  value: DIET_TYPE.VEGAN\n}];\n\nexport const DietaryFilters: FC<IDietaryFiltersProps> = ({\n  dietType,\n  update\n}) => (\n  <div className='c-dietary-filters'>\n    <RadioButtonGroup\n      groupName='dietary-filter'\n      radioButtons={radioButtons}\n      selectedValue={dietType}\n      onChange={(newValue) => update(newValue as DIET_TYPE)}\n    />\n  </div>\n);\n","import { connect } from 'react-redux';\nimport {\n  DietaryFilters\n} from './DietaryFilters';\n\nimport { IState } from '../../interfaces';\nimport {\n  IDietaryFiltersInputProps,\n  IDietaryFiltersDispatchProps\n} from './DietaryFilters.interface';\nimport { Dispatch } from 'redux';\nimport {\n  DIET_TYPE\n} from '@chrisb-dev/seasonal-shared-models';\nimport {\n  setDietType, selectSettingsDietType\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nconst mapStateToProps = (\n  state: IState\n): IDietaryFiltersInputProps => ({\n  dietType: selectSettingsDietType(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IDietaryFiltersDispatchProps => ({\n  update: (dietType: DIET_TYPE) => dispatch(setDietType(dietType))\n});\n\nexport const DietaryFiltersConnector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DietaryFilters);\n","import { connect } from 'react-redux';\nimport {\n  FoodDetailsLoader\n} from './FoodDetailsLoader';\nimport {\n  selectIsFoodDataOrBasicSeasonsLoading\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nimport { IState } from '../../interfaces';\nimport {\n  IFoodDetailsLoaderInputProps\n} from './FoodDetailsLoader.interface';\n\nconst mapStateToProps = (\n  state: IState\n): IFoodDetailsLoaderInputProps => ({\n  isLoading: selectIsFoodDataOrBasicSeasonsLoading(state)\n});\n\nexport const FoodDetailsLoaderConnecter = connect(\n  mapStateToProps\n)(FoodDetailsLoader);\n","import React, { FC } from 'react';\n\nimport './FoodDetailsLoader.scss';\n\nimport {\n  LoadingSpinner\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport {\n  IFoodDetailsLoaderInputProps\n} from './FoodDetailsLoader.interface';\n\nexport const FoodDetailsLoader: FC<IFoodDetailsLoaderInputProps> = ({\n  isLoading\n}) => (\n  isLoading\n    ? <div className='c-food-details-loader'>\n      <LoadingSpinner />\n    </div>\n    : null\n);\n","import { connect } from 'react-redux';\nimport {\n  FoodDetailsTopSection\n} from './FoodDetailsTopSection';\nimport {\n  goBackFromFoodDetails\n} from '../../store';\nimport {\n  selectCurrentFoodDetailsName,\n  selectCurrentFoodDetailsImageUrl,\n  selectIsFoodDataOrBasicSeasonsLoading\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nimport { IState } from '../../interfaces';\nimport {\n  IFoodDetailsTopSectionInputProps,\n  IFoodDetailsTopSectionDispatchProps\n} from './FoodDetailsTopSection.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (\n  state: IState\n): IFoodDetailsTopSectionInputProps => ({\n  foodImageUrl: selectCurrentFoodDetailsImageUrl(state),\n  foodName: selectCurrentFoodDetailsName(state),\n  isLoading: selectIsFoodDataOrBasicSeasonsLoading(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IFoodDetailsTopSectionDispatchProps => ({\n  onGoBack: () => dispatch(goBackFromFoodDetails())\n});\n\nexport const FoodDetailsTopSectionConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FoodDetailsTopSection);\n","import React, { FC } from 'react';\n\nimport './FoodDetailsTopSection.scss';\n\nimport {\n  ArrowIcon,\n  BareButton,\n  TextHeadingMedium\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport {\n  IFoodDetailsTopSectionProps\n} from './FoodDetailsTopSection.interface';\n\nexport const FoodDetailsTopSection: FC<IFoodDetailsTopSectionProps> = ({\n  foodImageUrl,\n  foodName,\n  isLoading,\n  onGoBack\n}) => (\n  !isLoading\n    ? <div className='c-food-details-top-section'>\n    <div className='c-food-details-top-section__top-bar'>\n      <BareButton\n        className='c-food-details-top-section__back-button'\n        onClick={onGoBack}>\n        <ArrowIcon />\n      </BareButton>\n      <TextHeadingMedium className='c-food-details-top-section__food-name'>\n        {foodName}\n      </TextHeadingMedium>\n    </div>\n    {\n      foodImageUrl && <img src={foodImageUrl}\n        className='c-food-details-top-section__food-image'/>\n    }\n  </div>\n  : null\n);\n","import { connect } from 'react-redux';\nimport {\n  FoodTable\n} from './FoodTable';\nimport {\n  selectIsCurrentTabFood\n} from '../../store';\nimport {\n  selectIsCurrentSeasonFoodLoading,\n  selectVisibleFoodData,\n  foodItemClicked\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\nimport { IState } from '../../interfaces';\nimport {\n  IFoodTableInputProps,\n  IFoodTableDispatchProps\n} from './FoodTable.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (\n  state: IState\n): IFoodTableInputProps => {\n  return {\n    food: selectVisibleFoodData(state),\n    isCurrentTabFood: selectIsCurrentTabFood(state),\n    isLoading: selectIsCurrentSeasonFoodLoading(state)\n  };\n};\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IFoodTableDispatchProps => {\n  return {\n    onFoodClick: (foodItemId) => dispatch(foodItemClicked(foodItemId))\n  };\n};\n\nexport const FoodTableConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FoodTable);\n","import React, { FC } from 'react';\n\nimport './FoodTable.scss';\n\nimport {\n  ImageGrid\n} from '../../components-layout';\n\nimport {\n  LoadingSpinner\n} from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { IFoodTableProps } from './FoodTable.interface';\n\nexport const FoodTable: FC<IFoodTableProps> = ({\n  isCurrentTabFood,\n  isLoading,\n  food,\n  onFoodClick\n}) => (\n  isCurrentTabFood\n    ? isLoading\n      ? <div className='c-food-table__loading-spinner-wrapper'>\n        <LoadingSpinner />\n      </div>\n      : <ImageGrid data={food} onClick={onFoodClick} />\n    : null\n);\n","import { connect } from 'react-redux';\nimport {\n  Header\n} from './Header';\nimport {\n  openMenu\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\nimport { IHeaderDispatchProps } from './Header.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IHeaderDispatchProps => ({\n  onMenuOpen: () => dispatch(openMenu())\n});\n\nexport const HeaderConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React, { FC } from 'react';\n\nimport './Header.scss';\n\nimport {\n  BareButton,\n  BurgerIcon,\n  TextHeadingLarge\n} from '@chrisb-dev/seasonal-shared-frontend-components';\nimport {\n  SearchBarConnecter\n} from '../';\nimport { IHeaderDispatchProps } from './Header.interface';\n\nexport const Header: FC<IHeaderDispatchProps> = ({\n  onMenuOpen\n}) => (\n  <header className='c-header'>\n    <BareButton className='c-header__btn' onClick={onMenuOpen}>\n      <BurgerIcon />\n    </BareButton>\n    <h1 className='c-header__text'>\n      <TextHeadingLarge>\n        Eat Seasonal\n      </TextHeadingLarge>\n    </h1>\n    <SearchBarConnecter />\n  </header>\n);\n","import React, { FC } from 'react';\n\nimport './IOSAppDownload.scss';\n\nexport const IOSAppDownload: FC<{}> = () => (\n  <a className='c-ios-app-download'\n    href='https://apps.apple.com/us/app/eat-seasonal/id1496551124?ls=1'>\n    <img className='c-ios-app-download__image'\n      alt='Get it on the iOS store'\n      src='https://developer.apple.com/app-store/marketing/guidelines/images/badge-example-preferred_2x.png'/>\n  </a>\n);\n","import React, { FC } from 'react';\n\nimport './PageLayout.scss';\n\nexport const PageLayout: FC<{}> = ({\n  children\n}) => (\n  <div className='c-page-layout'>\n    { children }\n  </div>\n);\n","import React, { Fragment, FC } from 'react';\n\nimport './SeasonMenu.scss';\n\nimport {\n  BareButton,\n  CrossIcon,\n  TextMedium,\n  LoadingSpinner\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport {\n  fadeInOutAnimation\n} from '../../helpers';\nimport { PoseGroup } from 'react-pose';\nimport { ISeasonMenuProps } from './SeasonMenu.interface';\n\nconst OverlayFadeInOutAnimation = fadeInOutAnimation();\n\nexport const SeasonMenu: FC<ISeasonMenuProps> = ({\n  allBasicSeasonData,\n  currentSeasonIndex,\n  isCurrentRouteAllSeasons,\n  isLoading,\n  isMenuOpen,\n  onSeasonSelected,\n  onClose,\n  onAllSeasonsSelected\n}) => (\n  <div>\n    <PoseGroup>\n      {\n        isMenuOpen &&\n        <OverlayFadeInOutAnimation key='season-menu-overlay'\n          className='c-season-menu__overlay'\n          onClick={onClose} />\n      }\n    </PoseGroup>\n    <nav\n      className={`c-season-menu ${isMenuOpen ? 'c-season-menu--is-open' : ''}`}>\n      {\n        !isLoading\n          ? <Fragment>\n              { allBasicSeasonData &&\n                  allBasicSeasonData.map(({ name }, index) => (\n                  <BareButton\n                    key={name}\n                    className={\n                      `c-season-menu__button ${\n                        !isCurrentRouteAllSeasons &&\n                        index === currentSeasonIndex\n                          ? 'c-season-menu__button--selected'\n                          : ''\n                        }`}\n                    onClick={() => onSeasonSelected(index)}>\n                    <TextMedium>{ name }</TextMedium>\n                  </BareButton>\n                ))\n              }\n              <BareButton className={\n                `c-season-menu__button ${\n                  isCurrentRouteAllSeasons\n                    ? 'c-season-menu__button--selected'\n                    : ''\n                }`\n                }\n                onClick={onAllSeasonsSelected}>\n                <TextMedium>All seasons</TextMedium>\n              </BareButton>\n          </Fragment>\n          : <div className='c-season-menu__loading-spinner-wrapper'>\n            <LoadingSpinner />\n          </div>\n      }\n      <BareButton className='c-season-menu__close-btn'\n        onClick={onClose}>\n        <CrossIcon />\n      </BareButton>\n    </nav>\n  </div>\n);\n","import { connect } from 'react-redux';\nimport {\n  SeasonMenu\n} from './SeasonMenu';\nimport {\n  selectIsMenuOpen,\n  closeMenu,\n  selectAllBasicSeasons,\n  selectIsBasicSeasonsLoading,\n  selectSeason,\n  selectCurrentSeasonIndex,\n  goToAllSeasonsView\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nimport { IState } from '../../interfaces';\nimport {\n  ISeasonMenuInputProps,\n  ISeasonMenuDispatchProps\n} from './SeasonMenu.interface';\nimport { Dispatch } from 'redux';\n\nimport { selectIsCurrentRouteAllSeasons } from '../../store';\n\nconst mapStateToProps = (\n  state: IState\n): ISeasonMenuInputProps => ({\n  allBasicSeasonData: selectAllBasicSeasons(state),\n  currentSeasonIndex: selectCurrentSeasonIndex(state),\n  isCurrentRouteAllSeasons: selectIsCurrentRouteAllSeasons(state),\n  isLoading: selectIsBasicSeasonsLoading(state),\n  isMenuOpen: selectIsMenuOpen(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): ISeasonMenuDispatchProps => ({\n  onAllSeasonsSelected: () => dispatch(goToAllSeasonsView()),\n  onClose: () => dispatch(closeMenu()),\n  onSeasonSelected: (\n    seasonIndex: number\n  ) => dispatch(selectSeason(seasonIndex))\n});\n\nexport const SeasonMenuConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SeasonMenu);\n","import React, { FC } from 'react';\nimport { PageLayout } from '../../components-layout/PageLayout/PageLayout';\nimport { HeaderConnecter } from '../Header/Header.connector';\nimport { SeasonMenuConnecter } from '../SeasonMenu/SeasonMenu.connector';\n\nexport const PageWithMenu: FC<{}> = ({\n  children\n}) => (\n  <PageLayout>\n    <HeaderConnecter />\n    <SeasonMenuConnecter />\n    { children }\n  </PageLayout>\n);\n","import { connect } from 'react-redux';\nimport {\n  RecipesForFood\n} from './RecipesForFood';\nimport {\n  selectIsFoodDataOrBasicSeasonsLoading,\n  selectVisibleRecipesForFoodDetailsData,\n  foodDetailsSelectRecipe\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nimport { IState } from '../../interfaces';\nimport {\n  IRecipesForFoodInputProps,\n  IRecipesForFoodDispatchProps\n} from './RecipesForFood.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (\n  state: IState\n): IRecipesForFoodInputProps => ({\n  currentFoodDetailsRecipes: selectVisibleRecipesForFoodDetailsData(state),\n  isLoading: selectIsFoodDataOrBasicSeasonsLoading(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IRecipesForFoodDispatchProps => ({\n  onRecipeSelected: (recipeId: string) => (\n    dispatch(foodDetailsSelectRecipe(recipeId))\n  )\n});\n\nexport const RecipesForFoodConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecipesForFood);\n","import React, { FC } from 'react';\n\nimport './RecipesForFood.scss';\n\nimport { IRecipesForFoodProps } from './RecipesForFood.interface';\nimport { ImageGrid } from '../../components-layout';\nimport {\n  TextHeadingSmall\n} from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { DietaryFiltersConnector } from '../DietaryFilters/DietaryFilters.connector';\n\nexport const RecipesForFood: FC<IRecipesForFoodProps> = ({\n  isLoading,\n  currentFoodDetailsRecipes,\n  onRecipeSelected\n}) => (\n  !isLoading && currentFoodDetailsRecipes && currentFoodDetailsRecipes.length > 0\n    ? <div className='c-recipes-for-food'>\n      <TextHeadingSmall className='c-recipes-for-food__heading'>\n        Recipes\n      </TextHeadingSmall>\n      <DietaryFiltersConnector />\n      <ImageGrid data={currentFoodDetailsRecipes} onClick={onRecipeSelected} />\n    </div>\n    : null\n);\n","import { connect } from 'react-redux';\nimport {\n  RecipeTable\n} from './RecipeTable';\nimport {\n  selectIsCurrentTabFood\n} from '../../store';\nimport {\n  selectVisibleRecipeData,\n  recipeItemClicked,\n  selectIsCurrentSeasonRecipesLoading\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\nimport { IState } from '../../interfaces';\nimport {\n  IRecipeTableInputProps,\n  IRecipeTableDispatchProps\n} from './RecipeTable.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (\n  state: IState\n): IRecipeTableInputProps => {\n  return {\n    isCurrentTabFood: selectIsCurrentTabFood(state),\n    isLoading: selectIsCurrentSeasonRecipesLoading(state),\n    recipes: selectVisibleRecipeData(state)\n  };\n};\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IRecipeTableDispatchProps => {\n  return {\n    onRecipeClick: (recipeItemId) => dispatch(recipeItemClicked(recipeItemId))\n  };\n};\n\nexport const RecipeTableConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecipeTable);\n","import React, { FC } from 'react';\n\nimport './RecipeTable.scss';\n\nimport {\n  ImageGrid\n} from '../../components-layout';\n\nimport {\n  LoadingSpinner\n} from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { IRecipeTableProps } from './RecipeTable.interface';\nimport { DietaryFiltersConnector } from '../DietaryFilters/DietaryFilters.connector';\n\nexport const RecipeTable: FC<IRecipeTableProps> = ({\n  isCurrentTabFood,\n  isLoading,\n  recipes,\n  onRecipeClick\n}) => (\n  !isCurrentTabFood\n    ? <div>\n      <DietaryFiltersConnector />\n      {\n        isLoading\n        ? <div className='c-food-table__loading-spinner-wrapper'>\n          <LoadingSpinner />\n        </div>\n        : <ImageGrid data={recipes} onClick={onRecipeClick} />\n      }\n    </div>\n    : null\n);\n","import React, { FC } from 'react';\n\nimport './SearchBar.scss';\n\nimport { ISearchBarProps } from './SearchBar.interface';\n\nimport {\n  BareButton,\n  CrossIcon,\n  MagnifyingGlassIcon,\n  Input\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nconst getSearchBarClassName = (isSearchBarVisible: boolean) => (\n  'c-search-bar' +\n    (\n      isSearchBarVisible\n        ? ' c-search-bar--show-full'\n        : ''\n    )\n);\n\nconst focusOnInputIfSearchVisible = (\n  ref: HTMLDivElement | undefined,\n  isSearchBarVisible: boolean\n) => {\n  if (ref && isSearchBarVisible) {\n    const input = ref.querySelector('input');\n    if (input) {\n      input.focus();\n    }\n  }\n};\n\nexport const SearchBar: FC<ISearchBarProps> = ({\n  isSearchBarVisible,\n  onHideSearchBar,\n  onSearchChanged,\n  onShowSearchBar\n}) => (\n  <div className={getSearchBarClassName(isSearchBarVisible)}\n    ref={\n      (ref: HTMLDivElement) => (\n        focusOnInputIfSearchVisible(ref, isSearchBarVisible)\n      )\n    }>\n    <Input className='c-search-bar__input'\n      onChange={(newSearchTerm) => onSearchChanged(newSearchTerm)}\n      placeholder='Search' />\n    {\n      isSearchBarVisible\n        ? <BareButton className='c-search-bar__search-button'\n            onClick={onHideSearchBar}>\n            <CrossIcon />\n          </BareButton>\n        : <BareButton className='c-search-bar__search-button'\n            onClick={onShowSearchBar}>\n            <MagnifyingGlassIcon />\n          </BareButton>\n    }\n  </div>\n);\n","import { connect } from 'react-redux';\nimport {\n  SearchBar\n} from './SearchBar';\nimport {\n  searchBarChanged,\n  selectIsSearchBarVisible,\n  showSearchBar,\n  hideSearchBar\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\nimport {\n  ISearchBarDispatchProps,\n  ISearchBarInputProps\n} from './SearchBar.interface';\nimport { Dispatch } from 'redux';\nimport { IState } from '../../interfaces';\n\nconst mapStateToProps = (state: IState): ISearchBarInputProps => ({\n  isSearchBarVisible: selectIsSearchBarVisible(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): ISearchBarDispatchProps => ({\n  onHideSearchBar: () => dispatch(hideSearchBar()),\n  onSearchChanged: (newSearchTerm: string) => (\n    dispatch((searchBarChanged(newSearchTerm)))\n  ),\n  onShowSearchBar: () => dispatch(showSearchBar())\n});\n\nexport const SearchBarConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchBar);\n","import { connect } from 'react-redux';\nimport {\n  SeasonsForFood\n} from './SeasonsForFood';\nimport {\n  selectSeasonsSelectedForFood,\n  selectIsFoodDataOrBasicSeasonsLoading,\n  foodDetailsSelectSeason\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nimport { IState } from '../../interfaces';\nimport {\n  ISeasonForFoodInputProps,\n  ISeasonForFoodDispatchProps\n} from './SeasonsForFood.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (\n  state: IState\n): ISeasonForFoodInputProps => ({\n  isLoading: selectIsFoodDataOrBasicSeasonsLoading(state),\n  seasonsSelectedForFood: selectSeasonsSelectedForFood(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): ISeasonForFoodDispatchProps => ({\n  onSeasonSelected: (seasonIndex: number) => (\n    dispatch(foodDetailsSelectSeason(seasonIndex))\n  )\n});\n\nexport const SeasonsForFoodConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SeasonsForFood);\n","import React, { Fragment, FC } from 'react';\n\nimport './SeasonsForFood.scss';\n\nimport {\n  TextMedium,\n  TextSmall,\n  BareButton,\n  TextHeadingSmall\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport { ISeasonForFoodProps } from './SeasonsForFood.interface';\n\nexport const SeasonsForFood: FC<ISeasonForFoodProps> = ({\n  isLoading,\n  seasonsSelectedForFood,\n  onSeasonSelected\n}) => (\n  !isLoading\n    ? <Fragment>\n    <TextHeadingSmall\n      className='c-season-for-food__list-heading'>\n      When are they in season?\n    </TextHeadingSmall>\n    <div className='c-season-for-food__list'>\n      {\n        seasonsSelectedForFood && seasonsSelectedForFood.map((\n          {\n            isSelected,\n            name\n          },\n          seasonIndex\n        ) => (\n          <BareButton\n            key={name}\n            className={\n              `c-season-for-food__season` +\n                (\n                  isSelected\n                    ? ` c-season-for-food__season--selected`\n                    : ''\n                )\n              }\n            onClick={ () => onSeasonSelected(seasonIndex) }>\n            <TextMedium>\n              { name.substring(0, 3) }\n            </TextMedium>\n          </BareButton>\n        ))\n      }\n    </div>\n    <div\n      className={`c-season-food__in-season-key ` +\n        `c-season-food__in-season-key--in-season`\n      }>\n      <TextSmall className='c-season-food__in-season-key__text'>\n        In season\n      </TextSmall>\n    </div>\n    <div\n      className='c-season-food__in-season-key'>\n      <TextSmall className='c-season-food__in-season-key__text'>\n        Not in season\n      </TextSmall>\n    </div>\n  </Fragment>\n  : null\n);\n","import { connect } from 'react-redux';\nimport {\n  ViewWebAppVersion\n} from './ViewWebAppVersion';\nimport {\n  goToWebVersion\n} from '../../store';\nimport { IViewWebAppVersionDispatchProps } from './ViewWebAppVersion.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IViewWebAppVersionDispatchProps => ({\n  onGoToWebVersion: () => dispatch((goToWebVersion()))\n});\n\nexport const ViewWebAppVersionConnector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ViewWebAppVersion);\n","import React, { FC } from 'react';\n\nimport {\n  PrimaryButton\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport {\n  IViewWebAppVersionDispatchProps\n} from './ViewWebAppVersion.interface';\n\nexport const ViewWebAppVersion: FC<IViewWebAppVersionDispatchProps> = ({\n  onGoToWebVersion\n}) => (\n  <PrimaryButton onClick={onGoToWebVersion}>\n    To web version\n  </PrimaryButton>\n);\n","import React, { FC } from 'react';\nimport './ViewAppLinks.scss';\nimport {\n  AndroidAppDownload\n} from '../AndroidAppDownload/AndroidAppDownload';\nimport {\n  ViewWebAppVersionConnector\n} from '../ViewWebAppVersion/ViewWebAppVersion.connector';\nimport { IOSAppDownload } from '../IOSAppDownload/IOSAppDownload';\n\nexport const ViewAppLinks: FC<{}> = () => (\n  <div className='c-view-app-links'>\n    <IOSAppDownload />\n    <AndroidAppDownload />\n    <ViewWebAppVersionConnector />\n  </div>\n);\n","import React, { FC } from 'react';\n\nimport './WhyEatSeasonal.scss';\n\nimport {\n  TextHeadingLarge\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport {\n  ISummaryColumnList,\n  SummaryColumnList\n} from '../../components-layout';\n\nimport columns from './why-eat-seasonal-columns.json';\n\nconst summaryColumns: ISummaryColumnList = {\n  columns\n};\n\nexport const WhyEatSeasonal: FC<{}> = ({}) => (\n  <div className='c-why-eat-seasonal'>\n    <h2 className='c-why-eat-seasonal__heading'>\n      <TextHeadingLarge>\n        Why Eat Seasonal?\n      </TextHeadingLarge>\n    </h2>\n    <SummaryColumnList {...summaryColumns} />\n  </div>\n);\n","import { connect } from 'react-redux';\nimport {\n  AllSeasons\n} from './AllSeasons';\n\nimport { IState } from '../../interfaces';\nimport {\n  IAllSeasonsInputProps,\n  IAllSeasonsDispatchProps\n} from './AllSeasons.interface';\nimport { Dispatch } from 'redux';\nimport {\n  foodItemClicked,\n  selectAllSeasonsVisibleFoodData,\n  selectIsAllSeasonsFoodLoading,\n  increaseNumberOfAllFoodSeasonsInView,\n  selectHasMoreSeasonsInAllSeasonsView\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nconst mapStateToProps = (\n  state: IState\n): IAllSeasonsInputProps => ({\n  hasMoreSeasonsInAllSeasonsView: selectHasMoreSeasonsInAllSeasonsView(state),\n  isLoading: selectIsAllSeasonsFoodLoading(state),\n  seasons: selectAllSeasonsVisibleFoodData(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IAllSeasonsDispatchProps => ({\n  increaseNumberOfAllFoodSeasonsInView: () => (\n    dispatch(increaseNumberOfAllFoodSeasonsInView())\n  ),\n  onFoodClick: (foodItemId: string) => dispatch(foodItemClicked(foodItemId))\n});\n\nexport const AllSeasonsConnector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AllSeasons);\n","import React, { FC } from 'react';\nimport './AllSeasons.scss';\nimport {\n  IAllSeasonsProps\n} from './AllSeasons.interface';\nimport { SeasonNameView, ImageGrid } from '../../components-layout';\nimport { LoadingSpinner } from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport InfiniteScroll from 'react-infinite-scroller';\n\nexport const AllSeasons: FC<IAllSeasonsProps> = ({\n  isLoading,\n  onFoodClick,\n  seasons,\n  hasMoreSeasonsInAllSeasonsView,\n  increaseNumberOfAllFoodSeasonsInView\n}) => (\n  isLoading\n  ? <div className='c-all-seasons__loading-spinner-wrapper'>\n    <LoadingSpinner />\n  </div>\n  : <div className='c-all-seasons'>\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={increaseNumberOfAllFoodSeasonsInView}\n      hasMore={hasMoreSeasonsInAllSeasonsView}\n      loader={<LoadingSpinner key='all-seasons-spinner' />}>\n    {\n      seasons && seasons.map(({ name, food }) => (\n        <div className='c-all-seasons__season' key={name}>\n          <SeasonNameView name={name}></SeasonNameView>\n          <ImageGrid data={food}\n            onClick={onFoodClick} skipAnimation={true} />\n        </div>\n      ))\n    }\n    </InfiniteScroll>\n  </div>\n);\n","import { connect } from 'react-redux';\nimport {\n  AllSeasonsGraph\n} from './AllSeasonsGraph';\n\nimport { IState } from '../../interfaces';\nimport {\n  IAllSeasonsGraphInputProps\n} from './AllSeasonsGraph.interface';\nimport {\n  selectFoodInSeasonGraphData\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nconst mapStateToProps = (\n  state: IState\n): IAllSeasonsGraphInputProps => ({\n  foodInSeasonGraphData: selectFoodInSeasonGraphData(state)\n});\n\nexport const AllSeasonsGraphConnector = connect(\n  mapStateToProps\n)(AllSeasonsGraph);\n","import React, { FC } from 'react';\nimport './AllSeasonsGraph.scss';\nimport {\n  IAllSeasonsGraphInputProps\n} from './AllSeasonsGraph.interface';\nimport {\n  BarChart,\n  XAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Bar,\n  YAxis\n} from 'recharts';\nimport {\n  TextHeadingMedium,\n  TextMedium\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nexport const AllSeasonsGraph: FC<IAllSeasonsGraphInputProps> = ({\n  foodInSeasonGraphData\n}) => (\n  foodInSeasonGraphData\n    ? <div className='c-all-seasons-graph'>\n        <TextHeadingMedium className='c-all-seasons-graph__heading'>\n          Number of food items in seasons\n        </TextHeadingMedium>\n        <ResponsiveContainer width='100%' height={400}>\n          <BarChart data={foodInSeasonGraphData}>\n            <XAxis dataKey='name' />\n            <YAxis\n              dataKey='Number of food items in season'\n              allowDecimals={false} />\n            <Tooltip />\n            <Bar dataKey='Number of food items in season' fill='#5CB5CD' />\n          </BarChart>\n        </ResponsiveContainer>\n        <TextMedium className='c-all-seasons-graph__text'>\n          Enter some text in the search bar to find when certain items are in season\n        </TextMedium>\n      </div>\n    : null\n);\n","import React, { FC } from 'react';\n\nimport './FoodDetailsPage.scss';\n\nimport {\n  FoodDetailsLoaderConnecter,\n  FoodDetailsTopSectionConnecter,\n  PageWithMenu,\n  SeasonsForFoodConnecter,\n  RecipesForFoodConnecter\n} from '../../components-main';\n\nexport const FoodDetailsPage: FC<{}> = () => (\n  <PageWithMenu>\n    <div className='c-food-details-page__main'>\n      <FoodDetailsTopSectionConnecter />\n      <FoodDetailsLoaderConnecter />\n      <RecipesForFoodConnecter />\n      <SeasonsForFoodConnecter />\n    </div>\n  </PageWithMenu>\n);\n","import React, { FC } from 'react';\n\nimport './FoodTablePage.scss';\n\nimport {\n  BottomTabsConnecter,\n  CurrentSeasonNameConnecter,\n  FoodTableConnecter,\n  PageWithMenu,\n  RecipeTableConnecter\n} from '../../components-main';\n\nexport const FoodTablePage: FC<{}> = () => (\n  <PageWithMenu>\n    <div className='c-food-table-page__main'>\n      <CurrentSeasonNameConnecter />\n      <FoodTableConnecter />\n      <RecipeTableConnecter />\n      <BottomTabsConnecter />\n    </div>\n  </PageWithMenu>\n);\n","import React, { FC } from 'react';\n\nimport './IntroPage.scss';\n\nimport {\n  AboutEatSeasonal,\n  ViewAppLinks,\n  WhyEatSeasonal\n} from '../../components-main';\n\nexport const IntroPage: FC<{}> = () => (\n  <div className='c-intro-page'>\n    <div className='c-intro-page__top-section'>\n      <img className='c-intro-page__splash-image' src='/splash.png'/>\n      <ViewAppLinks />\n    </div>\n    <AboutEatSeasonal />\n    <WhyEatSeasonal />\n    <div className='c-intro-page__mobile-extra-app-links'>\n      <ViewAppLinks />\n    </div>\n  </div>\n);\n","import React, { FC } from 'react';\nimport {\n  PageWithMenu,\n  AllSeasonsConnector,\n  AllSeasonsGraphConnector\n} from '../../components-main';\n\nimport './AllSeasonsPage.scss';\n\nexport const AllSeasonsPage: FC<{}> = () => (\n  <PageWithMenu>\n    <div className='c-all-seasons-page'>\n      <AllSeasonsGraphConnector />\n      <AllSeasonsConnector />\n    </div>\n  </PageWithMenu>\n);\n","import React, { FC } from 'react';\n\nimport {\n  IntroPage,\n  FoodTablePage,\n  FoodDetailsPage,\n  AllSeasonsPage\n} from '../components-pages';\nimport './App.scss';\n\nimport { Provider } from 'react-redux';\nimport { store, storeHistory } from '../store/reducers';\n\nimport { Route, Switch } from 'react-router';\n\nimport {\n  FOOD_TABLE_URL,\n  LANDING_URL,\n  FOOD_DETAILS_URL,\n  ALL_SEASONS_URL\n} from '../const';\n\nimport { ConnectedRouter } from 'connected-react-router';\n\nexport const App: FC<{}> = () => (\n  <Provider store={store}>\n    <ConnectedRouter history={storeHistory}>\n      <div className='c-app'>\n        <Switch>\n          <Route path={LANDING_URL} component={IntroPage} exact />\n          <Route path={FOOD_TABLE_URL} component={FoodTablePage} />\n          <Route path={`${FOOD_DETAILS_URL}/:id`} component={FoodDetailsPage} />\n          <Route path={ALL_SEASONS_URL} component={AllSeasonsPage} />\n        </Switch>\n      </div>\n    </ConnectedRouter>\n  </Provider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport './index.scss';\nimport { App } from './components-app/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootElement = document.getElementById('root');\nif (rootElement && rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","export const DEFAULT_ANIMATION_TIME = 500;\n","import posed from 'react-pose';\n\nimport {\n  DEFAULT_ANIMATION_TIME\n} from './animations.const';\n\nexport const fadeInOutAnimation = ({\n  enterDelay = 0,\n  exitDelay = 0,\n  enterDuration = DEFAULT_ANIMATION_TIME,\n  exitDuration = DEFAULT_ANIMATION_TIME,\n  type = 'div'\n} = {}) => posed[type]({\n  enter: {\n    delay: enterDelay,\n    opacity: 1,\n    transition: {\n      duration: enterDuration\n    }\n  },\n  exit: {\n    delay: exitDelay,\n    opacity: 0,\n    transition: {\n      duration: exitDuration\n    }\n  }\n});\n","import { ICancelablePromise } from '../../interfaces';\n\nexport const makePromiseCancelable = <T>(\n  promise: Promise<T>\n): ICancelablePromise<T> => {\n  let hasCancelled = false;\n\n  const wrappedPromise = new Promise<T>((resolve, reject) => {\n      promise.then(\n          (val) => hasCancelled ? reject({isCanceled: true}) : resolve(val),\n          (error) => hasCancelled ? reject({isCanceled: true}) : reject(error)\n      );\n  });\n\n  return {\n      promise: wrappedPromise,\n      cancel() {\n          hasCancelled = true;\n      }\n  };\n};\n","export const setStoredData = <T>(key: string, data: T) => {\n  localStorage.setItem(key, JSON.stringify(data));\n};\n\nexport const getStoredData = <T>(key: string): T | null => {\n  const storedData = localStorage.getItem(key);\n  return storedData && JSON.parse(storedData);\n};\n","export * from './Animations';\n\nexport * from './functions';\n"],"sourceRoot":""}