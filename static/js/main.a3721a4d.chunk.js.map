{"version":3,"sources":["../../shared-frontend-redux/dist/selectors/ui.selectors.js","components-layout/SummaryColumn/index.ts","services/image-loader.service.ts","components-elements/BackgroundImageWithLoadingSpinner/BackgroundImageWithLoadingSpinner.tsx","components-layout/ImageGridItem/ImageGridItem.tsx","../../shared-frontend-redux/dist/selectors/current-food-details.selectors.js","../../shared-frontend-redux/dist/selectors/all-basic-season.selectors.js","../../shared-frontend-redux/dist/selectors/all-seasons-with-food.selectors.js","../../shared-frontend-redux/dist/selectors/country.selectors.js","../../shared-frontend-redux/dist/selectors/current-season.selectors.js","../../shared-frontend-redux/dist/selectors/settings.selectors.js","components-layout/ImageGrid/ImageGrid.tsx","components-layout/SummaryColumn/SummaryColumn.tsx","components-layout/SummaryColumnList/index.ts","components-layout/SummaryColumnList/SummaryColumnList.tsx","components-layout/SeasonNameView/SeasonNameView.tsx","../../shared-frontend-redux/dist/actions/index.js","../../shared-frontend-redux/dist/actions/all-basic-season.actions.js","../../shared-frontend-redux/dist/actions/all-season-with-food.actions.js","../../shared-frontend-redux/dist/actions/all-seasons-with-recipes.actions.js","../../shared-frontend-redux/dist/actions/country.actions.js","../../shared-frontend-redux/dist/actions/current-food-details.actions.js","../../shared-frontend-redux/dist/actions/current-season.actions.js","../../shared-frontend-redux/dist/actions/settings.actions.js","../../shared-frontend-redux/dist/actions/init.actions.js","../../shared-frontend-redux/dist/actions/season-name.actions.js","../../shared-frontend-redux/dist/actions/ui.actions.js","../../shared-frontend-redux/dist/selectors/combined-selectors/index.js","../../shared-frontend-redux/dist/selectors/combined-selectors/all-seasons-with-food-and-search.selectors.js","../../shared-frontend-utilities/dist/get-nearest-region-from-lat-lng.js","../../shared-frontend-utilities/dist/name-search.js","../../shared-frontend-utilities/dist/retrieve-backend-data.js","../../shared-models/dist/enums/index.js","../../shared-models/dist/enums/diet-type.enum.js","../../shared-models/dist/enums/user-roles.enum.js","../../shared-models/dist/config/index.js","../../shared-frontend-redux/dist/selectors/combined-selectors/current-country.selectors.js","../../shared-frontend-redux/dist/selectors/combined-selectors/current-food-data-and-basic-season.selectors.js","../../shared-frontend-redux/dist/selectors/combined-selectors/current-food-details-data-with-search.selectors.js","../../shared-frontend-redux/dist/selectors/combined-selectors/current-season-data-with-search.selectors.js","../../shared-frontend-redux/dist/epics/index.js","../../shared-frontend-redux/dist/epics/current-season-with-food.epics.js","../../shared-frontend-redux/dist/epics/current-season-with-recipes.epics.js","../../shared-frontend-redux/dist/epics/init.epics.js","../../shared-frontend-redux/dist/epics/all-basic-season.epics.js","../../shared-frontend-redux/dist/epics/all-seasons-with-food.epic.js","../../shared-frontend-redux/dist/epics/all-seasons-with-recipes.epic.js","../../shared-frontend-redux/dist/epics/current-food-details.epics.js","../../shared-frontend-redux/dist/epics/season-name.epics.js","../../shared-frontend-redux/dist/epics/country.epics.js","../../shared-frontend-redux/dist/reducers/index.js","../../shared-frontend-redux/dist/reducers/current-food-details.reducer.js","../../shared-frontend-redux/dist/reducers/current-season.reducer.js","../../shared-frontend-redux/dist/reducers/all-basic-seasons.reducer.js","../../shared-frontend-redux/dist/reducers/all-seasons.reducer.js","../../shared-frontend-redux/dist/reducers/settings.reducer.js","components-layout/index.ts","../../shared-frontend-redux/dist/reducers/ui.reducer.js","../../shared-frontend-redux/dist/reducers/country.reducer.js","../../shared-frontend-redux/dist/index.js","../../shared-frontend-utilities/dist/index.js","../../shared-models/dist/index.js","components-main/AboutEatSeasonal/AboutEatSeasonal.tsx","components-main/AndroidAppDownload/AndroidAppDownload.tsx","components-main/BottomTabs/BottomTabs.tsx","const/tabs.enum.ts","store/selectors/route.selectors.ts","const/urls.const.ts","store/selectors/web-ui.selectors.ts","store/epics/tracking.epics.ts","store/actions/web-ui.actions.ts","store/actions/route.actions.ts","store/epics/settings.epics.ts","store/epics/index.ts","store/epics/route.epics.ts","store/reducers/index.ts","store/reducers/web-ui.reducer.ts","components-main/BottomTabs/BottomTabs.connector.ts","components-main/CurrentSeasonName/CurrentSeasonName.tsx","components-main/CurrentSeasonName/CurrentSeasonName.connector.ts","components-main/DietaryFilters/DietaryFilters.tsx","components-main/DietaryFilters/DietaryFilters.connector.ts","components-main/FoodDetailsLoader/FoodDetailsLoader.tsx","components-main/FoodDetailsLoader/FoodDetailsLoader.connector.ts","components-main/FoodDetailsTopSection/FoodDetailsTopSection.tsx","components-main/FoodDetailsTopSection/FoodDetailsTopSection.connector.ts","components-main/FoodTable/FoodTable.tsx","components-main/FoodTable/FoodTable.connector.ts","components-main/Header/Header.tsx","components-main/Header/Header.connector.ts","components-main/IOSAppDownload/IOSAppDownload.tsx","components-layout/PageLayout/PageLayout.tsx","components-main/SeasonMenu/SeasonMenu.tsx","components-main/SeasonMenu/SeasonMenu.connector.ts","components-main/PageWithMenu/PageWithMenu.tsx","components-main/RecipesForFood/RecipesForFood.tsx","components-main/RecipesForFood/RecipesForFood.connector.ts","components-main/RecipeTable/RecipeTable.tsx","components-main/RecipeTable/RecipeTable.connector.ts","components-main/SearchBar/SearchBar.tsx","components-main/SearchBar/SearchBar.connector.ts","components-main/SeasonsForFood/SeasonsForFood.tsx","components-main/SeasonsForFood/SeasonsForFood.connector.ts","components-main/ViewWebAppVersion/ViewWebAppVersion.tsx","components-main/ViewWebAppVersion/ViewWebAppVersion.connector.ts","components-main/ViewAppLinks/ViewAppLinks.tsx","components-main/WhyEatSeasonal/WhyEatSeasonal.tsx","components-main/AllSeasons/AllSeasons.tsx","components-main/AllSeasons/AllSeasons.connector.ts","components-main/AllSeasonsGraph/AllSeasonsGraph.tsx","components-main/AllSeasonsGraph/AllSeasonsGraph.connector.ts","components-pages/FoodDetailsPage/FoodDetailsPage.tsx","components-pages/FoodTablePage/FoodTablePage.tsx","components-pages/IntroPage/IntroPage.tsx","components-pages/AllSeasonsPage/AllSeasonsPage.tsx","components-app/App.tsx","serviceWorker.js","index.tsx","../../shared-frontend-redux/dist/selectors/index.js","helpers/Animations/fade.animations.ts","helpers/Animations/animations.const.ts","helpers/functions/make-promise-cancelable.ts","helpers/functions/stored-data.ts","helpers/index.ts"],"names":["Object","defineProperty","exports","value","reselect_1","require","selectUiState","state","ui","selectIsMenuOpen","createSelector","uiState","isMenuOpen","selectCurrentSearchTerm","searchTerm","toLowerCase","selectIsSearchBarVisible","isSearchBarVisible","selectIsLocationSettingsPopupVisible","isLocationSettingsPopupVisible","selectIsCountryChangePromptVisible","isCountryChangePromptVisible","loadingImages","loadImage","imageSrc","Promise","resolve","image","document","createElement","src","push","addEventListener","createImageOnLoadPromise","FadeInOutAnimation","fadeInOutAnimation","BackgroundImageWithLoadingSpinner","Component","constructor","props","super","loadImagePromise","this","isVisible","componentDidMount","makePromiseCancelable","promise","then","setState","componentWillUnmount","cancel","getBackgroundImageStyle","backgroundImage","render","skipAnimation","className","style","key","children","ImageGridItem","id","imageUrlSmall","onClick","name","selectCurrentFoodDetailsState","currentFoodDetailsData","selectIsCurrentFoodDetailsLoading","currentFoodDetails","isLoading","selectCurrentFoodDetails","data","selectCurrentFoodDetailsId","selectCurrentFoodDetailsName","selectCurrentFoodDetailsImageUrl","selectCurrentFoodDetailsSeasons","seasons","selectCurrentFoodDetailsRecipes","primaryFoodInRecipe","secondaryFoodInRecipe","selectAllBasicSeasonDataState","allBasicSeasonData","selectIsBasicSeasonsLoading","selectAllBasicSeasons","selectAllSeasonsWithFoodState","allSeasonsWithFoodData","selectIsAllSeasonsFoodLoading","isFoodLoading","selectIsAllSeasonsRecipesLoading","isRecipesLoading","selectAllSeasons","selectNumberOfAllSeasonsInView","numberOfSeasonsInView","selectHasMoreSeasonsInAllSeasonsView","numberOfAllSeasons","allSeasons","length","selectCountryState","countryData","selectAreCountriesLoading","countryState","selectCountries","selectAllRegions","countries","reduce","allRegions","nextCountry","regions","selectCurrentSeasonWithFoodState","currentSeasonData","selectIsCurrentSeasonFoodLoading","selectIsCurrentSeasonRecipesLoading","selectCurrentSeason","selectCurrentSeasonFood","currentSeason","food","selectCurrentSeasonRecipes","recipes","selectCurrentSeasonRecipesById","recipeId","find","selectCurrentSeasonIndex","currentSeasonIndex","selectCurrentSeasonName","selectSettingsState","settings","selectSettingsDietType","dietType","selectSettingsRegionCode","selectedRegionCode","selectSettingsUserId","userId","selectSettingsTimesAppStarted","timesAppStarted","ImageGrid","map","item","SummaryColumn","imageUrl","text","title","alt","SummaryColumnList","columns","column","index","SeasonNameView","__export","m","p","hasOwnProperty","SET_ALL_BASIC_SEASONS_START","setAllSeasonsStart","type","SET_ALL_BASIC_SEASONS_SUCCESS","setAllBasicSeasonsSuccess","seasonData","SET_ALL_SEASONS_WITH_FOOD_START","setAllSeasonsWithFoodStart","SET_ALL_SEASONS_WITH_FOOD_SUCCESS","setAllSeasonsWithFoodSuccess","INCREASE_NUMBER_OF_ALL_FOOD_SEASONS_IN_VIEW","increaseNumberOfAllFoodSeasonsInView","SET_ALL_SEASONS_WITH_RECIPES_START","setAllSeasonsWithRecipesStart","SET_ALL_SEASONS_WITH_RECIPES_SUCCESS","setAllSeasonsWithRecipesSuccess","GET_COUNTRIES_START","getCountriesStart","GET_COUNTRIES_SUCCESS","getCountriesSuccess","SET_REGION","setRegion","regionCode","USER_REGION_DETECTED","userRegionDetected","error","SET_USER_REGION_DETECTED","setUserRegionDetected","SET_CURRENT_FOOD_DETAILS_START","setCurrentFoodDetailsStart","foodItemId","SET_CURRENT_FOOD_DETAILS_ON_DIET_CHANGE","setCurrentFoodDetailsOnDietChange","SET_CURRENT_FOOD_DETAILS_SUCCESS","setCurrentFoodDetailsSuccess","currentFoodData","SET_CURRENT_SEASON_WITH_FOOD_START","setCurrentSeasonWithFoodStart","SET_CURRENT_SEASON_WITH_FOOD_SUCCESS","setCurrentSeasonWithFoodSuccess","SET_CURRENT_SEASON_WITH_RECIPES_START","setCurrentSeasonWithRecipesStart","SET_CURRENT_SEASON_WITH_RECIPES_SUCCESS","setCurrentSeasonWithRecipesSuccess","INIT_SETTINGS","initSettings","SET_DIET_TYPE","setDietType","INIT_APP","initApp","SET_SELECTED_SEASON_NAME","setSelectedSeasonName","seasonName","OPEN_MENU","openMenu","CLOSE_MENU","closeMenu","SELECT_SEASON","selectSeason","seasonIndex","GO_TO_ALL_SEASONS_VIEW","goToAllSeasonsView","FOOD_DETAILS_SELECT_SEASON","foodDetailsSelectSeason","SEARCH_BAR_CHANGED","searchBarChanged","newSearchTerm","SHOW_SEARCH_BAR","showSearchBar","HIDE_SEARCH_BAR","hideSearchBar","FOOD_ITEM_CLICKED","foodItemClicked","RECIPE_ITEM_CLICKED","recipeItemClicked","recipeItemId","FOOD_DETAILS_SELECT_RECIPE","foodDetailsSelectRecipe","SHOW_LOCATION_SETTINGS_POPUP","showLocationPopup","CLOSE_LOCATION_SETTINGS_POPUP","closeLocationPopup","HIDE_REGION_CHANGE_PROMPT","hideRegionChangePrompt","all_seasons_with_food_selectors_1","seasonal_shared_frontend_utilities_1","ui_selectors_1","selectAllSeasonsWithFoodAndSearchAppliedData","season","assign","getDataThatContainsSearchTerm","selectAllSeasonsVisibleFoodData","seasonsWithSearchApplied","slice","filter","selectFoodInSeasonGraphData","allSeasonData","convertDegressToRadians","deg","Math","PI","distanceBetweenLatLngInKm","latLng1","latLng2","dLat","lat","dLng","lng","a","sin","cos","atan2","sqrt","getNearestRegionFromLatLng","latLng","prevRegion","nextRegion","includes","seasonal_shared_models_1","getQueryString","isVegetarian","isVegan","countryCode","query","Boolean","join","getCurrentSeasonIndex","Date","getUTCMonth","getAllSeasons","queryString","undefined","fetch","SEASON_URL","resp","json","getSeasonWithFood","SEASON_WITH_FOOD_URL","getAllSeasonsWithFood","getSeasonWithRecipes","SEASON_WITH_RECIPES_URL","getAllSeasonsWithRecipes","getFoodDetailsData","foodId","FOOD_DETAILS_URL","getCountries","COUNTRY_URL","DIET_TYPE","USER_ROLES","BACKEND_URL","process","country_selectors_1","settings_selectors_1","selectCurrentRegion","region","code","selectCountryAndRegionsSelectGroup","country","groupName","selectOptions","isSelected","current_food_details_selectors_1","all_basic_season_selectors_1","selectIsFoodDataOrBasicSeasonsLoading","isCurrentFoodDetailsLoading","isBasicSeasonDataLoading","selectSeasonsSelectedForFood","foodDetailsSeasons","basicSeasons","some","foodDetailSeason","selectVisibleRecipesForFoodDetailsData","current_season_selectors_1","selectVisibleFoodData","selectVisibleRecipeData","current_season_with_food_epics_1","current_season_with_recipes_epics_1","init_epics_1","all_basic_season_epics_1","all_seasons_with_food_epic_1","all_seasons_with_recipes_epic_1","current_food_details_epics_1","season_name_epics_1","country_epics_1","rootEpics","initAppEpic$","getCurrentSeasonWithFoodStartEpic$","getCurrentSeasonWithFoodEpic$","getCurrentSeasonWithRecipesStartEpic$","getCurrentSeasonWithRecipesEpic$","getAllBasicSeasonsStartEpic$","getAllBasicSeasonsEpic$","getAllSeasonsWithFood$","getAllSeasonsWithRecipes$","getCurrentFoodDetailsEpic$","updateFoodDetailsOnDietTypeChangeEpic$","setSeasonSelectedSeasonName$","getCountriesStart$","getCountries$","promptCountryChangeOnNewDetected$","hideRegionChangePrompt$","redux_observable_1","actions_1","operators_1","selectors_1","actions$","pipe","ofType","mapTo","state$","withLatestFrom","switchMap","foodData","VEGETARIAN","VEGAN","recipesData","rxjs_1","of","currentFoodDetailsId","action","selectedSeason","detectedRegion","settingsRegionCode","delay","current_food_details_reducer_1","current_season_reducer_1","all_basic_seasons_reducer_1","all_seasons_reducer_1","settings_reducer_1","ui_reducer_1","country_reducer_1","allReducers","allBasicSeasonReducer","allSeasonsReducer","countryReducer","currentFoodDetailsReducer","currentSeasonWithFoodReducer","settingsReducer","uiReducer","populateApiData","__importDefault","mod","__esModule","v4_1","ALL","initialSettings","default","AboutEatSeasonal","AndroidAppDownload","href","addTabClasses","TABS","selectCurrentFoodDetailsParams","createMatchSelector","routeParams","params","selectCurrentPath","getLocation","location","pathname","selectIsCurrentRouteAllSeasons","path","selectCurrentTab","webUi","webUiState","currentTab","selectIsCurrentTabFood","FOOD","selectIsCurrentTabRecipes","RECIPES","ACTIONS_TO_TRACK","rootEpic","combineEpics","ga","ignoreElements","recipe","window","open","linkUrl","goBack","foodDetailsId","debounceTime","isRouteAllSeasons","getStoredData","tap","settingsState","setStoredData","epicMiddleware","createEpicMiddleware","storeHistory","createHashHistory","store","createStore","combineReducers","router","connectRouter","compose","applyMiddleware","routerMiddleware","run","BottomTabsConnecter","connect","isCurrentTabFood","isCurrentTabRecipes","dispatch","goToFoodTab","goToRecipesTab","CurrentSeasonNameConnecter","currentSeasonName","radioButtons","label","DietaryFiltersConnector","update","selectedValue","onChange","newValue","FoodDetailsLoaderConnecter","FoodDetailsTopSectionConnecter","foodImageUrl","foodName","onGoBack","FoodTableConnecter","onFoodClick","HeaderConnecter","onMenuOpen","SearchBarConnecter","IOSAppDownload","PageLayout","OverlayFadeInOutAnimation","SeasonMenuConnecter","isCurrentRouteAllSeasons","onAllSeasonsSelected","onClose","onSeasonSelected","PageWithMenu","RecipesForFoodConnecter","currentFoodDetailsRecipes","onRecipeSelected","RecipeTableConnecter","onRecipeClick","getSearchBarClassName","onHideSearchBar","onSearchChanged","onShowSearchBar","ref","input","querySelector","focus","focusOnInputIfSearchVisible","placeholder","SeasonsForFoodConnecter","seasonsSelectedForFood","substring","ViewWebAppVersionConnector","onGoToWebVersion","ViewAppLinks","summaryColumns","WhyEatSeasonal","AllSeasonsConnector","hasMoreSeasonsInAllSeasonsView","pageStart","loadMore","hasMore","loader","AllSeasonsGraphConnector","foodInSeasonGraphData","width","height","dataKey","allowDecimals","fill","FoodDetailsPage","FoodTablePage","IntroPage","AllSeasonsPage","App","history","component","exact","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","rootElement","getElementById","hasChildNodes","hydrate","URL","origin","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","enterDelay","exitDelay","enterDuration","exitDuration","posed","enter","opacity","transition","duration","exit","hasCancelled","reject","val","isCanceled","localStorage","setItem","JSON","stringify","storedData","getItem","parse"],"mappings":"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","file":"static/js/main.a3721a4d.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reselect_1 = require(\"reselect\");\nconst selectUiState = (state) => state.ui;\nexports.selectIsMenuOpen = reselect_1.createSelector(selectUiState, (uiState) => uiState.isMenuOpen);\nexports.selectCurrentSearchTerm = reselect_1.createSelector(selectUiState, (uiState) => uiState.searchTerm &&\n    uiState.searchTerm.toLowerCase());\nexports.selectIsSearchBarVisible = reselect_1.createSelector(selectUiState, (uiState) => uiState.isSearchBarVisible);\nexports.selectIsLocationSettingsPopupVisible = reselect_1.createSelector(selectUiState, (uiState) => uiState.isLocationSettingsPopupVisible);\nexports.selectIsCountryChangePromptVisible = reselect_1.createSelector(selectUiState, (uiState) => uiState.isCountryChangePromptVisible);\n","export * from './SummaryColumn';\n\nexport * from './SummaryColumn.interface';\n","const loadingImages = [];\n\nconst createImageOnLoadPromise = (\n  imageSrc: string\n): Promise<HTMLImageElement> => {\n  return new Promise((resolve) => {\n    const image = document.createElement('img');\n    image.src = imageSrc;\n    loadingImages.push(image);\n    image.addEventListener('load', () => {\n      resolve(image);\n    });\n  });\n};\n\nexport const loadImage = (\n  imageSrc: string\n): Promise<HTMLImageElement> => {\n  const onLoadPromise = createImageOnLoadPromise(imageSrc);\n  return onLoadPromise;\n};\n","import React, { Component } from 'react';\n\nimport './BackgroundImageWithLoadingSpinner.scss';\n\nimport {\n  loadImage\n} from '../../services/image-loader.service';\n\nimport {\n  LoadingSpinner\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport {\n  fadeInOutAnimation, makePromiseCancelable\n} from '../../helpers';\n\nimport { PoseGroup } from 'react-pose';\nimport { ICancelablePromise } from '../../interfaces';\n\nconst FadeInOutAnimation = fadeInOutAnimation();\n\ninterface IBackgroundImageWithLoadingSpinnerPropsInterface {\n  src: string;\n  skipAnimation?: boolean;\n}\ninterface IBackgroundImageWithLoadingSpinnerStateInterface {\n  isVisible: boolean;\n}\n\nexport class BackgroundImageWithLoadingSpinner\nextends Component<\n  IBackgroundImageWithLoadingSpinnerPropsInterface,\n  IBackgroundImageWithLoadingSpinnerStateInterface\n> {\n  public loadImagePromise: ICancelablePromise<HTMLImageElement> | null = null;\n\n  constructor(props: IBackgroundImageWithLoadingSpinnerPropsInterface) {\n    super(props);\n    this.state = {\n      isVisible: false\n    };\n  }\n\n  public componentDidMount() {\n    this.loadImagePromise = makePromiseCancelable(loadImage(this.props.src));\n    this.loadImagePromise.promise.then(() => {\n      this.setState({\n        isVisible: true\n      });\n    }, () => undefined);\n  }\n\n  public componentWillUnmount() {\n    if (this.loadImagePromise) {\n      this.loadImagePromise.cancel();\n    }\n  }\n\n  public getBackgroundImageStyle() {\n    return { backgroundImage: `url(${this.props.src})` };\n  }\n\n  public render() {\n    return !this.props.skipAnimation\n      ? (\n        <PoseGroup>\n          {\n            this.state.isVisible\n              ? <FadeInOutAnimation key='background-image-fade-in-out'\n                className='c-background-image-with-loading-spinner'\n                style={this.getBackgroundImageStyle()}>\n                { this.props.children }\n              </FadeInOutAnimation>\n              : <FadeInOutAnimation key='loading-spinner-fade-in-out'\n                className='c-background-image-with-loading-spinner'>\n                <LoadingSpinner />\n              </FadeInOutAnimation>\n          }\n        </PoseGroup>\n      )\n      : <div className='c-background-image-with-loading-spinner'\n          style={this.getBackgroundImageStyle()} />;\n  }\n}\n","import React, { FC } from 'react';\n\nimport './ImageGridItem.scss';\n\nimport {\n  TextMedium\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport {\n  BackgroundImageWithLoadingSpinner\n} from '../../components-elements';\nimport { IImageGridItem } from './ImageGridItem.interface';\n\nexport const ImageGridItem: FC<IImageGridItem> = ({\n  id,\n  imageUrlSmall,\n  onClick,\n  name,\n  skipAnimation\n}) => (\n  <div onClick={() => onClick && onClick(id)}\n    className='c-image-grid-item'>\n    <div className='c-image-grid-item__inner'>\n      <div className='c-image-grid-item__image'>\n        <BackgroundImageWithLoadingSpinner\n          src={imageUrlSmall} skipAnimation={skipAnimation}/>\n      </div>\n      <TextMedium className='c-image-grid-item__text'>\n        {name}\n      </TextMedium>\n    </div>\n  </div>\n);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reselect_1 = require(\"reselect\");\nconst selectCurrentFoodDetailsState = (state) => state.currentFoodDetailsData;\nexports.selectIsCurrentFoodDetailsLoading = reselect_1.createSelector(selectCurrentFoodDetailsState, (currentFoodDetails) => currentFoodDetails.isLoading);\nexports.selectCurrentFoodDetails = reselect_1.createSelector(selectCurrentFoodDetailsState, (currentFoodDetails) => currentFoodDetails.data);\nexports.selectCurrentFoodDetailsId = reselect_1.createSelector(exports.selectCurrentFoodDetails, (currentFoodDetails) => currentFoodDetails &&\n    currentFoodDetails.id);\nexports.selectCurrentFoodDetailsName = reselect_1.createSelector(exports.selectCurrentFoodDetails, (currentFoodDetails) => currentFoodDetails &&\n    currentFoodDetails.name);\nexports.selectCurrentFoodDetailsImageUrl = reselect_1.createSelector(exports.selectCurrentFoodDetails, (currentFoodDetails) => currentFoodDetails &&\n    currentFoodDetails.imageUrlSmall);\nexports.selectCurrentFoodDetailsSeasons = reselect_1.createSelector(exports.selectCurrentFoodDetails, (currentFoodDetails) => currentFoodDetails &&\n    currentFoodDetails.seasons);\nexports.selectCurrentFoodDetailsRecipes = reselect_1.createSelector(exports.selectCurrentFoodDetails, (currentFoodDetails) => currentFoodDetails &&\n    [\n        ...(currentFoodDetails.primaryFoodInRecipe || []),\n        ...(currentFoodDetails.secondaryFoodInRecipe || [])\n    ]);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reselect_1 = require(\"reselect\");\nconst selectAllBasicSeasonDataState = (state) => state.allBasicSeasonData;\nexports.selectIsBasicSeasonsLoading = reselect_1.createSelector(selectAllBasicSeasonDataState, (allBasicSeasonData) => allBasicSeasonData.isLoading);\nexports.selectAllBasicSeasons = reselect_1.createSelector(selectAllBasicSeasonDataState, (allBasicSeasonData) => allBasicSeasonData.data);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reselect_1 = require(\"reselect\");\nconst selectAllSeasonsWithFoodState = (state) => state.allSeasonsWithFoodData;\nexports.selectIsAllSeasonsFoodLoading = reselect_1.createSelector(selectAllSeasonsWithFoodState, (allSeasonsWithFoodData) => allSeasonsWithFoodData.isFoodLoading);\nexports.selectIsAllSeasonsRecipesLoading = reselect_1.createSelector(selectAllSeasonsWithFoodState, (allSeasonsWithFoodData) => allSeasonsWithFoodData.isRecipesLoading);\nexports.selectAllSeasons = reselect_1.createSelector(selectAllSeasonsWithFoodState, (allSeasonsWithFoodData) => (allSeasonsWithFoodData.data));\nexports.selectNumberOfAllSeasonsInView = reselect_1.createSelector(selectAllSeasonsWithFoodState, (allSeasonsWithFoodData) => (allSeasonsWithFoodData.numberOfSeasonsInView));\nexports.selectHasMoreSeasonsInAllSeasonsView = reselect_1.createSelector(exports.selectNumberOfAllSeasonsInView, exports.selectAllSeasons, (numberOfAllSeasons, allSeasons) => (allSeasons\n    ? numberOfAllSeasons < allSeasons.length\n    : false));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reselect_1 = require(\"reselect\");\nconst selectCountryState = (state) => state.countryData;\nexports.selectAreCountriesLoading = reselect_1.createSelector(selectCountryState, (countryState) => countryState.isLoading);\nexports.selectCountries = reselect_1.createSelector(selectCountryState, (countryState) => countryState.data);\nexports.selectAllRegions = reselect_1.createSelector(exports.selectCountries, (countries) => countries &&\n    countries.reduce((allRegions, nextCountry) => [\n        ...allRegions,\n        ...nextCountry.regions\n    ], []));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reselect_1 = require(\"reselect\");\nconst selectCurrentSeasonWithFoodState = (state) => state.currentSeasonData;\nexports.selectIsCurrentSeasonFoodLoading = reselect_1.createSelector(selectCurrentSeasonWithFoodState, (currentSeasonData) => currentSeasonData.isFoodLoading);\nexports.selectIsCurrentSeasonRecipesLoading = reselect_1.createSelector(selectCurrentSeasonWithFoodState, (currentSeasonData) => currentSeasonData.isRecipesLoading);\nexports.selectCurrentSeason = reselect_1.createSelector(selectCurrentSeasonWithFoodState, (currentSeasonData) => currentSeasonData.data);\nexports.selectCurrentSeasonFood = reselect_1.createSelector(exports.selectCurrentSeason, (currentSeason) => currentSeason && currentSeason.food);\nexports.selectCurrentSeasonRecipes = reselect_1.createSelector(exports.selectCurrentSeason, (currentSeason) => currentSeason &&\n    currentSeason.recipes);\nexports.selectCurrentSeasonRecipesById = (recipeId) => (reselect_1.createSelector(exports.selectCurrentSeasonRecipes, (recipes) => recipes && recipes.find(({ id }) => (id === recipeId))));\nexports.selectCurrentSeasonIndex = reselect_1.createSelector(selectCurrentSeasonWithFoodState, (currentSeasonData) => currentSeasonData.currentSeasonIndex);\nexports.selectCurrentSeasonName = reselect_1.createSelector(exports.selectCurrentSeason, (currentSeason) => currentSeason && currentSeason.name);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reselect_1 = require(\"reselect\");\nexports.selectSettingsState = (state) => state.settings;\nexports.selectSettingsDietType = reselect_1.createSelector(exports.selectSettingsState, (settings) => settings.dietType);\nexports.selectSettingsRegionCode = reselect_1.createSelector(exports.selectSettingsState, (settings) => settings.selectedRegionCode);\nexports.selectSettingsUserId = reselect_1.createSelector(exports.selectSettingsState, (settings) => settings.userId);\nexports.selectSettingsTimesAppStarted = reselect_1.createSelector(exports.selectSettingsState, (settings) => settings.timesAppStarted);\n","import React, { FC } from 'react';\n\nimport './ImageGrid.scss';\n\nimport {\n  ImageGridItem\n} from '../ImageGridItem/ImageGridItem';\nimport { IImageGrid } from './ImageGrid.interface';\nimport { TextMedium } from '@chrisb-dev/seasonal-shared-frontend-components';\n\nexport const ImageGrid: FC<IImageGrid> = ({\n  data,\n  onClick,\n  skipAnimation\n}) => (\n  <div className='c-image-grid'>\n    {\n      data && data.length\n        ? data.map((item) => (\n          <ImageGridItem\n            key={item.name}\n            {...item}\n            onClick={onClick}\n            skipAnimation={skipAnimation}/>\n        ))\n        : <TextMedium className='c-image-grid__no-results'>\n            No results found\n          </TextMedium>\n    }\n  </div>\n);\n","import React, { FC } from 'react';\n\nimport './SummaryColumn.scss';\n\nimport {\n  TextMedium,\n  TextHeadingSmall\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport {\n  ISummaryColumn\n} from './SummaryColumn.interface';\n\nexport const SummaryColumn: FC<ISummaryColumn> = ({\n  imageUrl,\n  text,\n  title\n}) => (\n  <div className='c-summary-column'>\n    {\n      imageUrl && <img\n        alt='Column item'\n        src={imageUrl} className='c-summary-column__image' />\n    }\n    <h3 className='c-summary-column__heading'>\n      <TextHeadingSmall>\n        { title }\n      </TextHeadingSmall>\n    </h3>\n    <TextMedium>\n      { text }\n    </TextMedium>\n  </div>\n);\n","export * from './SummaryColumnList.interface';\n\nexport * from './SummaryColumnList';\n","import React, { FC } from 'react';\n\nimport './SummaryColumnList.scss';\n\nimport {\n  SummaryColumn\n} from './../SummaryColumn';\n\nimport {\n  ISummaryColumnList\n} from './SummaryColumnList.interface';\n\nexport const SummaryColumnList: FC<ISummaryColumnList> = ({\n  columns\n}) => (\n  <ul className='c-summary-column-list'>\n    {\n      columns.map((column, index) => (\n        <SummaryColumn {...column} key={index} />\n      ))\n    }\n  </ul>\n);\n","import React, { FC } from 'react';\nimport './SeasonNameView.scss';\nimport {\n  ISeasonNameViewProps\n} from './SeasonNameView.interface';\nimport { TextHeadingSmall } from '@chrisb-dev/seasonal-shared-frontend-components';\n\nexport const SeasonNameView: FC<ISeasonNameViewProps> = ({\n  name\n}) => (\n  <TextHeadingSmall className='c-season-name-view'>\n    {name}\n  </TextHeadingSmall>\n);\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./all-basic-season.actions\"));\n__export(require(\"./all-season-with-food.actions\"));\n__export(require(\"./all-seasons-with-recipes.actions\"));\n__export(require(\"./country.actions\"));\n__export(require(\"./current-food-details.actions\"));\n__export(require(\"./current-season.actions\"));\n__export(require(\"./settings.actions\"));\n__export(require(\"./init.actions\"));\n__export(require(\"./season-name.actions\"));\n__export(require(\"./ui.actions\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SET_ALL_BASIC_SEASONS_START = 'SET_ALL_BASIC_SEASON_START';\nfunction setAllSeasonsStart() {\n    return {\n        type: exports.SET_ALL_BASIC_SEASONS_START\n    };\n}\nexports.setAllSeasonsStart = setAllSeasonsStart;\nexports.SET_ALL_BASIC_SEASONS_SUCCESS = 'SET_ALL_BASIC_SEASONS_SUCCESS';\nfunction setAllBasicSeasonsSuccess(seasonData) {\n    return {\n        seasonData,\n        type: exports.SET_ALL_BASIC_SEASONS_SUCCESS\n    };\n}\nexports.setAllBasicSeasonsSuccess = setAllBasicSeasonsSuccess;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SET_ALL_SEASONS_WITH_FOOD_START = 'SET_ALL_SEASONS_WITH_FOOD_START';\nfunction setAllSeasonsWithFoodStart() {\n    return {\n        type: exports.SET_ALL_SEASONS_WITH_FOOD_START\n    };\n}\nexports.setAllSeasonsWithFoodStart = setAllSeasonsWithFoodStart;\nexports.SET_ALL_SEASONS_WITH_FOOD_SUCCESS = 'SET_ALL_SEASONS_WITH_FOOD_SUCCESS';\nfunction setAllSeasonsWithFoodSuccess(seasonData) {\n    return {\n        seasonData,\n        type: exports.SET_ALL_SEASONS_WITH_FOOD_SUCCESS\n    };\n}\nexports.setAllSeasonsWithFoodSuccess = setAllSeasonsWithFoodSuccess;\nexports.INCREASE_NUMBER_OF_ALL_FOOD_SEASONS_IN_VIEW = 'INCREASE_NUMBER_OF_ALL_FOOD_SEASONS_IN_VIEW';\nfunction increaseNumberOfAllFoodSeasonsInView() {\n    return {\n        type: exports.INCREASE_NUMBER_OF_ALL_FOOD_SEASONS_IN_VIEW\n    };\n}\nexports.increaseNumberOfAllFoodSeasonsInView = increaseNumberOfAllFoodSeasonsInView;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SET_ALL_SEASONS_WITH_RECIPES_START = 'SET_ALL_SEASONS_WITH_RECIPES_START';\nfunction setAllSeasonsWithRecipesStart() {\n    return {\n        type: exports.SET_ALL_SEASONS_WITH_RECIPES_START\n    };\n}\nexports.setAllSeasonsWithRecipesStart = setAllSeasonsWithRecipesStart;\nexports.SET_ALL_SEASONS_WITH_RECIPES_SUCCESS = 'SET_ALL_SEASONS_WITH_RECIPES_SUCCESS';\nfunction setAllSeasonsWithRecipesSuccess(seasonData) {\n    return {\n        seasonData,\n        type: exports.SET_ALL_SEASONS_WITH_RECIPES_SUCCESS\n    };\n}\nexports.setAllSeasonsWithRecipesSuccess = setAllSeasonsWithRecipesSuccess;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GET_COUNTRIES_START = 'GET_COUNTRIES_START';\nfunction getCountriesStart() {\n    return {\n        type: exports.GET_COUNTRIES_START\n    };\n}\nexports.getCountriesStart = getCountriesStart;\nexports.GET_COUNTRIES_SUCCESS = 'GET_COUNTRIES_SUCCESS';\nfunction getCountriesSuccess(countries) {\n    return {\n        countries,\n        type: exports.GET_COUNTRIES_SUCCESS\n    };\n}\nexports.getCountriesSuccess = getCountriesSuccess;\nexports.SET_REGION = 'SET_REGION';\nfunction setRegion(regionCode) {\n    return {\n        regionCode,\n        type: exports.SET_REGION\n    };\n}\nexports.setRegion = setRegion;\nexports.USER_REGION_DETECTED = 'USER_REGION_DETECTED';\nfunction userRegionDetected(regionCode, error) {\n    return {\n        error,\n        regionCode,\n        type: exports.USER_REGION_DETECTED\n    };\n}\nexports.userRegionDetected = userRegionDetected;\nexports.SET_USER_REGION_DETECTED = 'SET_USER_REGION_DETECTED';\nfunction setUserRegionDetected(regionCode) {\n    return {\n        regionCode,\n        type: exports.SET_USER_REGION_DETECTED\n    };\n}\nexports.setUserRegionDetected = setUserRegionDetected;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SET_CURRENT_FOOD_DETAILS_START = 'SET_CURRENT_FOOD_DETAILS_START';\nfunction setCurrentFoodDetailsStart(foodItemId) {\n    return {\n        foodItemId,\n        type: exports.SET_CURRENT_FOOD_DETAILS_START\n    };\n}\nexports.setCurrentFoodDetailsStart = setCurrentFoodDetailsStart;\nexports.SET_CURRENT_FOOD_DETAILS_ON_DIET_CHANGE = 'SET_CURRENT_FOOD_DETAILS_ON_DIET_CHANGE';\nfunction setCurrentFoodDetailsOnDietChange(foodItemId) {\n    return {\n        foodItemId,\n        type: exports.SET_CURRENT_FOOD_DETAILS_ON_DIET_CHANGE\n    };\n}\nexports.setCurrentFoodDetailsOnDietChange = setCurrentFoodDetailsOnDietChange;\nexports.SET_CURRENT_FOOD_DETAILS_SUCCESS = 'SET_CURRENT_FOOD_DETAILS_SUCCESS';\nfunction setCurrentFoodDetailsSuccess(currentFoodData) {\n    return {\n        currentFoodDetailsData: currentFoodData,\n        type: exports.SET_CURRENT_FOOD_DETAILS_SUCCESS\n    };\n}\nexports.setCurrentFoodDetailsSuccess = setCurrentFoodDetailsSuccess;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SET_CURRENT_SEASON_WITH_FOOD_START = 'SET_CURRENT_SEASON_WITH_FOOD_START';\nfunction setCurrentSeasonWithFoodStart() {\n    return {\n        type: exports.SET_CURRENT_SEASON_WITH_FOOD_START\n    };\n}\nexports.setCurrentSeasonWithFoodStart = setCurrentSeasonWithFoodStart;\nexports.SET_CURRENT_SEASON_WITH_FOOD_SUCCESS = 'SET_CURRENT_SEASON_WITH_FOOD_SUCCESS';\nfunction setCurrentSeasonWithFoodSuccess(currentSeasonData) {\n    return {\n        currentSeasonData,\n        type: exports.SET_CURRENT_SEASON_WITH_FOOD_SUCCESS\n    };\n}\nexports.setCurrentSeasonWithFoodSuccess = setCurrentSeasonWithFoodSuccess;\nexports.SET_CURRENT_SEASON_WITH_RECIPES_START = 'SET_CURRENT_SEASON_WITH_RECIPES_START';\nfunction setCurrentSeasonWithRecipesStart() {\n    return {\n        type: exports.SET_CURRENT_SEASON_WITH_RECIPES_START\n    };\n}\nexports.setCurrentSeasonWithRecipesStart = setCurrentSeasonWithRecipesStart;\nexports.SET_CURRENT_SEASON_WITH_RECIPES_SUCCESS = 'SET_CURRENT_SEASON_WITH_RECIPES_SUCCESS';\nfunction setCurrentSeasonWithRecipesSuccess(currentSeasonData) {\n    return {\n        currentSeasonData,\n        type: exports.SET_CURRENT_SEASON_WITH_RECIPES_SUCCESS\n    };\n}\nexports.setCurrentSeasonWithRecipesSuccess = setCurrentSeasonWithRecipesSuccess;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.INIT_SETTINGS = 'INIT_SETTINGS';\nfunction initSettings(settings) {\n    return {\n        settings,\n        type: exports.INIT_SETTINGS\n    };\n}\nexports.initSettings = initSettings;\nexports.SET_DIET_TYPE = 'SET_DIET_TYPE';\nfunction setDietType(dietType) {\n    return {\n        dietType,\n        type: exports.SET_DIET_TYPE\n    };\n}\nexports.setDietType = setDietType;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.INIT_APP = 'INIT_APP';\nfunction initApp() {\n    return {\n        type: exports.INIT_APP\n    };\n}\nexports.initApp = initApp;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SET_SELECTED_SEASON_NAME = 'SET_SELECTED_SEASON_NAME';\nfunction setSelectedSeasonName(seasonName) {\n    return {\n        seasonName,\n        type: exports.SET_SELECTED_SEASON_NAME\n    };\n}\nexports.setSelectedSeasonName = setSelectedSeasonName;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OPEN_MENU = 'OPEN_MENU';\nfunction openMenu() {\n    return {\n        type: exports.OPEN_MENU\n    };\n}\nexports.openMenu = openMenu;\nexports.CLOSE_MENU = 'CLOSE_MENU';\nfunction closeMenu() {\n    return {\n        type: exports.CLOSE_MENU\n    };\n}\nexports.closeMenu = closeMenu;\nexports.SELECT_SEASON = 'SELECT_SEASON';\nfunction selectSeason(seasonIndex) {\n    return {\n        seasonIndex,\n        type: exports.SELECT_SEASON\n    };\n}\nexports.selectSeason = selectSeason;\nexports.GO_TO_ALL_SEASONS_VIEW = 'GO_TO_ALL_SEASONS_VIEW';\nfunction goToAllSeasonsView() {\n    return {\n        type: exports.GO_TO_ALL_SEASONS_VIEW\n    };\n}\nexports.goToAllSeasonsView = goToAllSeasonsView;\nexports.FOOD_DETAILS_SELECT_SEASON = 'FOOD_DETAILS_SELECT_SEASON';\nfunction foodDetailsSelectSeason(seasonIndex) {\n    return {\n        seasonIndex,\n        type: exports.FOOD_DETAILS_SELECT_SEASON\n    };\n}\nexports.foodDetailsSelectSeason = foodDetailsSelectSeason;\nexports.SEARCH_BAR_CHANGED = 'SEARCH_BAR_CHANGED';\nfunction searchBarChanged(newSearchTerm) {\n    return {\n        newSearchTerm,\n        type: exports.SEARCH_BAR_CHANGED\n    };\n}\nexports.searchBarChanged = searchBarChanged;\nexports.SHOW_SEARCH_BAR = 'SHOW_SEARCH_BAR';\nfunction showSearchBar() {\n    return {\n        type: exports.SHOW_SEARCH_BAR\n    };\n}\nexports.showSearchBar = showSearchBar;\nexports.HIDE_SEARCH_BAR = 'HIDE_SEARCH_BAR';\nfunction hideSearchBar() {\n    return {\n        type: exports.HIDE_SEARCH_BAR\n    };\n}\nexports.hideSearchBar = hideSearchBar;\nexports.FOOD_ITEM_CLICKED = 'FOOD_ITEM_CLICKED';\nfunction foodItemClicked(foodItemId) {\n    return {\n        foodItemId,\n        type: exports.FOOD_ITEM_CLICKED\n    };\n}\nexports.foodItemClicked = foodItemClicked;\nexports.RECIPE_ITEM_CLICKED = 'RECIPE_ITEM_CLICKED';\nfunction recipeItemClicked(recipeItemId) {\n    return {\n        recipeItemId,\n        type: exports.RECIPE_ITEM_CLICKED\n    };\n}\nexports.recipeItemClicked = recipeItemClicked;\nexports.FOOD_DETAILS_SELECT_RECIPE = 'FOOD_DETAILS_SELECT_RECIPE';\nfunction foodDetailsSelectRecipe(recipeItemId) {\n    return {\n        recipeItemId,\n        type: exports.FOOD_DETAILS_SELECT_RECIPE\n    };\n}\nexports.foodDetailsSelectRecipe = foodDetailsSelectRecipe;\nexports.SHOW_LOCATION_SETTINGS_POPUP = 'SHOW_LOCATION_SETTINGS_POPUP';\nfunction showLocationPopup() {\n    return {\n        type: exports.SHOW_LOCATION_SETTINGS_POPUP\n    };\n}\nexports.showLocationPopup = showLocationPopup;\nexports.CLOSE_LOCATION_SETTINGS_POPUP = 'CLOSE_LOCATION_SETTINGS_POPUP';\nfunction closeLocationPopup() {\n    return {\n        type: exports.CLOSE_LOCATION_SETTINGS_POPUP\n    };\n}\nexports.closeLocationPopup = closeLocationPopup;\nexports.HIDE_REGION_CHANGE_PROMPT = 'HIDE_REGION_CHANGE_PROMPT';\nfunction hideRegionChangePrompt() {\n    return {\n        type: exports.HIDE_REGION_CHANGE_PROMPT\n    };\n}\nexports.hideRegionChangePrompt = hideRegionChangePrompt;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./all-seasons-with-food-and-search.selectors\"));\n__export(require(\"./current-country.selectors\"));\n__export(require(\"./current-food-data-and-basic-season.selectors\"));\n__export(require(\"./current-food-details-data-with-search.selectors\"));\n__export(require(\"./current-season-data-with-search.selectors\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reselect_1 = require(\"reselect\");\nconst all_seasons_with_food_selectors_1 = require(\"../all-seasons-with-food.selectors\");\nconst seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\nconst ui_selectors_1 = require(\"../ui.selectors\");\nexports.selectAllSeasonsWithFoodAndSearchAppliedData = reselect_1.createSelector(all_seasons_with_food_selectors_1.selectAllSeasons, ui_selectors_1.selectCurrentSearchTerm, (seasons, searchTerm) => (seasons && seasons.map((season) => (Object.assign(Object.assign({}, season), { food: seasonal_shared_frontend_utilities_1.getDataThatContainsSearchTerm(searchTerm, season.food) })))));\nexports.selectAllSeasonsVisibleFoodData = reselect_1.createSelector(exports.selectAllSeasonsWithFoodAndSearchAppliedData, ui_selectors_1.selectCurrentSearchTerm, all_seasons_with_food_selectors_1.selectNumberOfAllSeasonsInView, (seasonsWithSearchApplied, searchTerm, numberOfSeasonsInView) => (seasonsWithSearchApplied &&\n    (searchTerm\n        ? seasonsWithSearchApplied\n        : seasonsWithSearchApplied.slice(0, numberOfSeasonsInView)).filter(({ food }) => food && food.length > 0)));\nexports.selectFoodInSeasonGraphData = reselect_1.createSelector(exports.selectAllSeasonsWithFoodAndSearchAppliedData, (allSeasonData) => (allSeasonData && allSeasonData.map(({ name, food }) => ({\n    'Number of food items in season': food\n        ? food.length\n        : 0,\n    'name': name\n}))));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst convertDegressToRadians = (deg) => deg * (Math.PI / 180);\nconst distanceBetweenLatLngInKm = (latLng1, latLng2) => {\n    const dLat = convertDegressToRadians(latLng2.lat - latLng1.lat);\n    const dLng = convertDegressToRadians(latLng2.lng - latLng1.lng);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2)\n        + Math.cos(convertDegressToRadians(latLng1.lat))\n            * Math.cos(convertDegressToRadians(latLng2.lat))\n            * Math.sin(dLng / 2)\n            * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const radiusOfEarthInKm = 6371;\n    return radiusOfEarthInKm * c;\n};\nexports.getNearestRegionFromLatLng = (regions, latLng) => regions && regions.reduce((prevRegion, nextRegion) => (distanceBetweenLatLngInKm(latLng, prevRegion.latLng)\n    < distanceBetweenLatLngInKm(latLng, nextRegion.latLng)\n    ? prevRegion\n    : nextRegion));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDataThatContainsSearchTerm = (searchTerm, data) => data && data.filter(({ name }) => (!searchTerm || name.toLowerCase().includes(searchTerm)));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst seasonal_shared_models_1 = require(\"@chrisb-dev/seasonal-shared-models\");\nconst getQueryString = (isVegetarian, isVegan, countryCode) => {\n    const query = [\n        isVegetarian && 'is-vegetarian=true',\n        isVegan && 'is-vegan=true',\n        countryCode && `country-code=${countryCode}`\n    ].filter(Boolean).join('&');\n    const queryString = query && `?${query}`;\n    return queryString;\n};\nexports.getCurrentSeasonIndex = () => new Date().getUTCMonth();\nexports.getAllSeasons = (countryCode) => {\n    const queryString = getQueryString(undefined, undefined, countryCode);\n    return fetch(`${seasonal_shared_models_1.SEASON_URL}${queryString}`).then((resp) => resp.json());\n};\nexports.getSeasonWithFood = (seasonIndex, countryCode) => {\n    const queryString = getQueryString(undefined, undefined, countryCode);\n    return fetch(`${seasonal_shared_models_1.SEASON_WITH_FOOD_URL}/${seasonIndex}${queryString}`).then((resp) => resp.json());\n};\nexports.getAllSeasonsWithFood = (countryCode) => {\n    const queryString = getQueryString(undefined, undefined, countryCode);\n    return fetch(`${seasonal_shared_models_1.SEASON_WITH_FOOD_URL}${queryString}`)\n        .then((resp) => resp.json());\n};\nexports.getSeasonWithRecipes = (seasonIndex, isVegetarian, isVegan, countryCode) => {\n    const queryString = getQueryString(isVegetarian, isVegan, countryCode);\n    return fetch(`${seasonal_shared_models_1.SEASON_WITH_RECIPES_URL}/${seasonIndex}${queryString}`).then((resp) => resp.json());\n};\nexports.getAllSeasonsWithRecipes = (countryCode) => {\n    const queryString = getQueryString(undefined, undefined, countryCode);\n    return fetch(`${seasonal_shared_models_1.SEASON_WITH_RECIPES_URL}${queryString}`)\n        .then((resp) => resp.json());\n};\nexports.getFoodDetailsData = (foodId, isVegetarian, isVegan, countryCode) => {\n    const queryString = getQueryString(isVegetarian, isVegan, countryCode);\n    return fetch(`${seasonal_shared_models_1.FOOD_DETAILS_URL}/${foodId}${queryString}`)\n        .then((resp) => resp.json());\n};\nexports.getCountries = () => (fetch(seasonal_shared_models_1.COUNTRY_URL).then((resp) => resp.json()));\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./diet-type.enum\"));\n__export(require(\"./user-roles.enum\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DIET_TYPE;\n(function (DIET_TYPE) {\n    DIET_TYPE[\"VEGETARIAN\"] = \"VEGETARIAN\";\n    DIET_TYPE[\"VEGAN\"] = \"VEGAN\";\n    DIET_TYPE[\"ALL\"] = \"ALL\";\n})(DIET_TYPE = exports.DIET_TYPE || (exports.DIET_TYPE = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar USER_ROLES;\n(function (USER_ROLES) {\n    USER_ROLES[\"ADMIN\"] = \"admin\";\n    USER_ROLES[\"EDITOR\"] = \"editor\";\n})(USER_ROLES = exports.USER_ROLES || (exports.USER_ROLES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BACKEND_URL = process.env.BACKEND_URL\n    || 'https://6usraevcmc.execute-api.eu-west-2.amazonaws.com/prod/v2';\nexports.SEASON_URL = process.env.SEASON_URL || `${BACKEND_URL}/season`;\nexports.FOOD_DETAILS_URL = process.env.FOOD_DETAILS_URL || `${BACKEND_URL}/food`;\nexports.SEASON_WITH_FOOD_URL = process.env.SEASON_WITH_FOOD_URL || `${BACKEND_URL}/season-with-food`;\nexports.SEASON_WITH_RECIPES_URL = process.env.SEASON_WITH_RECIPES_URL || `${BACKEND_URL}/season-with-recipes`;\nexports.COUNTRY_URL = process.env.COUNTRY_URL || `${BACKEND_URL}/country`;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reselect_1 = require(\"reselect\");\nconst country_selectors_1 = require(\"../country.selectors\");\nconst settings_selectors_1 = require(\"../settings.selectors\");\nexports.selectCurrentRegion = reselect_1.createSelector(country_selectors_1.selectAllRegions, settings_selectors_1.selectSettingsRegionCode, (allRegions, regionCode) => (allRegions &&\n    allRegions.find((region) => region.code === regionCode)));\nexports.selectCountryAndRegionsSelectGroup = reselect_1.createSelector(country_selectors_1.selectCountries, settings_selectors_1.selectSettingsRegionCode, (countries, regionCode) => (countries && countries.map((country) => ({\n    groupName: country.name,\n    selectOptions: country.regions.map((region) => ({\n        isSelected: region.code === regionCode,\n        name: region.name,\n        value: region.code\n    }))\n}))));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reselect_1 = require(\"reselect\");\nconst current_food_details_selectors_1 = require(\"../current-food-details.selectors\");\nconst all_basic_season_selectors_1 = require(\"../all-basic-season.selectors\");\nexports.selectIsFoodDataOrBasicSeasonsLoading = reselect_1.createSelector(current_food_details_selectors_1.selectIsCurrentFoodDetailsLoading, all_basic_season_selectors_1.selectIsBasicSeasonsLoading, (isCurrentFoodDetailsLoading, isBasicSeasonDataLoading) => (isCurrentFoodDetailsLoading || isBasicSeasonDataLoading));\nexports.selectSeasonsSelectedForFood = reselect_1.createSelector(current_food_details_selectors_1.selectCurrentFoodDetailsSeasons, all_basic_season_selectors_1.selectAllBasicSeasons, (foodDetailsSeasons, basicSeasons) => (foodDetailsSeasons && basicSeasons &&\n    basicSeasons.map(({ id, name }) => ({\n        isSelected: foodDetailsSeasons\n            .some((foodDetailSeason) => foodDetailSeason.id === id),\n        name\n    }))));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reselect_1 = require(\"reselect\");\nconst ui_selectors_1 = require(\"../ui.selectors\");\nconst seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\nconst current_food_details_selectors_1 = require(\"../current-food-details.selectors\");\nexports.selectVisibleRecipesForFoodDetailsData = reselect_1.createSelector(ui_selectors_1.selectCurrentSearchTerm, current_food_details_selectors_1.selectCurrentFoodDetailsRecipes, (searchTerm, recipes) => seasonal_shared_frontend_utilities_1.getDataThatContainsSearchTerm(searchTerm, recipes));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reselect_1 = require(\"reselect\");\nconst ui_selectors_1 = require(\"../ui.selectors\");\nconst current_season_selectors_1 = require(\"../current-season.selectors\");\nconst seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\nexports.selectVisibleFoodData = reselect_1.createSelector(ui_selectors_1.selectCurrentSearchTerm, current_season_selectors_1.selectCurrentSeasonFood, (searchTerm, food) => seasonal_shared_frontend_utilities_1.getDataThatContainsSearchTerm(searchTerm, food));\nexports.selectVisibleRecipeData = reselect_1.createSelector(ui_selectors_1.selectCurrentSearchTerm, current_season_selectors_1.selectCurrentSeasonRecipes, (searchTerm, recipes) => seasonal_shared_frontend_utilities_1.getDataThatContainsSearchTerm(searchTerm, recipes));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst current_season_with_food_epics_1 = require(\"./current-season-with-food.epics\");\nconst current_season_with_recipes_epics_1 = require(\"./current-season-with-recipes.epics\");\nconst init_epics_1 = require(\"./init.epics\");\nconst all_basic_season_epics_1 = require(\"./all-basic-season.epics\");\nconst all_seasons_with_food_epic_1 = require(\"./all-seasons-with-food.epic\");\nconst all_seasons_with_recipes_epic_1 = require(\"./all-seasons-with-recipes.epic\");\nconst current_food_details_epics_1 = require(\"./current-food-details.epics\");\nconst season_name_epics_1 = require(\"./season-name.epics\");\nconst country_epics_1 = require(\"./country.epics\");\nexports.rootEpics = [\n    init_epics_1.initAppEpic$,\n    current_season_with_food_epics_1.getCurrentSeasonWithFoodStartEpic$,\n    current_season_with_food_epics_1.getCurrentSeasonWithFoodEpic$,\n    current_season_with_recipes_epics_1.getCurrentSeasonWithRecipesStartEpic$,\n    current_season_with_recipes_epics_1.getCurrentSeasonWithRecipesEpic$,\n    all_basic_season_epics_1.getAllBasicSeasonsStartEpic$,\n    all_basic_season_epics_1.getAllBasicSeasonsEpic$,\n    all_seasons_with_food_epic_1.getAllSeasonsWithFood$,\n    all_seasons_with_recipes_epic_1.getAllSeasonsWithRecipes$,\n    current_food_details_epics_1.getCurrentFoodDetailsEpic$,\n    current_food_details_epics_1.updateFoodDetailsOnDietTypeChangeEpic$,\n    season_name_epics_1.setSeasonSelectedSeasonName$,\n    country_epics_1.getCountriesStart$,\n    country_epics_1.getCountries$,\n    country_epics_1.promptCountryChangeOnNewDetected$,\n    country_epics_1.hideRegionChangePrompt$\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst redux_observable_1 = require(\"redux-observable\");\nconst seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\nconst actions_1 = require(\"../actions\");\nconst operators_1 = require(\"rxjs/operators\");\nconst selectors_1 = require(\"../selectors\");\nexports.getCurrentSeasonWithFoodStartEpic$ = (actions$) => (actions$.pipe(redux_observable_1.ofType(actions_1.SELECT_SEASON, actions_1.INIT_SETTINGS, actions_1.FOOD_DETAILS_SELECT_SEASON, actions_1.SET_USER_REGION_DETECTED, actions_1.SET_REGION), operators_1.mapTo(actions_1.setCurrentSeasonWithFoodStart())));\nexports.getCurrentSeasonWithFoodEpic$ = (actions$, state$) => (actions$.pipe(redux_observable_1.ofType(actions_1.SET_CURRENT_SEASON_WITH_FOOD_START), operators_1.withLatestFrom(state$), operators_1.map(([, state]) => ({\n    regionCode: selectors_1.selectSettingsRegionCode(state),\n    seasonIndex: selectors_1.selectCurrentSeasonIndex(state)\n})), operators_1.switchMap(({ regionCode, seasonIndex }) => (seasonal_shared_frontend_utilities_1.getSeasonWithFood(seasonIndex, regionCode))), operators_1.map((foodData) => actions_1.setCurrentSeasonWithFoodSuccess(foodData))));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst redux_observable_1 = require(\"redux-observable\");\nconst seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\nconst actions_1 = require(\"../actions\");\nconst operators_1 = require(\"rxjs/operators\");\nconst seasonal_shared_models_1 = require(\"@chrisb-dev/seasonal-shared-models\");\nconst selectors_1 = require(\"../selectors\");\nexports.getCurrentSeasonWithRecipesStartEpic$ = (actions$) => (actions$.pipe(redux_observable_1.ofType(actions_1.SELECT_SEASON, actions_1.INIT_SETTINGS, actions_1.FOOD_DETAILS_SELECT_SEASON, actions_1.SET_DIET_TYPE, actions_1.SET_USER_REGION_DETECTED, actions_1.SET_REGION), operators_1.mapTo(actions_1.setCurrentSeasonWithRecipesStart())));\nexports.getCurrentSeasonWithRecipesEpic$ = (actions$, state$) => (actions$.pipe(redux_observable_1.ofType(actions_1.SET_CURRENT_SEASON_WITH_RECIPES_START), operators_1.withLatestFrom(state$), operators_1.map(([, state]) => ({\n    dietType: selectors_1.selectSettingsDietType(state),\n    regionCode: selectors_1.selectSettingsRegionCode(state),\n    seasonIndex: selectors_1.selectCurrentSeasonIndex(state)\n})), operators_1.switchMap(({ seasonIndex, regionCode, dietType }) => (seasonal_shared_frontend_utilities_1.getSeasonWithRecipes(seasonIndex, dietType === seasonal_shared_models_1.DIET_TYPE.VEGETARIAN, dietType === seasonal_shared_models_1.DIET_TYPE.VEGAN, regionCode))), operators_1.map((recipesData) => actions_1.setCurrentSeasonWithRecipesSuccess(recipesData))));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst actions_1 = require(\"../actions\");\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nexports.initAppEpic$ = () => (rxjs_1.of(null).pipe(operators_1.mapTo(actions_1.initApp())));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst redux_observable_1 = require(\"redux-observable\");\nconst seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\nconst actions_1 = require(\"../actions\");\nconst operators_1 = require(\"rxjs/operators\");\nconst selectors_1 = require(\"../selectors\");\nexports.getAllBasicSeasonsStartEpic$ = (actions$) => (actions$.pipe(redux_observable_1.ofType(actions_1.INIT_SETTINGS, actions_1.SET_REGION, actions_1.SET_USER_REGION_DETECTED), operators_1.mapTo(actions_1.setAllSeasonsStart())));\nexports.getAllBasicSeasonsEpic$ = (actions$, state$) => (actions$.pipe(redux_observable_1.ofType(actions_1.SET_ALL_BASIC_SEASONS_START), operators_1.withLatestFrom(state$), operators_1.map(([, state]) => selectors_1.selectSettingsRegionCode(state)), operators_1.switchMap((regionCode) => seasonal_shared_frontend_utilities_1.getAllSeasons(regionCode)), operators_1.map((seasonData) => actions_1.setAllBasicSeasonsSuccess(seasonData))));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst redux_observable_1 = require(\"redux-observable\");\nconst seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\nconst actions_1 = require(\"../actions\");\nconst operators_1 = require(\"rxjs/operators\");\nconst selectors_1 = require(\"../selectors\");\nexports.getAllSeasonsWithFood$ = (actions$, state$) => (actions$.pipe(redux_observable_1.ofType(actions_1.SET_ALL_SEASONS_WITH_FOOD_START), operators_1.withLatestFrom(state$), operators_1.map(([, state]) => selectors_1.selectSettingsRegionCode(state)), operators_1.switchMap((regionCode) => seasonal_shared_frontend_utilities_1.getAllSeasonsWithFood(regionCode)), operators_1.map((seasonData) => actions_1.setAllSeasonsWithFoodSuccess(seasonData))));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst redux_observable_1 = require(\"redux-observable\");\nconst seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\nconst actions_1 = require(\"../actions\");\nconst operators_1 = require(\"rxjs/operators\");\nconst selectors_1 = require(\"../selectors\");\nexports.getAllSeasonsWithRecipes$ = (actions$, state$) => (actions$.pipe(redux_observable_1.ofType(actions_1.SET_ALL_SEASONS_WITH_RECIPES_START), operators_1.withLatestFrom(state$), operators_1.map(([, state]) => selectors_1.selectSettingsRegionCode(state)), operators_1.switchMap((regionCode) => seasonal_shared_frontend_utilities_1.getAllSeasonsWithRecipes(regionCode)), operators_1.map((seasonData) => actions_1.setAllSeasonsWithRecipesSuccess(seasonData))));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst redux_observable_1 = require(\"redux-observable\");\nconst seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\nconst actions_1 = require(\"../actions\");\nconst operators_1 = require(\"rxjs/operators\");\nconst seasonal_shared_models_1 = require(\"@chrisb-dev/seasonal-shared-models\");\nconst selectors_1 = require(\"../selectors\");\nexports.updateFoodDetailsOnDietTypeChangeEpic$ = (actions$, state$) => (actions$.pipe(redux_observable_1.ofType(actions_1.SET_DIET_TYPE), operators_1.withLatestFrom(state$), operators_1.map(([, state]) => selectors_1.selectCurrentFoodDetailsId(state)), operators_1.filter((currentFoodDetailsId) => Boolean(currentFoodDetailsId)), operators_1.map((currentFoodDetailsId) => (actions_1.setCurrentFoodDetailsOnDietChange(currentFoodDetailsId)))));\nexports.getCurrentFoodDetailsEpic$ = (actions$, state$) => (actions$.pipe(redux_observable_1.ofType(actions_1.SET_CURRENT_FOOD_DETAILS_START, actions_1.SET_CURRENT_FOOD_DETAILS_ON_DIET_CHANGE), operators_1.withLatestFrom(state$), operators_1.map(([action, state]) => ({\n    dietType: selectors_1.selectSettingsDietType(state),\n    foodItemId: action.foodItemId,\n    regionCode: selectors_1.selectSettingsRegionCode(state)\n})), operators_1.switchMap(({ dietType, foodItemId, regionCode }) => (seasonal_shared_frontend_utilities_1.getFoodDetailsData(foodItemId, dietType === seasonal_shared_models_1.DIET_TYPE.VEGETARIAN, dietType === seasonal_shared_models_1.DIET_TYPE.VEGAN, regionCode))), operators_1.map((currentFoodData) => actions_1.setCurrentFoodDetailsSuccess(currentFoodData))));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst redux_observable_1 = require(\"redux-observable\");\nconst actions_1 = require(\"../actions\");\nconst operators_1 = require(\"rxjs/operators\");\nconst selectors_1 = require(\"../selectors\");\nexports.setSeasonSelectedSeasonName$ = (actions$, state$) => (actions$.pipe(redux_observable_1.ofType(actions_1.SELECT_SEASON), operators_1.map((action) => action.seasonIndex), operators_1.withLatestFrom(state$), operators_1.map(([seasonIndex, state]) => {\n    const basicSeasons = selectors_1.selectAllBasicSeasons(state);\n    return basicSeasons && basicSeasons[seasonIndex];\n}), operators_1.map((selectedSeason) => actions_1.setSelectedSeasonName(selectedSeason && selectedSeason.name || ''))));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst redux_observable_1 = require(\"redux-observable\");\nconst actions_1 = require(\"../actions\");\nconst operators_1 = require(\"rxjs/operators\");\nconst seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\nconst selectors_1 = require(\"../selectors\");\nexports.getCountriesStart$ = (actions$) => (actions$.pipe(redux_observable_1.ofType(actions_1.INIT_APP), operators_1.mapTo(actions_1.getCountriesStart())));\nexports.getCountries$ = (actions$) => (actions$.pipe(redux_observable_1.ofType(actions_1.INIT_APP), operators_1.switchMap(() => seasonal_shared_frontend_utilities_1.getCountries()), operators_1.map((countries) => actions_1.getCountriesSuccess(countries))));\nexports.promptCountryChangeOnNewDetected$ = (actions$, state$) => (actions$.pipe(redux_observable_1.ofType(actions_1.USER_REGION_DETECTED), operators_1.withLatestFrom(state$), operators_1.map(([action, state]) => ({\n    detectedRegion: action.regionCode,\n    settingsRegionCode: selectors_1.selectSettingsRegionCode(state)\n})), operators_1.filter(({ detectedRegion, settingsRegionCode }) => (detectedRegion !== settingsRegionCode)), operators_1.map(({ detectedRegion }) => actions_1.setUserRegionDetected(detectedRegion))));\nexports.hideRegionChangePrompt$ = (actions$) => (actions$.pipe(redux_observable_1.ofType(actions_1.SET_USER_REGION_DETECTED), operators_1.delay(5000), operators_1.mapTo(actions_1.hideRegionChangePrompt())));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst current_food_details_reducer_1 = require(\"./current-food-details.reducer\");\nconst current_season_reducer_1 = require(\"./current-season.reducer\");\nconst all_basic_seasons_reducer_1 = require(\"./all-basic-seasons.reducer\");\nconst all_seasons_reducer_1 = require(\"./all-seasons.reducer\");\nconst settings_reducer_1 = require(\"./settings.reducer\");\nconst ui_reducer_1 = require(\"./ui.reducer\");\nconst country_reducer_1 = require(\"./country.reducer\");\nexports.allReducers = {\n    allBasicSeasonData: all_basic_seasons_reducer_1.allBasicSeasonReducer,\n    allSeasonsWithFoodData: all_seasons_reducer_1.allSeasonsReducer,\n    countryData: country_reducer_1.countryReducer,\n    currentFoodDetailsData: current_food_details_reducer_1.currentFoodDetailsReducer,\n    currentSeasonData: current_season_reducer_1.currentSeasonWithFoodReducer,\n    settings: settings_reducer_1.settingsReducer,\n    ui: ui_reducer_1.uiReducer\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst actions_1 = require(\"../actions\");\nconst getDefaultState = () => ({\n    data: undefined,\n    isLoading: true\n});\nfunction currentFoodDetailsReducer(state = getDefaultState(), action) {\n    switch (action.type) {\n        case actions_1.SET_CURRENT_FOOD_DETAILS_START:\n            return Object.assign(Object.assign({}, state), { isLoading: true });\n        case actions_1.SET_CURRENT_FOOD_DETAILS_SUCCESS:\n            return Object.assign(Object.assign({}, state), { data: action\n                    .currentFoodDetailsData, isLoading: false });\n        default:\n            return state;\n    }\n}\nexports.currentFoodDetailsReducer = currentFoodDetailsReducer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst actions_1 = require(\"../actions\");\nconst seasonal_shared_frontend_utilities_1 = require(\"@chrisb-dev/seasonal-shared-frontend-utilities\");\nconst getDefaultState = () => ({\n    currentSeasonIndex: seasonal_shared_frontend_utilities_1.getCurrentSeasonIndex(),\n    data: undefined,\n    isFoodLoading: true,\n    isRecipesLoading: true\n});\nfunction currentSeasonWithFoodReducer(state = getDefaultState(), action) {\n    switch (action.type) {\n        case actions_1.SET_CURRENT_SEASON_WITH_FOOD_START:\n            return Object.assign(Object.assign({}, state), { isFoodLoading: true });\n        case actions_1.SET_CURRENT_SEASON_WITH_FOOD_SUCCESS:\n            return Object.assign(Object.assign({}, state), { data: Object.assign(Object.assign({}, state.data), action.currentSeasonData), isFoodLoading: false });\n        case actions_1.SET_CURRENT_SEASON_WITH_RECIPES_START:\n            return Object.assign(Object.assign({}, state), { isRecipesLoading: true });\n        case actions_1.SET_CURRENT_SEASON_WITH_RECIPES_SUCCESS:\n            return Object.assign(Object.assign({}, state), { data: Object.assign(Object.assign({}, state.data), action.currentSeasonData), isRecipesLoading: false });\n        case actions_1.SELECT_SEASON:\n        case actions_1.FOOD_DETAILS_SELECT_SEASON:\n            return Object.assign(Object.assign({}, state), { currentSeasonIndex: action.seasonIndex });\n        case actions_1.SET_SELECTED_SEASON_NAME:\n            return Object.assign(Object.assign({}, state), { data: state.data && Object.assign(Object.assign({}, state.data), { name: action.seasonName }) });\n        default:\n            return state;\n    }\n}\nexports.currentSeasonWithFoodReducer = currentSeasonWithFoodReducer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst actions_1 = require(\"../actions\");\nconst getDefaultState = () => ({\n    data: undefined,\n    isLoading: true\n});\nfunction allBasicSeasonReducer(state = getDefaultState(), action) {\n    switch (action.type) {\n        case actions_1.SET_ALL_BASIC_SEASONS_START:\n            return Object.assign(Object.assign({}, state), { isLoading: true });\n        case actions_1.SET_ALL_BASIC_SEASONS_SUCCESS:\n            return Object.assign(Object.assign({}, state), { data: action.seasonData, isLoading: false });\n        default:\n            return state;\n    }\n}\nexports.allBasicSeasonReducer = allBasicSeasonReducer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst actions_1 = require(\"../actions\");\nconst populateApiData = (state, action) => !state.data\n    ? action.seasonData\n    : state.data.map((season) => (Object.assign(Object.assign({}, season), action\n        .seasonData.find((seasonData) => seasonData.id === season.id))));\nconst getDefaultState = () => ({\n    data: undefined,\n    isFoodLoading: true,\n    isRecipesLoading: true,\n    numberOfSeasonsInView: 1\n});\nfunction allSeasonsReducer(state = getDefaultState(), action) {\n    switch (action.type) {\n        case actions_1.SET_ALL_SEASONS_WITH_FOOD_START:\n            return Object.assign(Object.assign({}, state), { isFoodLoading: true });\n        case actions_1.SET_ALL_SEASONS_WITH_FOOD_SUCCESS:\n            return Object.assign(Object.assign({}, state), { data: populateApiData(state, action), isFoodLoading: false });\n        case actions_1.SET_ALL_SEASONS_WITH_RECIPES_START:\n            return Object.assign(Object.assign({}, state), { isRecipesLoading: true });\n        case actions_1.SET_ALL_SEASONS_WITH_RECIPES_SUCCESS:\n            return Object.assign(Object.assign({}, state), { data: populateApiData(state, action), isRecipesLoading: false });\n        case actions_1.INCREASE_NUMBER_OF_ALL_FOOD_SEASONS_IN_VIEW:\n            return Object.assign(Object.assign({}, state), { numberOfSeasonsInView: state.numberOfSeasonsInView + 1 });\n        default:\n            return state;\n    }\n}\nexports.allSeasonsReducer = allSeasonsReducer;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst seasonal_shared_models_1 = require(\"@chrisb-dev/seasonal-shared-models\");\nconst actions_1 = require(\"../actions\");\nconst v4_1 = __importDefault(require(\"uuid/v4\"));\nconst getDefaultState = () => ({\n    dietType: seasonal_shared_models_1.DIET_TYPE.ALL,\n    selectedRegionCode: undefined,\n    timesAppStarted: 0,\n    userId: undefined\n});\nfunction settingsReducer(state = getDefaultState(), action) {\n    switch (action.type) {\n        case actions_1.INIT_SETTINGS:\n            const initialSettings = action.settings;\n            return Object.assign(Object.assign(Object.assign({}, state), initialSettings), { userId: initialSettings.userId || v4_1.default() });\n        case actions_1.SET_DIET_TYPE:\n            return Object.assign(Object.assign({}, state), { dietType: action.dietType });\n        case actions_1.SET_USER_REGION_DETECTED:\n        case actions_1.SET_REGION:\n            return Object.assign(Object.assign({}, state), { selectedRegionCode: action.regionCode });\n        default:\n            return state;\n    }\n}\nexports.settingsReducer = settingsReducer;\n","export * from './ImageGridItem/ImageGridItem';\n\nexport * from './ImageGrid/ImageGrid';\n\nexport * from './SummaryColumn';\n\nexport * from './SummaryColumnList';\n\nexport * from './SeasonNameView/SeasonNameView';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst actions_1 = require(\"../actions\");\nconst getDefaultState = () => ({\n    isCountryChangePromptVisible: false,\n    isLocationSettingsPopupVisible: false,\n    isMenuOpen: false,\n    isSearchBarVisible: false\n});\nfunction uiReducer(state = getDefaultState(), action) {\n    switch (action.type) {\n        case actions_1.GO_TO_ALL_SEASONS_VIEW:\n        case actions_1.SELECT_SEASON:\n        case actions_1.CLOSE_MENU:\n            return Object.assign(Object.assign({}, state), { isMenuOpen: false });\n        case actions_1.OPEN_MENU:\n            return Object.assign(Object.assign({}, state), { isMenuOpen: true });\n        case actions_1.SEARCH_BAR_CHANGED:\n            return Object.assign(Object.assign({}, state), { searchTerm: action.newSearchTerm });\n        case actions_1.SHOW_SEARCH_BAR:\n            return Object.assign(Object.assign({}, state), { isSearchBarVisible: true });\n        case actions_1.HIDE_SEARCH_BAR:\n            return Object.assign(Object.assign({}, state), { isSearchBarVisible: false, searchTerm: '' });\n        case actions_1.SET_REGION:\n            return Object.assign(Object.assign({}, state), { isLocationSettingsPopupVisible: false });\n        case actions_1.SET_USER_REGION_DETECTED:\n            return Object.assign(Object.assign({}, state), { isCountryChangePromptVisible: true });\n        case actions_1.HIDE_REGION_CHANGE_PROMPT:\n            return Object.assign(Object.assign({}, state), { isCountryChangePromptVisible: false });\n        case actions_1.SHOW_LOCATION_SETTINGS_POPUP:\n            return Object.assign(Object.assign({}, state), { isLocationSettingsPopupVisible: true });\n        case actions_1.CLOSE_LOCATION_SETTINGS_POPUP:\n            return Object.assign(Object.assign({}, state), { isLocationSettingsPopupVisible: false });\n        default:\n            return state;\n    }\n}\nexports.uiReducer = uiReducer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst actions_1 = require(\"../actions\");\nconst getDefaultState = () => ({\n    data: undefined,\n    isLoading: true\n});\nfunction countryReducer(state = getDefaultState(), action) {\n    switch (action.type) {\n        case actions_1.GET_COUNTRIES_START:\n            return Object.assign(Object.assign({}, state), { isLoading: true });\n        case actions_1.GET_COUNTRIES_SUCCESS:\n            return Object.assign(Object.assign({}, state), { data: action.countries, isLoading: false });\n        default:\n            return state;\n    }\n}\nexports.countryReducer = countryReducer;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./actions\"));\n__export(require(\"./selectors\"));\n__export(require(\"./epics\"));\n__export(require(\"./reducers\"));\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./get-nearest-region-from-lat-lng\"));\n__export(require(\"./name-search\"));\n__export(require(\"./retrieve-backend-data\"));\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./enums\"));\n__export(require(\"./config\"));\n","import React, { FC } from 'react';\n\nimport './AboutEatSeasonal.scss';\n\nimport {\n  TextHeadingLarge,\n  TextMedium\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nexport const AboutEatSeasonal: FC = () => (\n  <div className='c-about-eat-seasonal'>\n    <h1 className='c-about-eat-seasonal__heading'>\n      <TextHeadingLarge>\n        About Eat Seasonal\n      </TextHeadingLarge>\n    </h1>\n    <p className='c-about-eat-seasonal__text'>\n      <TextMedium>\n        Eat Seasonal started because we wanted a way to easily see what fruit\n        and vegetables are in seasons. Walking around a supermarket, trying to\n        plan seasonal meals becomes much easier when you can quickly access\n        information on everything that's in season through your phone.\n      </TextMedium>\n    </p>\n    <p className='c-about-eat-seasonal__text'>\n      <TextMedium>\n        The app and website give you quick and simple view of all the food\n        currently in seasons. They also provide a recipes section including\n        carefully selected recipes which use ingredients which are mostly in\n        seasons. New recipes are being added all the time!\n      </TextMedium>\n    </p>\n  </div>\n);\n","import React, { FC } from 'react';\n\nimport './AndroidAppDownload.scss';\n\nexport const AndroidAppDownload: FC<{}> = () => (\n  <a className='c-android-app-download'\n    href={\n    'https://play.google.com/store/apps/details?id=com.chrisbdev.seasonal&p' +\n      'campaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1'\n  }>\n    <img className='c-android-app-download__image'\n      alt='Get it on Google Play'\n      src='https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png'/>\n  </a>\n);\n","import React, { FC } from 'react';\n\nimport './BottomTabs.scss';\n\nimport {\n  BareButton\n} from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { IBottomTabProps } from './BottomTabs.interface';\n\nconst addTabClasses = (isSelected: boolean) => (\n  `c-bottom-tabs__tab ${\n    isSelected\n      ? ' c-bottom-tabs__tab--selected'\n      : ''\n  }`\n);\n\nexport const BottomTabs: FC<IBottomTabProps> = ({\n  isCurrentTabFood,\n  isCurrentTabRecipes,\n  goToFoodTab,\n  goToRecipesTab\n}) => (\n  <nav className='c-bottom-tabs'>\n    <BareButton\n      className={addTabClasses(isCurrentTabFood)}\n      onClick={goToFoodTab}>\n      Food\n    </BareButton>\n    <BareButton\n      className={addTabClasses(isCurrentTabRecipes)}\n      onClick={goToRecipesTab}>\n      Recipes\n    </BareButton>\n  </nav>\n);\n","export enum TABS {\n  FOOD,\n  RECIPES\n}\n","import { createMatchSelector, RouterRootState, getLocation } from 'connected-react-router';\nimport { FOOD_DETAILS_URL, ALL_SEASONS_URL } from '../../const';\nimport { createSelector } from 'reselect';\nimport { IState } from '../../interfaces';\n\nexport const selectCurrentFoodDetailsParams = createMatchSelector<\n  RouterRootState,\n  {\n    id: string\n  }\n>(\n  `${FOOD_DETAILS_URL}/:id`\n);\n\nexport const selectCurrentFoodDetailsId = createSelector(\n  selectCurrentFoodDetailsParams,\n  (routeParams) => routeParams && routeParams.params.id\n);\n\nexport const selectCurrentLocation = (state: IState) => getLocation(state);\n\nexport const selectCurrentPath = createSelector(\n  selectCurrentLocation,\n  (location) => location.pathname\n);\n\nexport const selectIsCurrentRouteAllSeasons = createSelector(\n  selectCurrentPath,\n  (path) => path === ALL_SEASONS_URL\n);\n","export const LANDING_URL = '/';\nexport const FOOD_TABLE_URL = '/food';\nexport const FOOD_DETAILS_URL = '/food-details';\nexport const ALL_SEASONS_URL = '/all-seasons';\n","import { createSelector } from 'reselect';\nimport { IState } from '../../interfaces';\nimport { TABS } from '../../const';\n\nconst selectWebUiState = (state: IState) => state.webUi;\n\nexport const selectCurrentTab = createSelector(\n  selectWebUiState,\n  (webUiState): TABS => webUiState.currentTab\n);\n\nexport const selectIsCurrentTabFood = createSelector(\n  selectCurrentTab,\n  (currentTab): boolean => currentTab === TABS.FOOD\n);\n\nexport const selectIsCurrentTabRecipes = createSelector(\n  selectCurrentTab,\n  (currentTab): boolean => currentTab === TABS.RECIPES\n);\n","import { ActionsObservable } from 'redux-observable';\n\nimport {\n  GO_TO_FOOD_TAB,\n  GO_TO_RECIPES_TABS,\n  GO_TO_WEB_VERSION\n} from '../actions';\n\nimport {\n  SELECT_SEASON,\n  FOOD_DETAILS_SELECT_SEASON,\n  OPEN_MENU,\n  CLOSE_MENU,\n  RECIPE_ITEM_CLICKED,\n  FOOD_ITEM_CLICKED\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nimport {\n  map,\n  filter,\n  ignoreElements\n} from 'rxjs/operators';\nimport { Action } from 'redux';\nimport { Observable } from 'rxjs';\nimport { WebSeasonalEpic } from './seasonal-epic.type';\n\nconst ACTIONS_TO_TRACK = [\n  SELECT_SEASON,\n  FOOD_DETAILS_SELECT_SEASON,\n  OPEN_MENU,\n  CLOSE_MENU,\n  GO_TO_FOOD_TAB,\n  GO_TO_RECIPES_TABS,\n  GO_TO_WEB_VERSION,\n  RECIPE_ITEM_CLICKED,\n  FOOD_ITEM_CLICKED\n];\n\nexport const trackActionEpic$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    filter(({ type }) => ACTIONS_TO_TRACK.includes(type)),\n    map(({ type }) => ga('send', 'event', type, type)),\n    ignoreElements()\n  )\n);\n","import { Action } from 'redux';\n\nexport const GO_TO_FOOD_TAB = 'GO_TO_FOOD_TAB';\nexport function goToFoodTab(): Action {\n  return {\n    type: GO_TO_FOOD_TAB\n  };\n}\n\nexport const GO_TO_RECIPES_TABS = 'GO_TO_RECIPES_TABS';\nexport function goToRecipesTab(): Action {\n  return {\n    type: GO_TO_RECIPES_TABS\n  };\n}\n","import { Action } from 'redux';\n\nexport const GO_TO_WEB_VERSION = 'GO_TO_WEB_VERSION';\nexport function goToWebVersion(): Action {\n  return {\n    type: GO_TO_WEB_VERSION\n  };\n}\n\nexport const GO_BACK_FROM_FOOD_DETAILS = 'GO_BACK_FROM_FOOD_DETAILS';\nexport function goBackFromFoodDetails(): Action {\n  return {\n    type: GO_BACK_FROM_FOOD_DETAILS\n  };\n}\n","import { ActionsObservable, ofType, StateObservable } from 'redux-observable';\n\nimport {\n  ISettingsState,\n  DIET_TYPE\n} from '@chrisb-dev/seasonal-shared-models';\nimport {\n  SET_DIET_TYPE,\n  selectSettingsState,\n  INIT_APP,\n  initSettings\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nimport { IState } from '../../interfaces';\n\nimport {\n  map,\n  ignoreElements,\n  withLatestFrom,\n  tap\n} from 'rxjs/operators';\nimport { Action } from 'redux';\nimport { Observable } from 'rxjs';\nimport { WebSeasonalEpic } from './seasonal-epic.type';\nimport { setStoredData, getStoredData } from '../../helpers';\n\nconst settingsStorageKey = 'seasonalSettings';\n\nexport const storeSettings$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>,\n  state$: StateObservable<IState>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(SET_DIET_TYPE),\n    withLatestFrom(state$),\n    map(([, state]) => selectSettingsState(state)),\n    tap((settingsState) => setStoredData(settingsStorageKey, settingsState)),\n    ignoreElements()\n  )\n);\n\nexport const getStoredSettings$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(INIT_APP),\n    map(() => getStoredData<ISettingsState>(settingsStorageKey)),\n    map((settings) => initSettings(\n      settings\n      ? {\n        ...settings,\n        timesAppStarted: (settings.timesAppStarted || 0) + 1\n      }\n      :\n      {\n        dietType: DIET_TYPE.ALL,\n        selectedRegionCode: undefined,\n        timesAppStarted: 1\n      })\n    )\n  )\n);\n","import { combineEpics } from 'redux-observable';\n\nimport { rootEpics } from '@chrisb-dev/seasonal-shared-frontend-redux';\nimport { trackActionEpic$ } from './tracking.epics';\n\nimport {\n  goToWebVersion$,\n  goToRecipeLink$,\n  goToFoodLink$,\n  goToFoodTable$,\n  goToFoodDetails$,\n  initFoodDetails$,\n  initAllSeasonsWithFoodData$,\n  goToAllSeasonsView$,\n  goBack$\n} from './route.epics';\n\nimport {\n  getStoredSettings$,\n  storeSettings$\n} from './settings.epics';\n\nexport const rootEpic = combineEpics(\n  ...rootEpics,\n  trackActionEpic$,\n  goToWebVersion$,\n  goToRecipeLink$,\n  goToFoodLink$,\n  goToFoodDetails$,\n  goBack$,\n  initFoodDetails$,\n  initAllSeasonsWithFoodData$,\n  goToFoodTable$,\n  goToAllSeasonsView$,\n  getStoredSettings$,\n  storeSettings$\n);\n","import { ActionsObservable, ofType, StateObservable } from 'redux-observable';\nimport {\n  mapTo, withLatestFrom, map, filter, debounceTime\n} from 'rxjs/operators';\nimport { Action } from 'redux';\nimport { Observable } from 'rxjs';\nimport {\n  GO_TO_WEB_VERSION,\n  GO_BACK_FROM_FOOD_DETAILS\n} from '../actions';\nimport {\n  GO_TO_ALL_SEASONS_VIEW,\n  RECIPE_ITEM_CLICKED,\n  IRecipeItemClicked,\n  FOOD_ITEM_CLICKED,\n  IFoodItemClicked,\n  FOOD_DETAILS_SELECT_SEASON,\n  SELECT_SEASON,\n  setCurrentFoodDetailsStart,\n  INIT_APP,\n  selectCurrentSeasonRecipesById,\n  setAllSeasonsWithFoodStart\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\nimport { push, goBack } from 'connected-react-router';\nimport { FOOD_TABLE_URL, FOOD_DETAILS_URL, ALL_SEASONS_URL } from '../../const';\nimport { IState } from '../../interfaces';\nimport { selectCurrentFoodDetailsId, selectIsCurrentRouteAllSeasons } from '../selectors';\nimport { WebSeasonalEpic } from './seasonal-epic.type';\n\nexport const goToWebVersion$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(GO_TO_WEB_VERSION),\n    mapTo(push(FOOD_TABLE_URL))\n  )\n);\n\nexport const goToRecipeLink$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>,\n  state$: StateObservable<IState>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(RECIPE_ITEM_CLICKED),\n    withLatestFrom(state$),\n    map(([\n      action,\n      state\n    ]) => selectCurrentSeasonRecipesById(\n        (action as IRecipeItemClicked).recipeItemId\n      )(state)\n    ),\n    map((recipe) => {\n      if (recipe) {\n        window.open(recipe.linkUrl, '_blank');\n      }\n      return { type: '' };\n    })\n  )\n);\n\nexport const goToFoodLink$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(FOOD_ITEM_CLICKED),\n    map((action) => (\n      push(`${FOOD_DETAILS_URL}/${(action as IFoodItemClicked).foodItemId}`)\n    ))\n  )\n);\n\nexport const goToFoodDetails$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(FOOD_ITEM_CLICKED),\n    map((action) => (\n      setCurrentFoodDetailsStart((action as IFoodItemClicked).foodItemId)\n    ))\n  )\n);\n\nexport const initFoodDetails$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>,\n  state$: StateObservable<IState>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(INIT_APP),\n    withLatestFrom(state$),\n    map(([, state]) => selectCurrentFoodDetailsId(state)),\n    filter((foodDetailsId) => Boolean(foodDetailsId)),\n    map((foodDetailsId) => setCurrentFoodDetailsStart(foodDetailsId!))\n  )\n);\n\nexport const initAllSeasonsWithFoodData$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>,\n  state$: StateObservable<IState>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(\n      GO_TO_ALL_SEASONS_VIEW,\n      INIT_APP,\n      GO_BACK_FROM_FOOD_DETAILS\n    ),\n    debounceTime(50),\n    withLatestFrom(state$),\n    map(([, state]) => selectIsCurrentRouteAllSeasons(state)),\n    filter((isRouteAllSeasons) => Boolean(isRouteAllSeasons)),\n    mapTo(setAllSeasonsWithFoodStart())\n  )\n);\n\nexport const goToFoodTable$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(\n      FOOD_DETAILS_SELECT_SEASON,\n      SELECT_SEASON\n    ),\n    mapTo(push(FOOD_TABLE_URL))\n  )\n);\n\nexport const goBack$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(\n      GO_BACK_FROM_FOOD_DETAILS\n    ),\n    mapTo(goBack())\n  )\n);\n\nexport const goToAllSeasonsView$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(GO_TO_ALL_SEASONS_VIEW),\n    mapTo(push(ALL_SEASONS_URL))\n  )\n);\n","import {\n  Action,\n  applyMiddleware,\n  combineReducers,\n  createStore,\n  compose\n} from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\n\nimport {\n  allReducers\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nimport { webUiReducer } from './web-ui.reducer';\n\nimport {\n  rootEpic\n} from '../epics';\n\nimport { IState } from '../../interfaces';\n\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { createHashHistory } from 'history';\n\nconst epicMiddleware = createEpicMiddleware<Action, Action, IState, {}>();\nexport const storeHistory = createHashHistory();\n\nexport const store = createStore(\n  combineReducers({\n    ...allReducers,\n    router: connectRouter(storeHistory),\n    webUi: webUiReducer\n  }),\n  compose(\n    applyMiddleware(\n      routerMiddleware(storeHistory),\n      epicMiddleware\n    )\n  )\n);\nepicMiddleware.run(rootEpic);\n","import {\n  GO_TO_FOOD_TAB,\n  GO_TO_RECIPES_TABS\n} from '../actions';\nimport { IWebUiState } from '../../interfaces';\nimport { Action } from 'redux';\nimport { TABS } from '../../const';\n\nconst getDefaultState = (): IWebUiState => ({\n  currentTab: TABS.FOOD\n});\n\nexport function webUiReducer(\n  state = getDefaultState(),\n  action: Action\n): IWebUiState {\n  switch (action.type) {\n    case GO_TO_FOOD_TAB:\n      return {\n        ...state,\n        currentTab: TABS.FOOD\n      };\n    case GO_TO_RECIPES_TABS:\n      return {\n        ...state,\n        currentTab: TABS.RECIPES\n      };\n    default:\n      return state;\n  }\n}\n","import { connect } from 'react-redux';\nimport {\n  BottomTabs\n} from './BottomTabs';\nimport {\n  goToFoodTab,\n  goToRecipesTab,\n  selectIsCurrentTabFood,\n  selectIsCurrentTabRecipes\n} from '../../store';\nimport {\n  IBottomTabDispatchProps,\n  IBottomTabInputProps\n} from './BottomTabs.interface';\nimport { Dispatch } from 'redux';\nimport { IState } from '../../interfaces';\n\nconst mapStateToProps = (\n  state: IState\n): IBottomTabInputProps => ({\n  isCurrentTabFood: selectIsCurrentTabFood(state),\n  isCurrentTabRecipes: selectIsCurrentTabRecipes(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IBottomTabDispatchProps => ({\n  goToFoodTab: () => dispatch(goToFoodTab()),\n  goToRecipesTab: () => dispatch(goToRecipesTab())\n});\n\nexport const BottomTabsConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BottomTabs);\n","import React, { FC } from 'react';\n\nimport './CurrentSeasonName.scss';\n\nimport { ICurrentSeasonName } from './CurrentSeasonName.interface';\nimport { SeasonNameView } from '../../components-layout';\n\nexport const CurrentSeasonName: FC<ICurrentSeasonName> = ({\n  currentSeasonName,\n  isLoading\n}) => (\n  !isLoading\n    ? <SeasonNameView name={currentSeasonName} />\n    : null\n);\n","import { connect } from 'react-redux';\nimport {\n  CurrentSeasonName\n} from './CurrentSeasonName';\nimport {\n  selectCurrentSeasonName,\n  selectIsCurrentSeasonFoodLoading\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\nimport {\n  ICurrentSeasonName\n} from './CurrentSeasonName.interface';\nimport { IState } from '../../interfaces';\n\nconst mapStateToProps = (\n  state: IState\n): ICurrentSeasonName => ({\n  currentSeasonName: selectCurrentSeasonName(state),\n  isLoading: selectIsCurrentSeasonFoodLoading(state)\n});\n\nexport const CurrentSeasonNameConnecter = connect(\n  mapStateToProps\n)(CurrentSeasonName);\n","import React, { FC } from 'react';\n\nimport './DietaryFilters.scss';\n\nimport {\n  IDietaryFiltersProps\n} from './DietaryFilters.interface';\nimport { DIET_TYPE } from '@chrisb-dev/seasonal-shared-models';\nimport { RadioButtonGroup } from '@chrisb-dev/seasonal-shared-frontend-components';\n\nconst radioButtons = [{\n  label: 'All',\n  value: DIET_TYPE.ALL\n}, {\n  label: 'Vegetarian',\n  value: DIET_TYPE.VEGETARIAN\n}, {\n  label: 'Vegan',\n  value: DIET_TYPE.VEGAN\n}];\n\nexport const DietaryFilters: FC<IDietaryFiltersProps> = ({\n  dietType,\n  update\n}) => (\n  <div className='c-dietary-filters'>\n    <RadioButtonGroup\n      groupName='dietary-filter'\n      radioButtons={radioButtons}\n      selectedValue={dietType}\n      onChange={(newValue) => update(newValue as DIET_TYPE)}\n    />\n  </div>\n);\n","import { connect } from 'react-redux';\nimport {\n  DietaryFilters\n} from './DietaryFilters';\n\nimport { IState } from '../../interfaces';\nimport {\n  IDietaryFiltersInputProps,\n  IDietaryFiltersDispatchProps\n} from './DietaryFilters.interface';\nimport { Dispatch } from 'redux';\nimport {\n  DIET_TYPE\n} from '@chrisb-dev/seasonal-shared-models';\nimport {\n  setDietType, selectSettingsDietType\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nconst mapStateToProps = (\n  state: IState\n): IDietaryFiltersInputProps => ({\n  dietType: selectSettingsDietType(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IDietaryFiltersDispatchProps => ({\n  update: (dietType: DIET_TYPE) => dispatch(setDietType(dietType))\n});\n\nexport const DietaryFiltersConnector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DietaryFilters);\n","import React, { FC } from 'react';\n\nimport './FoodDetailsLoader.scss';\n\nimport {\n  LoadingSpinner\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport {\n  IFoodDetailsLoaderInputProps\n} from './FoodDetailsLoader.interface';\n\nexport const FoodDetailsLoader: FC<IFoodDetailsLoaderInputProps> = ({\n  isLoading\n}) => (\n  isLoading\n    ? <div className='c-food-details-loader'>\n      <LoadingSpinner />\n    </div>\n    : null\n);\n","import { connect } from 'react-redux';\nimport {\n  FoodDetailsLoader\n} from './FoodDetailsLoader';\nimport {\n  selectIsFoodDataOrBasicSeasonsLoading\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nimport { IState } from '../../interfaces';\nimport {\n  IFoodDetailsLoaderInputProps\n} from './FoodDetailsLoader.interface';\n\nconst mapStateToProps = (\n  state: IState\n): IFoodDetailsLoaderInputProps => ({\n  isLoading: selectIsFoodDataOrBasicSeasonsLoading(state)\n});\n\nexport const FoodDetailsLoaderConnecter = connect(\n  mapStateToProps\n)(FoodDetailsLoader);\n","import React, { FC } from 'react';\n\nimport './FoodDetailsTopSection.scss';\n\nimport {\n  ArrowIcon,\n  BareButton,\n  TextHeadingMedium\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport {\n  IFoodDetailsTopSectionProps\n} from './FoodDetailsTopSection.interface';\n\nexport const FoodDetailsTopSection: FC<IFoodDetailsTopSectionProps> = ({\n  foodImageUrl,\n  foodName,\n  isLoading,\n  onGoBack\n}) => (\n  !isLoading\n    ? <div className='c-food-details-top-section'>\n    <div className='c-food-details-top-section__top-bar'>\n      <BareButton\n        className='c-food-details-top-section__back-button'\n        onClick={onGoBack}>\n        <ArrowIcon />\n      </BareButton>\n      <TextHeadingMedium className='c-food-details-top-section__food-name'>\n        {foodName}\n      </TextHeadingMedium>\n    </div>\n    {\n      foodImageUrl && <img src={foodImageUrl}\n        alt={foodName}\n        className='c-food-details-top-section__food-image'/>\n    }\n  </div>\n  : null\n);\n","import { connect } from 'react-redux';\nimport {\n  FoodDetailsTopSection\n} from './FoodDetailsTopSection';\nimport {\n  goBackFromFoodDetails\n} from '../../store';\nimport {\n  selectCurrentFoodDetailsName,\n  selectCurrentFoodDetailsImageUrl,\n  selectIsFoodDataOrBasicSeasonsLoading\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nimport { IState } from '../../interfaces';\nimport {\n  IFoodDetailsTopSectionInputProps,\n  IFoodDetailsTopSectionDispatchProps\n} from './FoodDetailsTopSection.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (\n  state: IState\n): IFoodDetailsTopSectionInputProps => ({\n  foodImageUrl: selectCurrentFoodDetailsImageUrl(state),\n  foodName: selectCurrentFoodDetailsName(state),\n  isLoading: selectIsFoodDataOrBasicSeasonsLoading(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IFoodDetailsTopSectionDispatchProps => ({\n  onGoBack: () => dispatch(goBackFromFoodDetails())\n});\n\nexport const FoodDetailsTopSectionConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FoodDetailsTopSection);\n","import React, { FC } from 'react';\n\nimport './FoodTable.scss';\n\nimport {\n  ImageGrid\n} from '../../components-layout';\n\nimport {\n  LoadingSpinner\n} from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { IFoodTableProps } from './FoodTable.interface';\n\nexport const FoodTable: FC<IFoodTableProps> = ({\n  isCurrentTabFood,\n  isLoading,\n  food,\n  onFoodClick\n}) => (\n  isCurrentTabFood\n    ? isLoading\n      ? <div className='c-food-table__loading-spinner-wrapper'>\n        <LoadingSpinner />\n      </div>\n      : <ImageGrid data={food} onClick={onFoodClick} />\n    : null\n);\n","import { connect } from 'react-redux';\nimport {\n  FoodTable\n} from './FoodTable';\nimport {\n  selectIsCurrentTabFood\n} from '../../store';\nimport {\n  selectIsCurrentSeasonFoodLoading,\n  selectVisibleFoodData,\n  foodItemClicked\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\nimport { IState } from '../../interfaces';\nimport {\n  IFoodTableInputProps,\n  IFoodTableDispatchProps\n} from './FoodTable.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (\n  state: IState\n): IFoodTableInputProps => {\n  return {\n    food: selectVisibleFoodData(state),\n    isCurrentTabFood: selectIsCurrentTabFood(state),\n    isLoading: selectIsCurrentSeasonFoodLoading(state)\n  };\n};\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IFoodTableDispatchProps => {\n  return {\n    onFoodClick: (foodItemId) => dispatch(foodItemClicked(foodItemId))\n  };\n};\n\nexport const FoodTableConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FoodTable);\n","import React, { FC } from 'react';\n\nimport './Header.scss';\n\nimport {\n  BareButton,\n  BurgerIcon,\n  TextHeadingLarge\n} from '@chrisb-dev/seasonal-shared-frontend-components';\nimport {\n  SearchBarConnecter\n} from '../';\nimport { IHeaderDispatchProps } from './Header.interface';\n\nexport const Header: FC<IHeaderDispatchProps> = ({\n  onMenuOpen\n}) => (\n  <header className='c-header'>\n    <BareButton className='c-header__btn' onClick={onMenuOpen}>\n      <BurgerIcon />\n    </BareButton>\n    <h1 className='c-header__text'>\n      <TextHeadingLarge>\n        Eat Seasonal\n      </TextHeadingLarge>\n    </h1>\n    <SearchBarConnecter />\n  </header>\n);\n","import { connect } from 'react-redux';\nimport {\n  Header\n} from './Header';\nimport {\n  openMenu\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\nimport { IHeaderDispatchProps } from './Header.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IHeaderDispatchProps => ({\n  onMenuOpen: () => dispatch(openMenu())\n});\n\nexport const HeaderConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React, { FC } from 'react';\n\nimport './IOSAppDownload.scss';\n\nexport const IOSAppDownload: FC<{}> = () => (\n  <a className='c-ios-app-download'\n    href='https://apps.apple.com/us/app/eat-seasonal/id1496551124?ls=1'>\n    <img className='c-ios-app-download__image'\n      alt='Get it on the iOS store'\n      src='https://developer.apple.com/app-store/marketing/guidelines/images/badge-example-preferred_2x.png'/>\n  </a>\n);\n","import React, { FC } from 'react';\n\nimport './PageLayout.scss';\n\nexport const PageLayout: FC<{}> = ({\n  children\n}) => (\n  <div className='c-page-layout'>\n    { children }\n  </div>\n);\n","import React, { Fragment, FC } from 'react';\n\nimport './SeasonMenu.scss';\n\nimport {\n  BareButton,\n  CrossIcon,\n  TextMedium,\n  LoadingSpinner\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport {\n  fadeInOutAnimation\n} from '../../helpers';\nimport { PoseGroup } from 'react-pose';\nimport { ISeasonMenuProps } from './SeasonMenu.interface';\n\nconst OverlayFadeInOutAnimation = fadeInOutAnimation();\n\nexport const SeasonMenu: FC<ISeasonMenuProps> = ({\n  allBasicSeasonData,\n  currentSeasonIndex,\n  isCurrentRouteAllSeasons,\n  isLoading,\n  isMenuOpen,\n  onSeasonSelected,\n  onClose,\n  onAllSeasonsSelected\n}) => (\n  <div>\n    <PoseGroup>\n      {\n        isMenuOpen &&\n        <OverlayFadeInOutAnimation key='season-menu-overlay'\n          className='c-season-menu__overlay'\n          onClick={onClose} />\n      }\n    </PoseGroup>\n    <nav\n      className={`c-season-menu ${isMenuOpen ? 'c-season-menu--is-open' : ''}`}>\n      {\n        !isLoading\n          ? <Fragment>\n              { allBasicSeasonData &&\n                  allBasicSeasonData.map(({ name }, index) => (\n                  <BareButton\n                    key={name}\n                    className={\n                      `c-season-menu__button ${\n                        !isCurrentRouteAllSeasons &&\n                        index === currentSeasonIndex\n                          ? 'c-season-menu__button--selected'\n                          : ''\n                        }`}\n                    onClick={() => onSeasonSelected(index)}>\n                    <TextMedium>{ name }</TextMedium>\n                  </BareButton>\n                ))\n              }\n              <BareButton className={\n                `c-season-menu__button ${\n                  isCurrentRouteAllSeasons\n                    ? 'c-season-menu__button--selected'\n                    : ''\n                }`\n                }\n                onClick={onAllSeasonsSelected}>\n                <TextMedium>All seasons</TextMedium>\n              </BareButton>\n          </Fragment>\n          : <div className='c-season-menu__loading-spinner-wrapper'>\n            <LoadingSpinner />\n          </div>\n      }\n      <BareButton className='c-season-menu__close-btn'\n        onClick={onClose}>\n        <CrossIcon />\n      </BareButton>\n    </nav>\n  </div>\n);\n","import { connect } from 'react-redux';\nimport {\n  SeasonMenu\n} from './SeasonMenu';\nimport {\n  selectIsMenuOpen,\n  closeMenu,\n  selectAllBasicSeasons,\n  selectIsBasicSeasonsLoading,\n  selectSeason,\n  selectCurrentSeasonIndex,\n  goToAllSeasonsView\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nimport { IState } from '../../interfaces';\nimport {\n  ISeasonMenuInputProps,\n  ISeasonMenuDispatchProps\n} from './SeasonMenu.interface';\nimport { Dispatch } from 'redux';\n\nimport { selectIsCurrentRouteAllSeasons } from '../../store';\n\nconst mapStateToProps = (\n  state: IState\n): ISeasonMenuInputProps => ({\n  allBasicSeasonData: selectAllBasicSeasons(state),\n  currentSeasonIndex: selectCurrentSeasonIndex(state),\n  isCurrentRouteAllSeasons: selectIsCurrentRouteAllSeasons(state),\n  isLoading: selectIsBasicSeasonsLoading(state),\n  isMenuOpen: selectIsMenuOpen(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): ISeasonMenuDispatchProps => ({\n  onAllSeasonsSelected: () => dispatch(goToAllSeasonsView()),\n  onClose: () => dispatch(closeMenu()),\n  onSeasonSelected: (\n    seasonIndex: number\n  ) => dispatch(selectSeason(seasonIndex))\n});\n\nexport const SeasonMenuConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SeasonMenu);\n","import React, { FC } from 'react';\nimport { PageLayout } from '../../components-layout/PageLayout/PageLayout';\nimport { HeaderConnecter } from '../Header/Header.connector';\nimport { SeasonMenuConnecter } from '../SeasonMenu/SeasonMenu.connector';\n\nexport const PageWithMenu: FC<{}> = ({\n  children\n}) => (\n  <PageLayout>\n    <HeaderConnecter />\n    <SeasonMenuConnecter />\n    { children }\n  </PageLayout>\n);\n","import React, { FC } from 'react';\n\nimport './RecipesForFood.scss';\n\nimport { IRecipesForFoodProps } from './RecipesForFood.interface';\nimport { ImageGrid } from '../../components-layout';\nimport {\n  TextHeadingSmall\n} from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { DietaryFiltersConnector } from '../DietaryFilters/DietaryFilters.connector';\n\nexport const RecipesForFood: FC<IRecipesForFoodProps> = ({\n  isLoading,\n  currentFoodDetailsRecipes,\n  onRecipeSelected\n}) => (\n  !isLoading && currentFoodDetailsRecipes && currentFoodDetailsRecipes.length > 0\n    ? <div className='c-recipes-for-food'>\n      <TextHeadingSmall className='c-recipes-for-food__heading'>\n        Recipes\n      </TextHeadingSmall>\n      <DietaryFiltersConnector />\n      <ImageGrid data={currentFoodDetailsRecipes} onClick={onRecipeSelected} />\n    </div>\n    : null\n);\n","import { connect } from 'react-redux';\nimport {\n  RecipesForFood\n} from './RecipesForFood';\nimport {\n  selectIsFoodDataOrBasicSeasonsLoading,\n  selectVisibleRecipesForFoodDetailsData,\n  foodDetailsSelectRecipe\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nimport { IState } from '../../interfaces';\nimport {\n  IRecipesForFoodInputProps,\n  IRecipesForFoodDispatchProps\n} from './RecipesForFood.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (\n  state: IState\n): IRecipesForFoodInputProps => ({\n  currentFoodDetailsRecipes: selectVisibleRecipesForFoodDetailsData(state),\n  isLoading: selectIsFoodDataOrBasicSeasonsLoading(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IRecipesForFoodDispatchProps => ({\n  onRecipeSelected: (recipeId: string) => (\n    dispatch(foodDetailsSelectRecipe(recipeId))\n  )\n});\n\nexport const RecipesForFoodConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecipesForFood);\n","import React, { FC } from 'react';\n\nimport './RecipeTable.scss';\n\nimport {\n  ImageGrid\n} from '../../components-layout';\n\nimport {\n  LoadingSpinner\n} from '@chrisb-dev/seasonal-shared-frontend-components';\nimport { IRecipeTableProps } from './RecipeTable.interface';\nimport { DietaryFiltersConnector } from '../DietaryFilters/DietaryFilters.connector';\n\nexport const RecipeTable: FC<IRecipeTableProps> = ({\n  isCurrentTabFood,\n  isLoading,\n  recipes,\n  onRecipeClick\n}) => (\n  !isCurrentTabFood\n    ? <div>\n      <DietaryFiltersConnector />\n      {\n        isLoading\n        ? <div className='c-food-table__loading-spinner-wrapper'>\n          <LoadingSpinner />\n        </div>\n        : <ImageGrid data={recipes} onClick={onRecipeClick} />\n      }\n    </div>\n    : null\n);\n","import { connect } from 'react-redux';\nimport {\n  RecipeTable\n} from './RecipeTable';\nimport {\n  selectIsCurrentTabFood\n} from '../../store';\nimport {\n  selectVisibleRecipeData,\n  recipeItemClicked,\n  selectIsCurrentSeasonRecipesLoading\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\nimport { IState } from '../../interfaces';\nimport {\n  IRecipeTableInputProps,\n  IRecipeTableDispatchProps\n} from './RecipeTable.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (\n  state: IState\n): IRecipeTableInputProps => {\n  return {\n    isCurrentTabFood: selectIsCurrentTabFood(state),\n    isLoading: selectIsCurrentSeasonRecipesLoading(state),\n    recipes: selectVisibleRecipeData(state)\n  };\n};\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IRecipeTableDispatchProps => {\n  return {\n    onRecipeClick: (recipeItemId) => dispatch(recipeItemClicked(recipeItemId))\n  };\n};\n\nexport const RecipeTableConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecipeTable);\n","import React, { FC } from 'react';\n\nimport './SearchBar.scss';\n\nimport { ISearchBarProps } from './SearchBar.interface';\n\nimport {\n  BareButton,\n  CrossIcon,\n  MagnifyingGlassIcon,\n  Input\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nconst getSearchBarClassName = (isSearchBarVisible: boolean) => (\n  'c-search-bar' +\n    (\n      isSearchBarVisible\n        ? ' c-search-bar--show-full'\n        : ''\n    )\n);\n\nconst focusOnInputIfSearchVisible = (\n  ref: HTMLDivElement | undefined,\n  isSearchBarVisible: boolean\n) => {\n  if (ref && isSearchBarVisible) {\n    const input = ref.querySelector('input');\n    if (input) {\n      input.focus();\n    }\n  }\n};\n\nexport const SearchBar: FC<ISearchBarProps> = ({\n  isSearchBarVisible,\n  onHideSearchBar,\n  onSearchChanged,\n  onShowSearchBar\n}) => (\n  <div className={getSearchBarClassName(isSearchBarVisible)}\n    ref={\n      (ref: HTMLDivElement) => (\n        focusOnInputIfSearchVisible(ref, isSearchBarVisible)\n      )\n    }>\n    <Input className='c-search-bar__input'\n      onChange={(newSearchTerm) => onSearchChanged(newSearchTerm)}\n      placeholder='Search' />\n    {\n      isSearchBarVisible\n        ? <BareButton className='c-search-bar__search-button'\n            onClick={onHideSearchBar}>\n            <CrossIcon />\n          </BareButton>\n        : <BareButton className='c-search-bar__search-button'\n            onClick={onShowSearchBar}>\n            <MagnifyingGlassIcon />\n          </BareButton>\n    }\n  </div>\n);\n","import { connect } from 'react-redux';\nimport {\n  SearchBar\n} from './SearchBar';\nimport {\n  searchBarChanged,\n  selectIsSearchBarVisible,\n  showSearchBar,\n  hideSearchBar\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\nimport {\n  ISearchBarDispatchProps,\n  ISearchBarInputProps\n} from './SearchBar.interface';\nimport { Dispatch } from 'redux';\nimport { IState } from '../../interfaces';\n\nconst mapStateToProps = (state: IState): ISearchBarInputProps => ({\n  isSearchBarVisible: selectIsSearchBarVisible(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): ISearchBarDispatchProps => ({\n  onHideSearchBar: () => dispatch(hideSearchBar()),\n  onSearchChanged: (newSearchTerm: string) => (\n    dispatch((searchBarChanged(newSearchTerm)))\n  ),\n  onShowSearchBar: () => dispatch(showSearchBar())\n});\n\nexport const SearchBarConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchBar);\n","import React, { Fragment, FC } from 'react';\n\nimport './SeasonsForFood.scss';\n\nimport {\n  TextMedium,\n  TextSmall,\n  BareButton,\n  TextHeadingSmall\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport { ISeasonForFoodProps } from './SeasonsForFood.interface';\n\nexport const SeasonsForFood: FC<ISeasonForFoodProps> = ({\n  isLoading,\n  seasonsSelectedForFood,\n  onSeasonSelected\n}) => (\n  !isLoading\n    ? <Fragment>\n    <TextHeadingSmall\n      className='c-season-for-food__list-heading'>\n      When are they in season?\n    </TextHeadingSmall>\n    <div className='c-season-for-food__list'>\n      {\n        seasonsSelectedForFood && seasonsSelectedForFood.map((\n          {\n            isSelected,\n            name\n          },\n          seasonIndex\n        ) => (\n          <BareButton\n            key={name}\n            className={\n              `c-season-for-food__season` +\n                (\n                  isSelected\n                    ? ` c-season-for-food__season--selected`\n                    : ''\n                )\n              }\n            onClick={ () => onSeasonSelected(seasonIndex) }>\n            <TextMedium>\n              { name.substring(0, 3) }\n            </TextMedium>\n          </BareButton>\n        ))\n      }\n    </div>\n    <div\n      className={`c-season-food__in-season-key ` +\n        `c-season-food__in-season-key--in-season`\n      }>\n      <TextSmall className='c-season-food__in-season-key__text'>\n        In season\n      </TextSmall>\n    </div>\n    <div\n      className='c-season-food__in-season-key'>\n      <TextSmall className='c-season-food__in-season-key__text'>\n        Not in season\n      </TextSmall>\n    </div>\n  </Fragment>\n  : null\n);\n","import { connect } from 'react-redux';\nimport {\n  SeasonsForFood\n} from './SeasonsForFood';\nimport {\n  selectSeasonsSelectedForFood,\n  selectIsFoodDataOrBasicSeasonsLoading,\n  foodDetailsSelectSeason\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nimport { IState } from '../../interfaces';\nimport {\n  ISeasonForFoodInputProps,\n  ISeasonForFoodDispatchProps\n} from './SeasonsForFood.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (\n  state: IState\n): ISeasonForFoodInputProps => ({\n  isLoading: selectIsFoodDataOrBasicSeasonsLoading(state),\n  seasonsSelectedForFood: selectSeasonsSelectedForFood(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): ISeasonForFoodDispatchProps => ({\n  onSeasonSelected: (seasonIndex: number) => (\n    dispatch(foodDetailsSelectSeason(seasonIndex))\n  )\n});\n\nexport const SeasonsForFoodConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SeasonsForFood);\n","import React, { FC } from 'react';\n\nimport {\n  PrimaryButton\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport {\n  IViewWebAppVersionDispatchProps\n} from './ViewWebAppVersion.interface';\n\nexport const ViewWebAppVersion: FC<IViewWebAppVersionDispatchProps> = ({\n  onGoToWebVersion\n}) => (\n  <PrimaryButton onClick={onGoToWebVersion}>\n    To web version\n  </PrimaryButton>\n);\n","import { connect } from 'react-redux';\nimport {\n  ViewWebAppVersion\n} from './ViewWebAppVersion';\nimport {\n  goToWebVersion\n} from '../../store';\nimport { IViewWebAppVersionDispatchProps } from './ViewWebAppVersion.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IViewWebAppVersionDispatchProps => ({\n  onGoToWebVersion: () => dispatch((goToWebVersion()))\n});\n\nexport const ViewWebAppVersionConnector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ViewWebAppVersion);\n","import React, { FC } from 'react';\nimport './ViewAppLinks.scss';\nimport {\n  AndroidAppDownload\n} from '../AndroidAppDownload/AndroidAppDownload';\nimport {\n  ViewWebAppVersionConnector\n} from '../ViewWebAppVersion/ViewWebAppVersion.connector';\nimport { IOSAppDownload } from '../IOSAppDownload/IOSAppDownload';\n\nexport const ViewAppLinks: FC<{}> = () => (\n  <div className='c-view-app-links'>\n    <IOSAppDownload />\n    <AndroidAppDownload />\n    <ViewWebAppVersionConnector />\n  </div>\n);\n","import React, { FC } from 'react';\n\nimport './WhyEatSeasonal.scss';\n\nimport {\n  TextHeadingLarge\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport {\n  ISummaryColumnList,\n  SummaryColumnList\n} from '../../components-layout';\n\nimport columns from './why-eat-seasonal-columns.json';\n\nconst summaryColumns: ISummaryColumnList = {\n  columns\n};\n\nexport const WhyEatSeasonal: FC = () => (\n  <div className='c-why-eat-seasonal'>\n    <h2 className='c-why-eat-seasonal__heading'>\n      <TextHeadingLarge>\n        Why Eat Seasonal?\n      </TextHeadingLarge>\n    </h2>\n    <SummaryColumnList {...summaryColumns} />\n  </div>\n);\n","import React, { FC } from 'react';\nimport './AllSeasons.scss';\nimport {\n  IAllSeasonsProps\n} from './AllSeasons.interface';\nimport { SeasonNameView, ImageGrid } from '../../components-layout';\nimport { LoadingSpinner } from '@chrisb-dev/seasonal-shared-frontend-components';\n\nimport InfiniteScroll from 'react-infinite-scroller';\n\nexport const AllSeasons: FC<IAllSeasonsProps> = ({\n  isLoading,\n  onFoodClick,\n  seasons,\n  hasMoreSeasonsInAllSeasonsView,\n  increaseNumberOfAllFoodSeasonsInView\n}) => (\n  isLoading\n  ? <div className='c-all-seasons__loading-spinner-wrapper'>\n    <LoadingSpinner />\n  </div>\n  : <div className='c-all-seasons'>\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={increaseNumberOfAllFoodSeasonsInView}\n      hasMore={hasMoreSeasonsInAllSeasonsView}\n      loader={<LoadingSpinner key='all-seasons-spinner' />}>\n    {\n      seasons && seasons.map(({ name, food }) => (\n        <div className='c-all-seasons__season' key={name}>\n          <SeasonNameView name={name}></SeasonNameView>\n          <ImageGrid data={food}\n            onClick={onFoodClick} skipAnimation={true} />\n        </div>\n      ))\n    }\n    </InfiniteScroll>\n  </div>\n);\n","import { connect } from 'react-redux';\nimport {\n  AllSeasons\n} from './AllSeasons';\n\nimport { IState } from '../../interfaces';\nimport {\n  IAllSeasonsInputProps,\n  IAllSeasonsDispatchProps\n} from './AllSeasons.interface';\nimport { Dispatch } from 'redux';\nimport {\n  foodItemClicked,\n  selectAllSeasonsVisibleFoodData,\n  selectIsAllSeasonsFoodLoading,\n  increaseNumberOfAllFoodSeasonsInView,\n  selectHasMoreSeasonsInAllSeasonsView\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nconst mapStateToProps = (\n  state: IState\n): IAllSeasonsInputProps => ({\n  hasMoreSeasonsInAllSeasonsView: selectHasMoreSeasonsInAllSeasonsView(state),\n  isLoading: selectIsAllSeasonsFoodLoading(state),\n  seasons: selectAllSeasonsVisibleFoodData(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IAllSeasonsDispatchProps => ({\n  increaseNumberOfAllFoodSeasonsInView: () => (\n    dispatch(increaseNumberOfAllFoodSeasonsInView())\n  ),\n  onFoodClick: (foodItemId: string) => dispatch(foodItemClicked(foodItemId))\n});\n\nexport const AllSeasonsConnector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AllSeasons);\n","import React, { FC } from 'react';\nimport './AllSeasonsGraph.scss';\nimport {\n  IAllSeasonsGraphInputProps\n} from './AllSeasonsGraph.interface';\nimport {\n  BarChart,\n  XAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Bar,\n  YAxis\n} from 'recharts';\nimport {\n  TextHeadingMedium,\n  TextMedium\n} from '@chrisb-dev/seasonal-shared-frontend-components';\n\nexport const AllSeasonsGraph: FC<IAllSeasonsGraphInputProps> = ({\n  foodInSeasonGraphData\n}) => (\n  foodInSeasonGraphData\n    ? <div className='c-all-seasons-graph'>\n        <TextHeadingMedium className='c-all-seasons-graph__heading'>\n          Number of food items in seasons\n        </TextHeadingMedium>\n        <ResponsiveContainer width='100%' height={400}>\n          <BarChart data={foodInSeasonGraphData}>\n            <XAxis dataKey='name' />\n            <YAxis\n              dataKey='Number of food items in season'\n              allowDecimals={false} />\n            <Tooltip />\n            <Bar dataKey='Number of food items in season' fill='#5CB5CD' />\n          </BarChart>\n        </ResponsiveContainer>\n        <TextMedium className='c-all-seasons-graph__text'>\n          Enter some text in the search bar to find when certain items are in season\n        </TextMedium>\n      </div>\n    : null\n);\n","import { connect } from 'react-redux';\nimport {\n  AllSeasonsGraph\n} from './AllSeasonsGraph';\n\nimport { IState } from '../../interfaces';\nimport {\n  IAllSeasonsGraphInputProps\n} from './AllSeasonsGraph.interface';\nimport {\n  selectFoodInSeasonGraphData\n} from '@chrisb-dev/seasonal-shared-frontend-redux';\n\nconst mapStateToProps = (\n  state: IState\n): IAllSeasonsGraphInputProps => ({\n  foodInSeasonGraphData: selectFoodInSeasonGraphData(state)\n});\n\nexport const AllSeasonsGraphConnector = connect(\n  mapStateToProps\n)(AllSeasonsGraph);\n","import React, { FC } from 'react';\n\nimport './FoodDetailsPage.scss';\n\nimport {\n  FoodDetailsLoaderConnecter,\n  FoodDetailsTopSectionConnecter,\n  PageWithMenu,\n  SeasonsForFoodConnecter,\n  RecipesForFoodConnecter\n} from '../../components-main';\n\nexport const FoodDetailsPage: FC<{}> = () => (\n  <PageWithMenu>\n    <div className='c-food-details-page__main'>\n      <FoodDetailsTopSectionConnecter />\n      <FoodDetailsLoaderConnecter />\n      <RecipesForFoodConnecter />\n      <SeasonsForFoodConnecter />\n    </div>\n  </PageWithMenu>\n);\n","import React, { FC } from 'react';\n\nimport './FoodTablePage.scss';\n\nimport {\n  BottomTabsConnecter,\n  CurrentSeasonNameConnecter,\n  FoodTableConnecter,\n  PageWithMenu,\n  RecipeTableConnecter\n} from '../../components-main';\n\nexport const FoodTablePage: FC<{}> = () => (\n  <PageWithMenu>\n    <div className='c-food-table-page__main'>\n      <CurrentSeasonNameConnecter />\n      <FoodTableConnecter />\n      <RecipeTableConnecter />\n      <BottomTabsConnecter />\n    </div>\n  </PageWithMenu>\n);\n","import React, { FC } from 'react';\n\nimport './IntroPage.scss';\n\nimport {\n  AboutEatSeasonal,\n  ViewAppLinks,\n  WhyEatSeasonal\n} from '../../components-main';\n\nexport const IntroPage: FC = () => (\n  <div className='c-intro-page'>\n    <div className='c-intro-page__top-section'>\n      <img alt='Eat Seasonal splash'\n        className='c-intro-page__splash-image' src='/splash.png'/>\n      <ViewAppLinks />\n    </div>\n    <AboutEatSeasonal />\n    <WhyEatSeasonal />\n    <div className='c-intro-page__mobile-extra-app-links'>\n      <ViewAppLinks />\n    </div>\n  </div>\n);\n","import React, { FC } from 'react';\nimport {\n  PageWithMenu,\n  AllSeasonsConnector,\n  AllSeasonsGraphConnector\n} from '../../components-main';\n\nimport './AllSeasonsPage.scss';\n\nexport const AllSeasonsPage: FC<{}> = () => (\n  <PageWithMenu>\n    <div className='c-all-seasons-page'>\n      <AllSeasonsGraphConnector />\n      <AllSeasonsConnector />\n    </div>\n  </PageWithMenu>\n);\n","import React, { FC } from 'react';\n\nimport {\n  IntroPage,\n  FoodTablePage,\n  FoodDetailsPage,\n  AllSeasonsPage\n} from '../components-pages';\nimport './App.scss';\n\nimport { Provider } from 'react-redux';\nimport { store, storeHistory } from '../store/reducers';\n\nimport { Route, Switch } from 'react-router';\n\nimport {\n  FOOD_TABLE_URL,\n  LANDING_URL,\n  FOOD_DETAILS_URL,\n  ALL_SEASONS_URL\n} from '../const';\n\nimport { ConnectedRouter } from 'connected-react-router';\n\nexport const App: FC<{}> = () => (\n  <Provider store={store}>\n    <ConnectedRouter history={storeHistory}>\n      <div className='c-app'>\n        <Switch>\n          <Route path={LANDING_URL} component={IntroPage} exact />\n          <Route path={FOOD_TABLE_URL} component={FoodTablePage} />\n          <Route path={`${FOOD_DETAILS_URL}/:id`} component={FoodDetailsPage} />\n          <Route path={ALL_SEASONS_URL} component={AllSeasonsPage} />\n        </Switch>\n      </div>\n    </ConnectedRouter>\n  </Provider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport './index.scss';\nimport { App } from './components-app/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootElement = document.getElementById('root');\nif (rootElement && rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./all-basic-season.selectors\"));\n__export(require(\"./all-seasons-with-food.selectors\"));\n__export(require(\"./country.selectors\"));\n__export(require(\"./current-food-details.selectors\"));\n__export(require(\"./current-season.selectors\"));\n__export(require(\"./settings.selectors\"));\n__export(require(\"./ui.selectors\"));\n__export(require(\"./combined-selectors\"));\n","import posed from 'react-pose';\n\nimport {\n  DEFAULT_ANIMATION_TIME\n} from './animations.const';\n\nexport const fadeInOutAnimation = ({\n  enterDelay = 0,\n  exitDelay = 0,\n  enterDuration = DEFAULT_ANIMATION_TIME,\n  exitDuration = DEFAULT_ANIMATION_TIME,\n  type = 'div'\n} = {}) => posed[type]({\n  enter: {\n    delay: enterDelay,\n    opacity: 1,\n    transition: {\n      duration: enterDuration\n    }\n  },\n  exit: {\n    delay: exitDelay,\n    opacity: 0,\n    transition: {\n      duration: exitDuration\n    }\n  }\n});\n","export const DEFAULT_ANIMATION_TIME = 500;\n","import { ICancelablePromise } from '../../interfaces';\n\nexport const makePromiseCancelable = <T>(\n  promise: Promise<T>\n): ICancelablePromise<T> => {\n  let hasCancelled = false;\n\n  const wrappedPromise = new Promise<T>((resolve, reject) => {\n      promise.then(\n          (val) => hasCancelled ? reject({isCanceled: true}) : resolve(val),\n          (error) => hasCancelled ? reject({isCanceled: true}) : reject(error)\n      );\n  });\n\n  return {\n      promise: wrappedPromise,\n      cancel() {\n          hasCancelled = true;\n      }\n  };\n};\n","export const setStoredData = <T>(key: string, data: T) => {\n  localStorage.setItem(key, JSON.stringify(data));\n};\n\nexport const getStoredData = <T>(key: string): T | null => {\n  const storedData = localStorage.getItem(key);\n  return storedData && JSON.parse(storedData);\n};\n","export * from './Animations';\n\nexport * from './functions';\n"],"sourceRoot":""}