version: 2.1

commands:
  install-dependencies:
    steps:
      - run:
          name: Install dependencies
          command: yarn install

jobs:

  backend_integration_tests:
    docker:
      - image: circleci/node:12.14
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Run backend integration tests
          command: IS_CI=true ./tests/backend-run-integration-tests.sh

  backend_deploy:
    docker:
      - image: circleci/node:12.14
    steps:
      - checkout
      - install-dependencies
      - run:
          name: Copy env config
          command: cp packages/backend/.env-ci.yml packages/backend/.env.yml
      - run:
          name: Build dist version
          command: |
            yarn workspace @chrisb-dev/seasonal-backend build
            cp -r ./packages/backend/dist/* ./packages/backend/
      - run:
          name: Deploy backend
          command: |
            yarn workspace @chrisb-dev/seasonal-backend deploy

  unit_tests:
    docker:
      - image: circleci/node:12.14
    steps:
      - checkout
      - install-dependencies
      - run:
          name: Run backend unit tests
          command: yarn workspace @chrisb-dev/seasonal-backend test --runInBand --coverage
      - run:
          name: Run frontend unit tests
          command: yarn workspace @chrisb-dev/seasonal-frontend test --runInBand --coverage
      - run:
          name: Run frontend admin unit tests
          command: yarn workspace @chrisb-dev/seasonal-frontend-admin test --runInBand --coverage
      - run:
          name: Run mobile unit tests
          command: yarn workspace @chrisb-dev/seasonal-mobile test --runInBand --coverage
      - run:
          name: Run shared frontend components tests
          command: yarn workspace @chrisb-dev/seasonal-shared-frontend-components test --runInBand --coverage
      - run:
          name: Run shared frontend redux tests
          command: yarn workspace @chrisb-dev/seasonal-shared-frontend-redux test --runInBand --coverage
      - run:
          name: Run shared frontend utilities tests
          command: yarn workspace @chrisb-dev/seasonal-shared-frontend-utilities test --runInBand --coverage
      - run:
          name: Upload Coverage Results
          command: |
            curl -s https://codecov.io/bash | bash -s -- \
              -f "/home/circleci/project/packages/backend/coverage/lcov.info" \
              -Z || echo 'Codecov upload failed'
            curl -s https://codecov.io/bash | bash -s -- \
              -f "/home/circleci/project/packages/frontend/coverage/lcov.info" \
              -Z || echo 'Codecov upload failed'
            curl -s https://codecov.io/bash | bash -s -- \
              -f "/home/circleci/project/packages/frontend-admin/coverage/lcov.info" \
              -Z || echo 'Codecov upload failed'
            curl -s https://codecov.io/bash | bash -s -- \
              -f "/home/circleci/project/packages/mobile/coverage/lcov.info" \
              -Z || echo 'Codecov upload failed'
            curl -s https://codecov.io/bash | bash -s -- \
              -f "/home/circleci/project/packages/shared-frontend-components/coverage/lcov.info" \
              -Z || echo 'Codecov upload failed'
            curl -s https://codecov.io/bash | bash -s -- \
              -f "/home/circleci/project/packages/shared-frontend-redux/coverage/lcov.info" \
              -Z || echo 'Codecov upload failed'
            curl -s https://codecov.io/bash | bash -s -- \
              -f "/home/circleci/project/packages/shared-frontend-utilities/coverage/lcov.info" \
              -Z || echo 'Codecov upload failed'

  web_e2e_tests:
    docker:
      - image: circleci/node:12.14
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Run frontend e2e tests
          command: IS_CI=true ./tests/web-run-e2e-tests.sh
      - store_artifacts:
          path: ~/logs

  frontend_deploy:
    docker:
      - image: circleci/node:12.14-browsers
    steps:
      - checkout
      - install-dependencies
      - add_ssh_keys:
          fingerprints:
            - cd:42:e8:de:36:e3:c0:f9:0d:6f:55:27:47:57:ab:4b
      - run:
          name: Git configuration
          command: |
            git config user.email "chrisbery4545@googlemail.com"
            git config user.name "chrisbery4545"
      - run:
          name: Deploy frontend
          command: yarn frontend:deploy

  frontend_admin_deploy:
    docker:
      - image: circleci/node:12.14
    steps:
      - checkout
      - install-dependencies
      - add_ssh_keys:
          fingerprints:
            - 3f:1a:98:c5:19:4c:cf:92:c8:5d:f6:eb:2d:d5:37:f9
      - run:
          name: Deploy frontend admin
          command: yarn frontend-admin:deploy

workflows:
  version: 2
  seasonal:
    jobs:
      - unit_tests
      - backend_approval:
          type: approval
      - backend_integration_tests:
          requires:
            - backend_approval
            - unit_tests
      - backend_deploy:
          requires:
            - backend_integration_tests
      - frontend_approval:
          type: approval
      - web_e2e_tests:
          requires:
            - frontend_approval
            - unit_tests
      - frontend_deploy:
          requires:
            - web_e2e_tests
      - frontend_admin_approval:
          type: approval
      - frontend_admin_deploy:
          requires:
            - frontend_admin_approval
            - unit_tests
