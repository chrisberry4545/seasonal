version: 2.1

commands:
  install-dependencies:
    steps:
      - restore_cache:
          name: Restore dependency cache
          keys:
            - seasonal-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: |
            npm i
            npm run bootstrap
      - save_cache:
          name: Save dependency cache
          paths:
            - node_modules
          key: seasonal-deps-{{ checksum "package-lock.json" }}

jobs:
  backend_test:
    docker:
      - image: circleci/node:10.15
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Run backend tests
          command: ./tests/backend-run-functional-tests.sh

  backend_deploy:
    docker:
      - image: circleci/node:10.15
    steps:
      - checkout
      - install-dependencies
      - run:
          name: Copy env config
          command: |
            cd ./packages/backend
            cp .env-ci.yml .env.yml
      - run:
          name: Build dist version
          command: |
            cd ./packages/backend
            npm run build
            npm run move-dist-to-top-level
      - run:
          name: Install Serverless CLI
          command: sudo npm i -g serverless
      - run:
          name: Deploy backend
          command: |
            cd ./packages/backend
            sls deploy --stage prod

  frontend_deploy:
    docker:
      - image: circleci/node:10.15
    steps:
      - checkout
      - install-dependencies
      - add_ssh_keys:
          fingerprints:
            - cd:42:e8:de:36:e3:c0:f9:0d:6f:55:27:47:57:ab:4b
      - run:
          name: Git configuration
          command: |
            git config user.email "chrisbery4545@googlemail.com"
            git config user.name "chrisbery4545"
      - run:
          name: Deploy frontend
          command: |
            cd ./packages/frontend
            npm run deploy

workflows:
  version: 2
  backend:
    jobs:
      - backend_test
      - backend_approval:
          type: approval
          filters:
            branches:
              only:
                - master
          requires:
           - backend_test
      - backend_deploy:
          requires:
            - backend_approval
      - frontend_approval:
          type: approval
          filters:
            branches:
              only:
                - master
      - frontend_deploy:
          requires:
            - frontend_approval
